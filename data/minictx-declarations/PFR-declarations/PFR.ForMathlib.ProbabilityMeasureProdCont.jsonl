{"name":"MeasureTheory.ProbabilityMeasure.continuous_prod_of_finite","declaration":"/-- The product of two probability measures on finite spaces depend continuously on the two\nprobability measures.\nTODO: In Mathlib, this should be done on all separable metrizable spaces. -/\ntheorem MeasureTheory.ProbabilityMeasure.continuous_prod_of_finite {α : Type u_1} {β : Type u_2} [Finite α] [TopologicalSpace α] [DiscreteTopology α] [MeasurableSpace α] [BorelSpace α] [Finite β] [TopologicalSpace β] [DiscreteTopology β] [MeasurableSpace β] [BorelSpace β] : Continuous fun x =>\n  match x with\n  | (μ, ν) => MeasureTheory.ProbabilityMeasure.prod μ ν"}
{"name":"MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_apply_tendsto","declaration":"/-- Probability measures on a finite space tend to a limit if and only if the probability masses\nof all points tend to the corresponding limits. -/\ntheorem MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_apply_tendsto {ι : Type u_1} {α : Type u_2} {L : Filter ι} [Finite α] [TopologicalSpace α] [DiscreteTopology α] [MeasurableSpace α] [BorelSpace α] (μs : ι → MeasureTheory.ProbabilityMeasure α) (μ : MeasureTheory.ProbabilityMeasure α) : Filter.Tendsto μs L (nhds μ) ↔\n  ∀ (a : α), Filter.Tendsto (fun x => (fun s => (↑↑↑(μs x) s).toNNReal) {a}) L (nhds ((fun s => (↑↑↑μ s).toNNReal) {a}))"}
{"name":"MeasureTheory.t1Space_probabilityMeasure_of_finite","declaration":"instance MeasureTheory.t1Space_probabilityMeasure_of_finite {α : Type u_1} [Finite α] [TopologicalSpace α] [DiscreteTopology α] [MeasurableSpace α] [BorelSpace α] : T1Space (MeasureTheory.ProbabilityMeasure α)"}
{"name":"MeasureTheory.ProbabilityMeasure.tendsto_prod_of_tendsto_of_tendsto","declaration":"/-- If probability measures on two finite spaces tend to limits, then the products of them\non the product space tend to the product of the limits.\nTODO: In Mathlib, this should be done on all separable metrizable spaces. -/\ntheorem MeasureTheory.ProbabilityMeasure.tendsto_prod_of_tendsto_of_tendsto {ι : Type u_1} {L : Filter ι} {α : Type u_2} {β : Type u_3} [Finite α] [TopologicalSpace α] [DiscreteTopology α] [MeasurableSpace α] [BorelSpace α] [Finite β] [TopologicalSpace β] [DiscreteTopology β] [MeasurableSpace β] [BorelSpace β] (μs : ι → MeasureTheory.ProbabilityMeasure α) (μ : MeasureTheory.ProbabilityMeasure α) (μs_lim : Filter.Tendsto μs L (nhds μ)) (νs : ι → MeasureTheory.ProbabilityMeasure β) (ν : MeasureTheory.ProbabilityMeasure β) (νs_lim : Filter.Tendsto νs L (nhds ν)) : Filter.Tendsto (fun i => MeasureTheory.ProbabilityMeasure.prod (μs i) (νs i)) L\n  (nhds (MeasureTheory.ProbabilityMeasure.prod μ ν))"}
