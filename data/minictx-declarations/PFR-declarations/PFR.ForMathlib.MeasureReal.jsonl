{"name":"sum_measure_preimage_singleton'","declaration":"/-- Variant of `sum_measure_preimage_singleton` using real numbers rather than extended nonnegative\nreals. -/\ntheorem sum_measure_preimage_singleton' {Ω : Type u_1} [MeasurableSpace Ω] (μ : MeasureTheory.Measure Ω) [MeasureTheory.IsProbabilityMeasure μ] {T : Type u} [Fintype T] [MeasurableSpace T] [MeasurableSingletonClass T] {Y : Ω → T} (hY : Measurable Y) : (Finset.sum Finset.univ fun y => (↑↑μ (Y ⁻¹' {y})).toReal) = 1"}
{"name":"MeasureTheory.measureReal_symmDiff_le","declaration":"theorem MeasureTheory.measureReal_symmDiff_le {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} (s t u : Set α),\n  autoParam (↑↑μ s ≠ ⊤) _auto✝ →\n    autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (symmDiff s u) ≤ μ.real (symmDiff s t) + μ.real (symmDiff t u)"}
{"name":"Finset.sum_toReal_measure_singleton","declaration":"theorem Finset.sum_toReal_measure_singleton {S : Type u_1} {s : Finset S} : ∀ {x : MeasurableSpace S} [inst : MeasurableSingletonClass S] (μ : MeasureTheory.Measure S)\n  [inst : MeasureTheory.IsFiniteMeasure μ], (Finset.sum s fun x_1 => (↑↑μ {x_1}).toReal) = (↑↑μ ↑s).toReal"}
{"name":"MeasureTheory.exists_nonempty_inter_of_measureReal_univ_lt_sum_measureReal","declaration":"/-- Pigeonhole principle for measure spaces: if `s` is a `Finset` and\n`∑ i in s, μ.real (t i) > μ.real univ`, then one of the intersections `t i ∩ t j` is not empty. -/\ntheorem MeasureTheory.exists_nonempty_inter_of_measureReal_univ_lt_sum_measureReal {α : Type u_1} {ι : Type u_3} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α) [MeasureTheory.IsFiniteMeasure μ] {s : Finset ι} {t : ι → Set α} (h : ∀ i ∈ s, MeasurableSet (t i)) (H : μ.real Set.univ < Finset.sum s fun i => μ.real (t i)) : ∃ i ∈ s, ∃ j ∈ s, ∃ (_ : i ≠ j), Set.Nonempty (t i ∩ t j)"}
{"name":"MeasureTheory.measureReal_le_measureReal_union_left","declaration":"theorem MeasureTheory.measureReal_le_measureReal_union_left {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  autoParam (↑↑μ t ≠ ⊤) _auto✝ → μ.real s ≤ μ.real (s ∪ t)"}
{"name":"sum_toReal_measure_singleton","declaration":"theorem sum_toReal_measure_singleton {S : Type u_1} [Fintype S] : ∀ {x : MeasurableSpace S} [inst : MeasurableSingletonClass S] (μ : MeasureTheory.Measure S)\n  [inst : MeasureTheory.IsFiniteMeasure μ],\n  (Finset.sum Finset.univ fun x_1 => (↑↑μ {x_1}).toReal) = (↑↑μ Set.univ).toReal"}
{"name":"MeasureTheory.measure_symmDiff_eq_top","declaration":"theorem MeasureTheory.measure_symmDiff_eq_top {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α}, ↑↑μ s ≠ ⊤ → ↑↑μ t = ⊤ → ↑↑μ (symmDiff s t) = ⊤"}
{"name":"MeasureTheory.measureReal_mono","declaration":"theorem MeasureTheory.measureReal_mono {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  s₁ ⊆ s₂ → autoParam (↑↑μ s₂ ≠ ⊤) _auto✝ → μ.real s₁ ≤ μ.real s₂"}
{"name":"MeasureTheory.measureReal_symmDiff_eq","declaration":"theorem MeasureTheory.measureReal_symmDiff_eq {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  MeasurableSet s →\n    MeasurableSet t →\n      autoParam (↑↑μ s ≠ ⊤) _auto✝ →\n        autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (symmDiff s t) = μ.real (s \\ t) + μ.real (t \\ s)"}
{"name":"MeasureTheory.measureReal_eq_measureReal_of_between_null_diff","declaration":"theorem MeasureTheory.measureReal_eq_measureReal_of_between_null_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ s₃ : Set α},\n  s₁ ⊆ s₂ →\n    s₂ ⊆ s₃ →\n      μ.real (s₃ \\ s₁) = 0 → autoParam (↑↑μ (s₃ \\ s₁) ≠ ⊤) _auto✝ → μ.real s₁ = μ.real s₂ ∧ μ.real s₂ = μ.real s₃"}
{"name":"MeasureTheory.measureReal_empty","declaration":"theorem MeasureTheory.measureReal_empty {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α}, μ.real ∅ = 0"}
{"name":"MeasureTheory.nonempty_inter_of_measureReal_lt_add'","declaration":"/-- If two sets `s` and `t` are included in a set `u` of finite measure,\nand `μ.real s + μ.real t > μ.real u`, then `s` intersects `t`.\nVersion assuming that `s` is measurable. -/\ntheorem MeasureTheory.nonempty_inter_of_measureReal_lt_add' {α : Type u_1} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α) {s : Set α} {t : Set α} {u : Set α} (hs : MeasurableSet s) (h's : s ⊆ u) (h't : t ⊆ u) (h : μ.real u < μ.real s + μ.real t) (hu : autoParam (↑↑μ u ≠ ⊤) _auto✝) : Set.Nonempty (s ∩ t)"}
{"name":"MeasureTheory.measureReal_union_null_iff","declaration":"theorem MeasureTheory.measureReal_union_null_iff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  autoParam (↑↑μ s₁ ≠ ⊤) _auto✝ →\n    autoParam (↑↑μ s₂ ≠ ⊤) _auto✝¹ → (μ.real (s₁ ∪ s₂) = 0 ↔ μ.real s₁ = 0 ∧ μ.real s₂ = 0)"}
{"name":"MeasureTheory.measureReal_nonneg","declaration":"theorem MeasureTheory.measureReal_nonneg {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α}, 0 ≤ μ.real s"}
{"name":"MeasureTheory.Measure.real","declaration":"/-- The real-valued version of a measure. Maps infinite measure sets to zero. Use as `μ.real s`. -/\ndef MeasureTheory.Measure.real {α : Type u_1} : {x : MeasurableSpace α} → MeasureTheory.Measure α → Set α → ℝ"}
{"name":"MeasureTheory.measureReal_union_congr_of_subset","declaration":"theorem MeasureTheory.measureReal_union_congr_of_subset {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ t₁ t₂ : Set α},\n  s₁ ⊆ s₂ →\n    μ.real s₂ ≤ μ.real s₁ →\n      t₁ ⊆ t₂ →\n        μ.real t₂ ≤ μ.real t₁ →\n          autoParam (↑↑μ s₂ ≠ ⊤) _auto✝ → autoParam (↑↑μ t₂ ≠ ⊤) _auto✝¹ → μ.real (s₁ ∪ t₁) = μ.real (s₂ ∪ t₂)"}
{"name":"MeasureTheory.measureReal_zero","declaration":"theorem MeasureTheory.measureReal_zero {α : Type u_1} : ∀ {x : MeasurableSpace α} (s : Set α), 0.real s = 0"}
{"name":"MeasureTheory.measureReal_union_le","declaration":"theorem MeasureTheory.measureReal_union_le {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} (s₁ s₂ : Set α), μ.real (s₁ ∪ s₂) ≤ μ.real s₁ + μ.real s₂"}
{"name":"MeasureTheory.measureReal_union₀'","declaration":"theorem MeasureTheory.measureReal_union₀' {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  MeasureTheory.NullMeasurableSet s μ →\n    MeasureTheory.AEDisjoint μ s t →\n      autoParam (↑↑μ s ≠ ⊤) _auto✝ → autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s ∪ t) = μ.real s + μ.real t"}
{"name":"MeasureTheory.measureReal_biUnion_finset","declaration":"theorem MeasureTheory.measureReal_biUnion_finset {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {ι : Type u_3} {s : Finset ι} {f : ι → Set α},\n  Set.PairwiseDisjoint (↑s) f →\n    (∀ b ∈ s, MeasurableSet (f b)) →\n      autoParam (∀ b ∈ s, ↑↑μ (f b) ≠ ⊤) _auto✝ → μ.real (⋃ b ∈ s, f b) = Finset.sum s fun p => μ.real (f p)"}
{"name":"MeasureTheory.IsProbabilityMeasure.measureReal_univ","declaration":"theorem MeasureTheory.IsProbabilityMeasure.measureReal_univ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : MeasureTheory.IsProbabilityMeasure μ],\n  μ.real Set.univ = 1"}
{"name":"MeasureTheory.measureReal_inter_add_diff₀","declaration":"theorem MeasureTheory.measureReal_inter_add_diff₀ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {t : Set α} (s : Set α),\n  MeasureTheory.NullMeasurableSet t μ → autoParam (↑↑μ s ≠ ⊤) _auto✝ → μ.real (s ∩ t) + μ.real (s \\ t) = μ.real s"}
{"name":"measureReal_preimage_snd_singleton_eq_sum","declaration":"theorem measureReal_preimage_snd_singleton_eq_sum {S : Type u_1} {T : Type u_2} [Fintype S] : ∀ {x : MeasurableSpace S} [inst : MeasurableSingletonClass S] {x_1 : MeasurableSpace T}\n  [inst : MeasurableSingletonClass T] (μ : MeasureTheory.Measure (S × T)) [inst : MeasureTheory.IsFiniteMeasure μ]\n  (y : T), μ.real (Prod.snd ⁻¹' {y}) = Finset.sum Finset.univ fun x_2 => μ.real {(x_2, y)}"}
{"name":"MeasureTheory.measureReal_add_measureReal_compl₀","declaration":"theorem MeasureTheory.measureReal_add_measureReal_compl₀ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : MeasureTheory.IsFiniteMeasure μ] {s : Set α},\n  MeasureTheory.NullMeasurableSet s μ → μ.real s + μ.real sᶜ = μ.real Set.univ"}
{"name":"MeasureTheory.measureReal_diff","declaration":"theorem MeasureTheory.measureReal_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  s₂ ⊆ s₁ → MeasurableSet s₂ → autoParam (↑↑μ s₁ ≠ ⊤) _auto✝ → μ.real (s₁ \\ s₂) = μ.real s₁ - μ.real s₂"}
{"name":"MeasureTheory.measureReal_iUnion_fintype","declaration":"theorem MeasureTheory.measureReal_iUnion_fintype {α : Type u_1} {β : Type u_2} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : Fintype β] {f : β → Set α},\n  Pairwise (Disjoint on f) →\n    (∀ (i : β), MeasurableSet (f i)) →\n      autoParam (∀ (i : β), ↑↑μ (f i) ≠ ⊤) _auto✝ → μ.real (⋃ b, f b) = Finset.sum Finset.univ fun p => μ.real (f p)"}
{"name":"MeasureTheory.measureReal_diff_null'","declaration":"theorem MeasureTheory.measureReal_diff_null' {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  μ.real (s₁ ∩ s₂) = 0 → autoParam (↑↑μ s₁ ≠ ⊤) _auto✝ → μ.real (s₁ \\ s₂) = μ.real s₁"}
{"name":"MeasureTheory.measureReal_smul_apply","declaration":"theorem MeasureTheory.measureReal_smul_apply {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α} (c : ENNReal), (c • μ).real s = c.toReal • μ.real s"}
{"name":"Finset.sum_measure_singleton","declaration":"theorem Finset.sum_measure_singleton {S : Type u_1} {s : Finset S} : ∀ {x : MeasurableSpace S} [inst : MeasurableSingletonClass S] (μ : MeasureTheory.Measure S),\n  (Finset.sum s fun x_1 => ↑↑μ {x_1}) = ↑↑μ ↑s"}
{"name":"MeasureTheory.measureReal_union_add_inter₀","declaration":"theorem MeasureTheory.measureReal_union_add_inter₀ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {t : Set α} (s : Set α),\n  MeasureTheory.NullMeasurableSet t μ →\n    autoParam (↑↑μ s ≠ ⊤) _auto✝ → autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s ∪ t) + μ.real (s ∩ t) = μ.real s + μ.real t"}
{"name":"MeasureTheory.nonempty_of_measureReal_ne_zero","declaration":"theorem MeasureTheory.nonempty_of_measureReal_ne_zero {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α}, μ.real s ≠ 0 → Set.Nonempty s"}
{"name":"Mathlib.Meta.Positivity.evalMeasureReal","declaration":"/-- Extension for the `positivity` tactic: applications of `μ.real` are nonnegative. -/\ndef Mathlib.Meta.Positivity.evalMeasureReal  : Mathlib.Meta.Positivity.PositivityExt"}
{"name":"MeasureTheory.measureReal_mono_null","declaration":"theorem MeasureTheory.measureReal_mono_null {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  s₁ ⊆ s₂ → μ.real s₂ = 0 → autoParam (↑↑μ s₂ ≠ ⊤) _auto✝ → μ.real s₁ = 0"}
{"name":"measureReal_preimage_fst_singleton_eq_sum","declaration":"theorem measureReal_preimage_fst_singleton_eq_sum {S : Type u_1} {T : Type u_2} : ∀ {x : MeasurableSpace S} [inst : MeasurableSingletonClass S] [inst : Fintype T] {x_1 : MeasurableSpace T}\n  [inst_1 : MeasurableSingletonClass T] (μ : MeasureTheory.Measure (S × T)) [inst_2 : MeasureTheory.IsFiniteMeasure μ]\n  (x_2 : S), μ.real (Prod.fst ⁻¹' {x_2}) = Finset.sum Finset.univ fun y => μ.real {(x_2, y)}"}
{"name":"MeasureTheory.measureReal_eq_measureReal_smaller_of_between_null_diff","declaration":"theorem MeasureTheory.measureReal_eq_measureReal_smaller_of_between_null_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ s₃ : Set α},\n  s₁ ⊆ s₂ → s₂ ⊆ s₃ → μ.real (s₃ \\ s₁) = 0 → autoParam (↑↑μ (s₃ \\ s₁) ≠ ⊤) _auto✝ → μ.real s₁ = μ.real s₂"}
{"name":"MeasureTheory.sum_measureReal_preimage_singleton","declaration":"/-- If `s` is a `Finset`, then the measure of its preimage can be found as the sum of measures\nof the fibers `f ⁻¹' {y}`. -/\ntheorem MeasureTheory.sum_measureReal_preimage_singleton {α : Type u_1} {β : Type u_2} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} (s : Finset β) {f : α → β},\n  (∀ y ∈ s, MeasurableSet (f ⁻¹' {y})) →\n    autoParam (∀ a ∈ s, ↑↑μ (f ⁻¹' {a}) ≠ ⊤) _auto✝ → (Finset.sum s fun b => μ.real (f ⁻¹' {b})) = μ.real (f ⁻¹' ↑s)"}
{"name":"MeasureTheory.measureReal_union_null","declaration":"theorem MeasureTheory.measureReal_union_null {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  μ.real s₁ = 0 → μ.real s₂ = 0 → μ.real (s₁ ∪ s₂) = 0"}
{"name":"MeasureTheory.measureReal_union_add_inter₀'","declaration":"theorem MeasureTheory.measureReal_union_add_inter₀' {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α},\n  MeasureTheory.NullMeasurableSet s μ →\n    ∀ (t : Set α),\n      autoParam (↑↑μ s ≠ ⊤) _auto✝ →\n        autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s ∪ t) + μ.real (s ∩ t) = μ.real s + μ.real t"}
{"name":"MeasureTheory.measureReal_union₀","declaration":"theorem MeasureTheory.measureReal_union₀ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  MeasureTheory.NullMeasurableSet t μ →\n    MeasureTheory.AEDisjoint μ s t →\n      autoParam (↑↑μ s ≠ ⊤) _auto✝ → autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s ∪ t) = μ.real s + μ.real t"}
{"name":"MeasureTheory.measureReal_univ_pos","declaration":"theorem MeasureTheory.measureReal_univ_pos {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : MeasureTheory.IsFiniteMeasure μ] [inst : NeZero μ],\n  0 < μ.real Set.univ"}
{"name":"sum_measure_singleton","declaration":"theorem sum_measure_singleton {S : Type u_1} [Fintype S] : ∀ {x : MeasurableSpace S} [inst : MeasurableSingletonClass S] (μ : MeasureTheory.Measure S),\n  (Finset.sum Finset.univ fun x_1 => ↑↑μ {x_1}) = ↑↑μ Set.univ"}
{"name":"MeasureTheory.measureReal_iUnion_fintype_le","declaration":"theorem MeasureTheory.measureReal_iUnion_fintype_le {α : Type u_1} {β : Type u_2} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : Fintype β] (f : β → Set α),\n  μ.real (⋃ b, f b) ≤ Finset.sum Finset.univ fun p => μ.real (f p)"}
{"name":"MeasureTheory.measureReal_univ_ne_zero","declaration":"theorem MeasureTheory.measureReal_univ_ne_zero {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : MeasureTheory.IsFiniteMeasure μ] [inst : NeZero μ],\n  μ.real Set.univ ≠ 0"}
{"name":"MeasureTheory.measure_diff_eq_top","declaration":"theorem MeasureTheory.measure_diff_eq_top {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α}, ↑↑μ s = ⊤ → ↑↑μ t ≠ ⊤ → ↑↑μ (s \\ t) = ⊤"}
{"name":"MeasureTheory.measureReal_congr","declaration":"/-- If two sets are equal modulo a set of measure zero, then `μ.real s = μ.real t`. -/\ntheorem MeasureTheory.measureReal_congr {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  s =ᶠ[MeasureTheory.Measure.ae μ] t → μ.real s = μ.real t"}
{"name":"MeasureTheory.measure_ne_top_of_subset","declaration":"theorem MeasureTheory.measure_ne_top_of_subset {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α}, s ⊆ t → ↑↑μ t ≠ ⊤ → ↑↑μ s ≠ ⊤"}
{"name":"MeasureTheory.measureReal_union","declaration":"theorem MeasureTheory.measureReal_union {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  Disjoint s₁ s₂ →\n    MeasurableSet s₂ →\n      autoParam (↑↑μ s₁ ≠ ⊤) _auto✝ → autoParam (↑↑μ s₂ ≠ ⊤) _auto✝¹ → μ.real (s₁ ∪ s₂) = μ.real s₁ + μ.real s₂"}
{"name":"MeasureTheory.measureReal_le_measureReal_union_right","declaration":"theorem MeasureTheory.measureReal_le_measureReal_union_right {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  autoParam (↑↑μ s ≠ ⊤) _auto✝ → μ.real t ≤ μ.real (s ∪ t)"}
{"name":"MeasureTheory.map_measureReal_apply","declaration":"theorem MeasureTheory.map_measureReal_apply {α : Type u_1} {β : Type u_2} : ∀ {x : MeasurableSpace α} [inst : MeasurableSpace β] {μ : MeasureTheory.Measure α} {f : α → β},\n  Measurable f → ∀ {s : Set β}, MeasurableSet s → (MeasureTheory.Measure.map f μ).real s = μ.real (f ⁻¹' s)"}
{"name":"MeasureTheory.measureReal_compl","declaration":"theorem MeasureTheory.measureReal_compl {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α} [inst : MeasureTheory.IsFiniteMeasure μ],\n  MeasurableSet s → μ.real sᶜ = μ.real Set.univ - μ.real s"}
{"name":"MeasureTheory.measureReal_diff'","declaration":"theorem MeasureTheory.measureReal_diff' {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {t : Set α} (s : Set α),\n  MeasurableSet t →\n    autoParam (↑↑μ s ≠ ⊤) _auto✝ → autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s \\ t) = μ.real (s ∪ t) - μ.real t"}
{"name":"MeasureTheory.measureReal_union_add_inter'","declaration":"theorem MeasureTheory.measureReal_union_add_inter' {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α},\n  MeasurableSet s →\n    ∀ (t : Set α),\n      autoParam (↑↑μ s ≠ ⊤) _auto✝ →\n        autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s ∪ t) + μ.real (s ∩ t) = μ.real s + μ.real t"}
{"name":"MeasureTheory.measureReal_union'","declaration":"theorem MeasureTheory.measureReal_union' {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  Disjoint s₁ s₂ →\n    MeasurableSet s₁ →\n      autoParam (↑↑μ s₁ ≠ ⊤) _auto✝ → autoParam (↑↑μ s₂ ≠ ⊤) _auto✝¹ → μ.real (s₁ ∪ s₂) = μ.real s₁ + μ.real s₂"}
{"name":"MeasureTheory.measureReal_def","declaration":"theorem MeasureTheory.measureReal_def {α : Type u_1} : ∀ {x : MeasurableSpace α} (μ : MeasureTheory.Measure α) (s : Set α), μ.real s = (↑↑μ s).toReal"}
{"name":"MeasureTheory.measureReal_eq_measureReal_of_null_diff","declaration":"theorem MeasureTheory.measureReal_eq_measureReal_of_null_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  s ⊆ t → μ.real (t \\ s) = 0 → autoParam (↑↑μ (t \\ s) ≠ ⊤) _auto✝ → μ.real s = μ.real t"}
{"name":"MeasureTheory.measureReal_prod_prod","declaration":"theorem MeasureTheory.measureReal_prod_prod {α : Type u_1} {β : Type u_2} : ∀ {x : MeasurableSpace α} [inst : MeasurableSpace β] {μ : MeasureTheory.Measure α} {ν : MeasureTheory.Measure β}\n  [inst_1 : MeasureTheory.SigmaFinite ν] (s : Set α) (t : Set β),\n  (MeasureTheory.Measure.prod μ ν).real (s ×ˢ t) = μ.real s * ν.real t"}
{"name":"MeasureTheory.Measure.ext_iff_singleton","declaration":"/-- Generalized in Measure.ext_iff_singleton_finiteSupport at Entropy.Measure -/\ntheorem MeasureTheory.Measure.ext_iff_singleton {S : Type u_3} [Fintype S] [MeasurableSpace S] [MeasurableSingletonClass S] {μ1 : MeasureTheory.Measure S} {μ2 : MeasureTheory.Measure S} : μ1 = μ2 ↔ ∀ (x : S), ↑↑μ1 {x} = ↑↑μ2 {x}"}
{"name":"MeasureTheory.measureReal_diff_null","declaration":"theorem MeasureTheory.measureReal_diff_null {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  μ.real s₂ = 0 → autoParam (↑↑μ s₂ ≠ ⊤) _auto✝ → μ.real (s₁ \\ s₂) = μ.real s₁"}
{"name":"MeasureTheory.measureReal_biUnion_finset_le","declaration":"theorem MeasureTheory.measureReal_biUnion_finset_le {α : Type u_1} {β : Type u_2} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} (s : Finset β) (f : β → Set α),\n  μ.real (⋃ b ∈ s, f b) ≤ Finset.sum s fun p => μ.real (f p)"}
{"name":"MeasureTheory.measureReal_eq_measureReal_larger_of_between_null_diff","declaration":"theorem MeasureTheory.measureReal_eq_measureReal_larger_of_between_null_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ s₃ : Set α},\n  s₁ ⊆ s₂ → s₂ ⊆ s₃ → μ.real (s₃ \\ s₁) = 0 → autoParam (↑↑μ (s₃ \\ s₁) ≠ ⊤) _auto✝ → μ.real s₂ = μ.real s₃"}
{"name":"MeasureTheory.le_measureReal_diff","declaration":"theorem MeasureTheory.le_measureReal_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s₁ s₂ : Set α},\n  autoParam (↑↑μ s₂ ≠ ⊤) _auto✝ → μ.real s₁ - μ.real s₂ ≤ μ.real (s₁ \\ s₂)"}
{"name":"MeasureTheory.measureReal_biUnion_finset₀","declaration":"theorem MeasureTheory.measureReal_biUnion_finset₀ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {ι : Type u_3} {s : Finset ι} {f : ι → Set α},\n  Set.Pairwise (↑s) (MeasureTheory.AEDisjoint μ on f) →\n    (∀ b ∈ s, MeasureTheory.NullMeasurableSet (f b) μ) →\n      autoParam (∀ b ∈ s, ↑↑μ (f b) ≠ ⊤) _auto✝ → μ.real (⋃ b ∈ s, f b) = Finset.sum s fun p => μ.real (f p)"}
{"name":"MeasureTheory.measureReal_add_diff","declaration":"theorem MeasureTheory.measureReal_add_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α},\n  MeasurableSet s →\n    ∀ (t : Set α),\n      autoParam (↑↑μ s ≠ ⊤) _auto✝ → autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real s + μ.real (t \\ s) = μ.real (s ∪ t)"}
{"name":"MeasureTheory.Finset.sum_realMeasure_singleton","declaration":"/-- If `s` is a `Finset`, then the sums of the real measures of the singletons in the set is the\nreal measure of the set. -/\ntheorem MeasureTheory.Finset.sum_realMeasure_singleton {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} [inst : MeasurableSingletonClass α]\n  [inst : MeasureTheory.IsFiniteMeasure μ] (s : Finset α), (Finset.sum s fun b => μ.real {b}) = μ.real ↑s"}
{"name":"MeasureTheory.sum_measureReal_le_measureReal_univ","declaration":"theorem MeasureTheory.sum_measureReal_le_measureReal_univ {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {ι : Type u_3} [inst : MeasureTheory.IsFiniteMeasure μ]\n  {s : Finset ι} {t : ι → Set α},\n  (∀ i ∈ s, MeasurableSet (t i)) → Set.PairwiseDisjoint (↑s) t → (Finset.sum s fun i => μ.real (t i)) ≤ μ.real Set.univ"}
{"name":"MeasureTheory.measureReal_eq_zero_iff","declaration":"theorem MeasureTheory.measureReal_eq_zero_iff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α},\n  autoParam (↑↑μ s ≠ ⊤) _auto✝ → (μ.real s = 0 ↔ ↑↑μ s = 0)"}
{"name":"MeasureTheory.measureReal_diff_le_iff_le_add","declaration":"theorem MeasureTheory.measureReal_diff_le_iff_le_add {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  MeasurableSet s → s ⊆ t → ∀ (ε : ℝ), autoParam (↑↑μ t ≠ ⊤) _auto✝ → (μ.real (t \\ s) ≤ ε ↔ μ.real t ≤ μ.real s + ε)"}
{"name":"MeasureTheory.measureReal_add_measureReal_compl","declaration":"theorem MeasureTheory.measureReal_add_measureReal_compl {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s : Set α} [inst : MeasureTheory.IsFiniteMeasure μ],\n  MeasurableSet s → μ.real s + μ.real sᶜ = μ.real Set.univ"}
{"name":"MeasureTheory.measureReal_union_add_inter","declaration":"theorem MeasureTheory.measureReal_union_add_inter {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {t : Set α} (s : Set α),\n  MeasurableSet t →\n    autoParam (↑↑μ s ≠ ⊤) _auto✝ → autoParam (↑↑μ t ≠ ⊤) _auto✝¹ → μ.real (s ∪ t) + μ.real (s ∩ t) = μ.real s + μ.real t"}
{"name":"MeasureTheory.measureReal_diff_add_inter","declaration":"theorem MeasureTheory.measureReal_diff_add_inter {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {t : Set α} (s : Set α),\n  MeasurableSet t → autoParam (↑↑μ s ≠ ⊤) _auto✝ → μ.real (s \\ t) + μ.real (s ∩ t) = μ.real s"}
{"name":"MeasureTheory.measureReal_inter_add_diff","declaration":"theorem MeasureTheory.measureReal_inter_add_diff {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {t : Set α} (s : Set α),\n  MeasurableSet t → autoParam (↑↑μ s ≠ ⊤) _auto✝ → μ.real (s ∩ t) + μ.real (s \\ t) = μ.real s"}
{"name":"MeasureTheory.ext_iff_measureReal_singleton","declaration":"theorem MeasureTheory.ext_iff_measureReal_singleton {S : Type u_3} [Fintype S] [MeasurableSpace S] [MeasurableSingletonClass S] {μ1 : MeasureTheory.Measure S} {μ2 : MeasureTheory.Measure S} [MeasureTheory.IsFiniteMeasure μ1] [MeasureTheory.IsFiniteMeasure μ2] : μ1 = μ2 ↔ ∀ (x : S), μ1.real {x} = μ2.real {x}"}
{"name":"MeasureTheory.measureReal_diff_lt_of_lt_add","declaration":"theorem MeasureTheory.measureReal_diff_lt_of_lt_add {α : Type u_1} : ∀ {x : MeasurableSpace α} {μ : MeasureTheory.Measure α} {s t : Set α},\n  MeasurableSet s → s ⊆ t → ∀ (ε : ℝ), μ.real t < μ.real s + ε → autoParam (↑↑μ t ≠ ⊤) _auto✝ → μ.real (t \\ s) < ε"}
{"name":"MeasureTheory.nonempty_inter_of_measureReal_lt_add","declaration":"/-- If two sets `s` and `t` are included in a set `u` of finite measure,\nand `μ.real s + μ.real t > μ.real u`, then `s` intersects `t`.\nVersion assuming that `t` is measurable. -/\ntheorem MeasureTheory.nonempty_inter_of_measureReal_lt_add {α : Type u_1} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α) {s : Set α} {t : Set α} {u : Set α} (ht : MeasurableSet t) (h's : s ⊆ u) (h't : t ⊆ u) (h : μ.real u < μ.real s + μ.real t) (hu : autoParam (↑↑μ u ≠ ⊤) _auto✝) : Set.Nonempty (s ∩ t)"}
