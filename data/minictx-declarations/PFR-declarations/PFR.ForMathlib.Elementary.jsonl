{"name":"ElementaryAddCommGroup.mk","declaration":"ctor ElementaryAddCommGroup.mk {G : Type u_1} [AddCommGroup G] {p : outParam ℕ} (orderOf_of_ne : ∀ {x : G}, x ≠ 0 → addOrderOf x = p) : ElementaryAddCommGroup G p"}
{"name":"ElementaryAddCommGroup.finite_closure","declaration":"theorem ElementaryAddCommGroup.finite_closure {G : Type u_1} [AddCommGroup G] {n : ℕ} [ElementaryAddCommGroup G (n + 1)] {A : Set G} (h : Set.Finite A) : Set.Finite ↑(AddSubgroup.closure A)"}
{"name":"ElementaryAddCommGroup.char_smul_eq_zero'","declaration":"theorem ElementaryAddCommGroup.char_smul_eq_zero' {p : ℕ} {Γ : Type u_1} [AddCommGroup Γ] [ElementaryAddCommGroup Γ p] (x : Γ) (k : ℤ) : (k * ↑p) • x = 0"}
{"name":"ElementaryAddCommGroup.two_le_char_of_ne_zero","declaration":"theorem ElementaryAddCommGroup.two_le_char_of_ne_zero {p : ℕ} {Γ : Type u_1} [NeZero p] [AddCommGroup Γ] [ElementaryAddCommGroup Γ p] {x : Γ} (x_ne_zero : x ≠ 0) : 2 ≤ p"}
{"name":"ElementaryAddCommGroup.quotient_group","declaration":"theorem ElementaryAddCommGroup.quotient_group {G : Type u_1} [AddCommGroup G] {p : ℕ} (hp : Nat.Prime p) {H : AddSubgroup G} (hH : ∀ (x : G), p • x ∈ H) : ElementaryAddCommGroup (G ⧸ H) p"}
{"name":"ElementaryAddCommGroup.of_torsion","declaration":"theorem ElementaryAddCommGroup.of_torsion {G : Type u_1} [AddCommGroup G] {p : ℕ} (hp : Nat.Prime p) (h : ∀ (x : G), p • x = 0) : ElementaryAddCommGroup G p"}
{"name":"ElementaryAddCommGroup.char_ne_one_of_ne_zero","declaration":"theorem ElementaryAddCommGroup.char_ne_one_of_ne_zero {p : ℕ} {Γ : Type u_1} [AddCommGroup Γ] [ElementaryAddCommGroup Γ p] {x : Γ} (x_ne_zero : x ≠ 0) : p ≠ 1"}
{"name":"ElementaryAddCommGroup.sum_add_sum_eq_sum","declaration":"theorem ElementaryAddCommGroup.sum_add_sum_eq_sum {G : Type u_1} [AddCommGroup G] [elem : ElementaryAddCommGroup G 2] (x : G) (y : G) (z : G) : x + y + (y + z) = x + z"}
{"name":"ElementaryAddCommGroup.torsion","declaration":"theorem ElementaryAddCommGroup.torsion {G : Type u_1} [AddCommGroup G] (p : ℕ) [elem : ElementaryAddCommGroup G p] (x : G) : p • x = 0"}
{"name":"ElementaryAddCommGroup.sub_eq_add","declaration":"theorem ElementaryAddCommGroup.sub_eq_add {G : Type u_1} [AddCommGroup G] [elem : ElementaryAddCommGroup G 2] (x : G) (y : G) : x - y = x + y"}
{"name":"ElementaryAddCommGroup.ofModule","declaration":"/-- A vector space over Z/p is an elementary abelian p-group. -/\ntheorem ElementaryAddCommGroup.ofModule {G : Type u_1} {p : ℕ} [AddCommGroup G] [Module (ZMod p) G] [Fact (Nat.Prime p)] : ElementaryAddCommGroup G p"}
{"name":"ElementaryAddCommGroup.char_smul_eq_zero","declaration":"theorem ElementaryAddCommGroup.char_smul_eq_zero {p : ℕ} {Γ : Type u_1} [AddCommGroup Γ] [ElementaryAddCommGroup Γ p] (x : Γ) : p • x = 0"}
{"name":"ElementaryAddCommGroup.sum_add_sum_add_sum_eq_zero","declaration":"theorem ElementaryAddCommGroup.sum_add_sum_add_sum_eq_zero {G : Type u_1} [AddCommGroup G] [elem : ElementaryAddCommGroup G 2] (x : G) (y : G) (z : G) : x + y + (y + z) + (z + x) = 0"}
{"name":"ElementaryAddCommGroup.exists_subgroup_subset_card_le","declaration":"/-- In an elementary abelian $p$-group, every finite subgroup $H$ contains a further subgroup of\ncardinality between $k$ and $pk$, if $k \\leq |H|$.-/\ntheorem ElementaryAddCommGroup.exists_subgroup_subset_card_le {G : Type u_1} {p : ℕ} (hp : Nat.Prime p) [AddCommGroup G] [h : ElementaryAddCommGroup G p] {k : ℕ} (H : AddSubgroup G) (hk : k ≤ Nat.card ↥H) (h'k : k ≠ 0) : ∃ H', Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' ∧ H' ≤ H"}
{"name":"ElementaryAddCommGroup.neg_eq_self","declaration":"theorem ElementaryAddCommGroup.neg_eq_self {G : Type u_1} [AddCommGroup G] [elem : ElementaryAddCommGroup G 2] (x : G) : -x = x"}
{"name":"ElementaryAddCommGroup.Int.mod_eq","declaration":"theorem ElementaryAddCommGroup.Int.mod_eq (n : ℤ) (m : ℤ) : n % m = n - n / m * m"}
{"name":"ElementaryAddCommGroup.orderOf_of_ne","declaration":"def ElementaryAddCommGroup.orderOf_of_ne {G : Type u_1} [AddCommGroup G] {p : outParam ℕ} [self : ElementaryAddCommGroup G p] {x : G} (hx : x ≠ 0) : addOrderOf x = p"}
{"name":"ElementaryAddCommGroup.module","declaration":"instance ElementaryAddCommGroup.module {G : Type u_1} {n : ℕ} [AddCommGroup G] [ElementaryAddCommGroup G n] : Module (ZMod n) G"}
{"name":"ElementaryAddCommGroup.instElementaryAddCommGroupForAllAddCommGroup","declaration":"instance ElementaryAddCommGroup.instElementaryAddCommGroupForAllAddCommGroup (Ω : Type u_1) (Γ : Type u_2) (p : ℕ) [NeZero p] [AddCommGroup Γ] [ElementaryAddCommGroup Γ p] : ElementaryAddCommGroup (Ω → Γ) p"}
{"name":"ElementaryAddCommGroup.subgroup","declaration":"theorem ElementaryAddCommGroup.subgroup {G : Type u_1} [AddCommGroup G] {n : ℕ} [ElementaryAddCommGroup G n] (H : AddSubgroup G) : ElementaryAddCommGroup (↥H) n"}
{"name":"ElementaryAddCommGroup.mem_periodicPts","declaration":"theorem ElementaryAddCommGroup.mem_periodicPts {p : ℕ} {Γ : Type u_1} [NeZero p] [AddCommGroup Γ] [ElementaryAddCommGroup Γ p] {x : Γ} (y : Γ) : y ∈ Function.periodicPts fun z => x + z"}
{"name":"ElementaryAddCommGroup.add_self","declaration":"theorem ElementaryAddCommGroup.add_self {G : Type u_1} [AddCommGroup G] [elem : ElementaryAddCommGroup G 2] (x : G) : x + x = 0"}
{"name":"ElementaryAddCommGroup.exists_finsupp","declaration":"theorem ElementaryAddCommGroup.exists_finsupp {G : Type u_1} [AddCommGroup G] {n : ℕ} [ElementaryAddCommGroup G (n + 1)] {A : Set G} {x : G} (hx : x ∈ Submodule.span ℤ A) : ∃ μ, (Finsupp.sum μ fun a r => ZMod.cast r • ↑a) = x"}
{"name":"ElementaryAddCommGroup","declaration":"/-- An elementary `p`-group, i.e., a commutative additive group in which every nonzero element has\norder exactly `p`. -/\nclass ElementaryAddCommGroup (G : Type u_1) [AddCommGroup G] (p : outParam ℕ) : Prop"}
{"name":"ElementaryAddCommGroup.instElementaryAddCommGroupOfNatNatInstOfNatNat","declaration":"instance ElementaryAddCommGroup.instElementaryAddCommGroupOfNatNatInstOfNatNat {G : Type u_1} [AddCommGroup G] [Module (ZMod 2) G] : ElementaryAddCommGroup G 2"}
