{"name":"ProbabilityTheory.exists_isUniform_measureSpace","declaration":"/-- Uniform distributions exist, version giving a measure space -/\ntheorem ProbabilityTheory.exists_isUniform_measureSpace {S : Type u} [MeasurableSpace S] [MeasurableSingletonClass S] (H : Finset S) (h : H.Nonempty) : ∃ Ω mΩ U,\n  MeasureTheory.IsProbabilityMeasure MeasureTheory.volume ∧\n    Measurable U ∧ ProbabilityTheory.IsUniform (↑H) U MeasureTheory.volume ∧ (∀ (ω : Ω), U ω ∈ H) ∧ FiniteRange U"}
{"name":"ProbabilityTheory.IsUniform.mk","declaration":"ctor ProbabilityTheory.IsUniform.mk {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {H : Set S} {X : Ω → S} {μ : autoParam (MeasureTheory.Measure Ω) _auto✝} (eq_of_mem : ∀ (x y : S), x ∈ H → y ∈ H → ↑↑μ (X ⁻¹' {x}) = ↑↑μ (X ⁻¹' {y})) (measure_preimage_compl : ↑↑μ (X ⁻¹' Hᶜ) = 0) : ProbabilityTheory.IsUniform H X μ"}
{"name":"ProbabilityTheory.IsUniform.measureReal_preimage","declaration":"/-- $\\mathbb{P}(U_H \\in H') = \\dfrac{|H' \\cap H|}{|H|}$ -/\ntheorem ProbabilityTheory.IsUniform.measureReal_preimage {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) (H' : Set S) : μ.real (X ⁻¹' H') = μ.real Set.univ * ↑(Nat.card ↑(H' ∩ ↑H)) / ↑(Nat.card { x // x ∈ H })"}
{"name":"ProbabilityTheory.exists_isUniform","declaration":"/-- Uniform distributions exist. -/\ntheorem ProbabilityTheory.exists_isUniform {S : Type uS} [MeasurableSpace S] [MeasurableSingletonClass S] (H : Finset S) (h : H.Nonempty) : ∃ Ω mΩ X μ,\n  MeasureTheory.IsProbabilityMeasure μ ∧\n    Measurable X ∧ ProbabilityTheory.IsUniform (↑H) X μ ∧ (∀ (ω : Ω), X ω ∈ H) ∧ FiniteRange X"}
{"name":"ProbabilityTheory.IsUniform.of_identDistrib","declaration":"/-- A copy of a uniform random variable is also uniform.-/\ntheorem ProbabilityTheory.IsUniform.of_identDistrib {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Set S} {Ω' : Type u_1} [MeasurableSpace Ω'] (h : ProbabilityTheory.IsUniform H X μ) {X' : Ω' → S} {μ' : MeasureTheory.Measure Ω'} (h' : ProbabilityTheory.IdentDistrib X X' μ μ') (hH : MeasurableSet H) : ProbabilityTheory.IsUniform H X' μ'"}
{"name":"ProbabilityTheory.IsUniform.nonempty_preimage_of_mem","declaration":"theorem ProbabilityTheory.IsUniform.nonempty_preimage_of_mem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} [NeZero μ] {H : Finset S} (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) {s : S} (hs : s ∈ H) : Set.Nonempty (X ⁻¹' {s})"}
{"name":"ProbabilityTheory.IsUniform.full_measure","declaration":"theorem ProbabilityTheory.IsUniform.full_measure {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Set S} (h : ProbabilityTheory.IsUniform H X μ) (hX : Measurable X) : ↑↑(MeasureTheory.Measure.map X μ) H = ↑↑μ Set.univ"}
{"name":"ProbabilityTheory.IsUniform.comp","declaration":"/-- The image of a uniform random variable under an injective map is uniform on the image. -/\ntheorem ProbabilityTheory.IsUniform.comp {Ω : Type uΩ} {S : Type uS} {T : Type uT} [mΩ : MeasurableSpace Ω] {X : Ω → S} {μ : MeasureTheory.Measure Ω} [DecidableEq T] {H : Finset S} (h : ProbabilityTheory.IsUniform (↑H) X μ) {f : S → T} (hf : Function.Injective f) : ProbabilityTheory.IsUniform (↑(Finset.image f H)) (f ∘ X) μ"}
{"name":"ProbabilityTheory.IsUniform.measureReal_preimage_of_mem","declaration":"/-- A \"unit test\" for the definition of uniform distribution. -/\ntheorem ProbabilityTheory.IsUniform.measureReal_preimage_of_mem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} [MeasureTheory.IsProbabilityMeasure μ] (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) {s : S} (hs : s ∈ H) : μ.real (X ⁻¹' {s}) = 1 / ↑(Nat.card { x // x ∈ H })"}
{"name":"ProbabilityTheory.IsUniform.measureReal_preimage_of_nmem","declaration":"/-- Another \"unit test\" for the definition of uniform distribution. -/\ntheorem ProbabilityTheory.IsUniform.measureReal_preimage_of_nmem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Set S} (h : ProbabilityTheory.IsUniform H X μ) {s : S} (hs : s ∉ H) : μ.real (X ⁻¹' {s}) = 0"}
{"name":"ProbabilityTheory.exists_isUniform_measureSpace'","declaration":"/-- Uniform distributions exist, version with a Finite set rather than a Finset and giving a measure space -/\ntheorem ProbabilityTheory.exists_isUniform_measureSpace' {S : Type u} [MeasurableSpace S] [MeasurableSingletonClass S] (H : Set S) [Finite ↑H] [Nonempty ↑H] : ∃ Ω mΩ U,\n  MeasureTheory.IsProbabilityMeasure MeasureTheory.volume ∧\n    Measurable U ∧ ProbabilityTheory.IsUniform H U MeasureTheory.volume ∧ (∀ (ω : Ω), U ω ∈ H) ∧ FiniteRange U"}
{"name":"ProbabilityTheory.IsUniform.restrict","declaration":"/-- If $X$ is uniform w.r.t. $\\mu$ on $H$, then $X$ is uniform w.r.t. $\\mu$ conditioned by\n$H'$ on $H' \\cap H$. -/\ntheorem ProbabilityTheory.IsUniform.restrict {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Set S} (h : ProbabilityTheory.IsUniform H X μ) (hX : Measurable X) (H' : Set S) : ProbabilityTheory.IsUniform (H' ∩ H) X (ProbabilityTheory.cond μ (X ⁻¹' H'))"}
{"name":"ProbabilityTheory.IsUniform.ae_mem","declaration":"/-- A uniform random variable on H almost surely takes values in H. -/\ntheorem ProbabilityTheory.IsUniform.ae_mem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Set S} (h : ProbabilityTheory.IsUniform H X μ) : ∀ᵐ (ω : Ω) ∂μ, X ω ∈ H"}
{"name":"ProbabilityTheory.IsUniform.measure_preimage_of_mem","declaration":"/-- A \"unit test\" for the definition of uniform distribution. -/\ntheorem ProbabilityTheory.IsUniform.measure_preimage_of_mem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) {s : S} (hs : s ∈ H) : ↑↑μ (X ⁻¹' {s}) = ↑↑μ Set.univ / ↑(Nat.card { x // x ∈ H })"}
{"name":"ProbabilityTheory.IsUniform.nonempty","declaration":"/-- Uniform random variables only exist for non-empty sets H. -/\ntheorem ProbabilityTheory.IsUniform.nonempty {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} (h : ProbabilityTheory.IsUniform (↑H) X μ) [hμ : NeZero μ] : H.Nonempty"}
{"name":"ProbabilityTheory.IsUniform.measure_preimage_of_nmem","declaration":"/-- Another \"unit test\" for the definition of uniform distribution. -/\ntheorem ProbabilityTheory.IsUniform.measure_preimage_of_nmem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Set S} (h : ProbabilityTheory.IsUniform H X μ) {s : S} (hs : s ∉ H) : ↑↑μ (X ⁻¹' {s}) = 0"}
{"name":"ProbabilityTheory.IsUniform.measure_preimage_compl","declaration":"def ProbabilityTheory.IsUniform.measure_preimage_compl {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {H : Set S} {X : Ω → S} {μ : autoParam (MeasureTheory.Measure Ω) _auto✝} (self : ProbabilityTheory.IsUniform H X μ) : ↑↑μ (X ⁻¹' Hᶜ) = 0"}
{"name":"ProbabilityTheory.IsUniform.eq_of_mem","declaration":"def ProbabilityTheory.IsUniform.eq_of_mem {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] {H : Set S} {X : Ω → S} {μ : autoParam (MeasureTheory.Measure Ω) _auto✝} (self : ProbabilityTheory.IsUniform H X μ) (x : S) (y : S) : x ∈ H → y ∈ H → ↑↑μ (X ⁻¹' {x}) = ↑↑μ (X ⁻¹' {y})"}
{"name":"ProbabilityTheory.IdentDistrib.of_isUniform","declaration":"theorem ProbabilityTheory.IdentDistrib.of_isUniform {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {μ : MeasureTheory.Measure Ω} {H : Set S} {Ω' : Type u_1} [MeasurableSpace Ω'] {μ' : MeasureTheory.Measure Ω'} [MeasureTheory.IsProbabilityMeasure μ] [MeasureTheory.IsProbabilityMeasure μ'] [Finite ↑H] {X : Ω → S} {X' : Ω' → S} (hX : Measurable X) (hX' : Measurable X') (hX_unif : ProbabilityTheory.IsUniform H X μ) (hX'_unif : ProbabilityTheory.IsUniform H X' μ') : ProbabilityTheory.IdentDistrib X X' μ μ'"}
{"name":"ProbabilityTheory.IsUniform","declaration":"/-- The assertion that the law of $X$ is the uniform probability measure on a finite set $H$.\nWhile in applications $H$ will be non-empty finite set, $X$ measurable, and and $μ$ a probability\nmeasure, it could be technically convenient to have a definition that works even without these\nhypotheses.  (For instance, `isUniform` would be well-defined, but false, for infinite `H`) -/\nstructure ProbabilityTheory.IsUniform {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] (H : Set S) (X : Ω → S) (μ : autoParam (MeasureTheory.Measure Ω) _auto✝) : Prop"}
{"name":"ProbabilityTheory.IsUniform.measure_preimage_ne_zero","declaration":"/-- $\\mathbb{P}(U_H \\in H') \\neq 0$ if $H'$ intersects $H$ and the measure is non-zero. -/\ntheorem ProbabilityTheory.IsUniform.measure_preimage_ne_zero {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} [NeZero μ] (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) (H' : Set S) [Nonempty ↑(H' ∩ ↑H)] : ↑↑μ (X ⁻¹' H') ≠ 0"}
{"name":"ProbabilityTheory.IsUniform.measureReal_preimage_of_mem'","declaration":"theorem ProbabilityTheory.IsUniform.measureReal_preimage_of_mem' {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} [MeasureTheory.IsProbabilityMeasure μ] (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) {s : S} (hs : s ∈ H) : (MeasureTheory.Measure.map X μ).real {s} = 1 / ↑(Nat.card { x // x ∈ H })"}
{"name":"ProbabilityTheory.IsUniform.measure_preimage","declaration":"/-- $\\mathbb{P}(U_H \\in H') = \\dfrac{|H' \\cap H|}{|H|}$ -/\ntheorem ProbabilityTheory.IsUniform.measure_preimage {Ω : Type uΩ} {S : Type uS} [mΩ : MeasurableSpace Ω] [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] {X : Ω → S} {μ : MeasureTheory.Measure Ω} {H : Finset S} (h : ProbabilityTheory.IsUniform (↑H) X μ) (hX : Measurable X) (H' : Set S) : ↑↑μ (X ⁻¹' H') = ↑↑μ Set.univ * ↑(Nat.card ↑(H' ∩ ↑H)) / ↑(Nat.card { x // x ∈ H })"}
