{"name":"ProbabilityTheory.CondIndepFun.comp_right","declaration":"/-- Composing independent functions with a measurable embedding of conull range gives independent\nfunctions. -/\ntheorem ProbabilityTheory.CondIndepFun.comp_right {Ω : Type u_1} {Ω' : Type u_2} {α : Type u_3} {β : Type u_4} {γ : Type u_5} [MeasurableSpace Ω] [MeasurableSpace Ω'] [MeasurableSpace α] [MeasurableSpace β] [MeasurableSpace γ] {μ : MeasureTheory.Measure Ω} {f : Ω → α} {g : Ω → β} {h : Ω → γ} [MeasurableSingletonClass γ] {i : Ω' → Ω} (hi : MeasurableEmbedding i) (hi' : ∀ᵐ (a : Ω) ∂μ, a ∈ Set.range i) (hf : Measurable f) (hg : Measurable g) (hh : Measurable h) (hfg : ProbabilityTheory.CondIndepFun f g h μ) : ProbabilityTheory.CondIndepFun (f ∘ i) (g ∘ i) (h ∘ i) (MeasureTheory.Measure.comap i μ)"}
{"name":"ProbabilityTheory.IndepFun.identDistrib_cond","declaration":"/-- If `A` is independent from `B`, then conditioning on an event given by `B` does not change\nthe distribution of `A`. -/\ntheorem ProbabilityTheory.IndepFun.identDistrib_cond {Ω : Type u_1} {α : Type u_2} {β : Type u_3} : ∀ {x : MeasurableSpace Ω} {x_1 : MeasurableSpace α} {x_2 : MeasurableSpace β} {μ : MeasureTheory.Measure Ω} {A : Ω → α}\n  {B : Ω → β} [inst : MeasureTheory.IsProbabilityMeasure μ],\n  ProbabilityTheory.IndepFun A B μ →\n    ∀ {s : Set β},\n      MeasurableSet s →\n        Measurable A →\n          Measurable B → ↑↑μ (B ⁻¹' s) ≠ 0 → ProbabilityTheory.IdentDistrib A A μ (ProbabilityTheory.cond μ (B ⁻¹' s))"}
{"name":"ProbabilityTheory.condIndep_copies","declaration":"/-- For $X, Y$ random variables, there exist conditionally independent trials $X_1, X_2, Y'$. -/\ntheorem ProbabilityTheory.condIndep_copies {Ω : Type u_1} {α : Type u} {β : Type u} [MeasurableSpace Ω] [MeasurableSpace α] [MeasurableSpace β] [MeasurableSingletonClass β] [Fintype β] (X : Ω → α) (Y : Ω → β) (hX : Measurable X) (hY : Measurable Y) (μ : MeasureTheory.Measure Ω) [MeasureTheory.IsProbabilityMeasure μ] : ∃ Ω' mΩ' X₁ X₂ Y' ν,\n  MeasureTheory.IsProbabilityMeasure ν ∧\n    Measurable X₁ ∧\n      Measurable X₂ ∧\n        Measurable Y' ∧\n          ProbabilityTheory.CondIndepFun X₁ X₂ Y' ν ∧\n            ProbabilityTheory.IdentDistrib (⟨X₁, Y'⟩) (⟨X, Y⟩) ν μ ∧\n              ProbabilityTheory.IdentDistrib (⟨X₂, Y'⟩) (⟨X, Y⟩) ν μ"}
{"name":"ProbabilityTheory.IndepFun.cond_right","declaration":"/-- If `A` is independent of `B`, then they remain independent when conditioning on an event\nof the form `B ∈ t` of positive probability. -/\ntheorem ProbabilityTheory.IndepFun.cond_right {Ω : Type u_1} {α : Type u_2} {β : Type u_3} : ∀ {x : MeasurableSpace Ω} {x_1 : MeasurableSpace α} {x_2 : MeasurableSpace β} {μ : MeasureTheory.Measure Ω} {A : Ω → α}\n  {B : Ω → β},\n  ProbabilityTheory.IndepFun A B μ →\n    ∀ {t : Set β}, MeasurableSet t → Measurable B → ProbabilityTheory.IndepFun A B (ProbabilityTheory.cond μ (B ⁻¹' t))"}
{"name":"ProbabilityTheory.IndepFun.cond","declaration":"/-- If `A` is independent of `B`, then they remain independent when conditioning on an event\nof the form `A ∈ s ∩ B ∈ t` of positive probability. -/\ntheorem ProbabilityTheory.IndepFun.cond {Ω : Type u_1} {α : Type u_2} {β : Type u_3} : ∀ {x : MeasurableSpace Ω} {x_1 : MeasurableSpace α} {x_2 : MeasurableSpace β} {μ : MeasureTheory.Measure Ω} {A : Ω → α}\n  {B : Ω → β},\n  ProbabilityTheory.IndepFun A B μ →\n    ∀ {s : Set α} {t : Set β},\n      MeasurableSet s →\n        MeasurableSet t →\n          Measurable A → Measurable B → ProbabilityTheory.IndepFun A B (ProbabilityTheory.cond μ (A ⁻¹' s ∩ B ⁻¹' t))"}
{"name":"ProbabilityTheory.condIndep_copies'","declaration":"/-- For $X, Y$ random variables, there exist conditionally independent trials $X_1, X_2, Y'$. -/\ntheorem ProbabilityTheory.condIndep_copies' {Ω : Type u_1} {α : Type u} {β : Type u} [MeasurableSpace Ω] [MeasurableSpace α] [MeasurableSpace β] [MeasurableSingletonClass β] [Fintype β] (X : Ω → α) (Y : Ω → β) (hX : Measurable X) (hY : Measurable Y) (μ : MeasureTheory.Measure Ω) [MeasureTheory.IsProbabilityMeasure μ] (p : α → β → Prop) (hp : Measurable (Function.uncurry p)) (hp' : ∀ᵐ (ω : Ω) ∂μ, p (X ω) (Y ω)) : ∃ Ω' mΩ' X₁ X₂ Y' ν,\n  MeasureTheory.IsProbabilityMeasure ν ∧\n    Measurable X₁ ∧\n      Measurable X₂ ∧\n        Measurable Y' ∧\n          ProbabilityTheory.CondIndepFun X₁ X₂ Y' ν ∧\n            ProbabilityTheory.IdentDistrib (⟨X₁, Y'⟩) (⟨X, Y⟩) ν μ ∧\n              ProbabilityTheory.IdentDistrib (⟨X₂, Y'⟩) (⟨X, Y⟩) ν μ ∧\n                (∀ (ω : Ω'), p (X₁ ω) (Y' ω)) ∧ ∀ (ω : Ω'), p (X₂ ω) (Y' ω)"}
{"name":"ProbabilityTheory.condIndepFun_iff","declaration":"theorem ProbabilityTheory.condIndepFun_iff {Ω : Type u_1} {α : Type u_3} {β : Type u_4} {γ : Type u_5} [MeasurableSpace Ω] [MeasurableSpace α] [MeasurableSpace β] [MeasurableSpace γ] {μ : MeasureTheory.Measure Ω} {f : Ω → α} {g : Ω → β} {h : Ω → γ} : ProbabilityTheory.CondIndepFun f g h μ ↔\n  ∀ᵐ (z : γ) ∂MeasureTheory.Measure.map h μ, ProbabilityTheory.IndepFun f g (ProbabilityTheory.cond μ (h ⁻¹' {z}))"}
{"name":"ProbabilityTheory.IndepFun.cond_left","declaration":"/-- If `A` is independent of `B`, then they remain independent when conditioning on an event\nof the form `A ∈ s` of positive probability. -/\ntheorem ProbabilityTheory.IndepFun.cond_left {Ω : Type u_1} {α : Type u_2} {β : Type u_3} : ∀ {x : MeasurableSpace Ω} {x_1 : MeasurableSpace α} {x_2 : MeasurableSpace β} {μ : MeasureTheory.Measure Ω} {A : Ω → α}\n  {B : Ω → β},\n  ProbabilityTheory.IndepFun A B μ →\n    ∀ {s : Set α}, MeasurableSet s → Measurable A → ProbabilityTheory.IndepFun A B (ProbabilityTheory.cond μ (A ⁻¹' s))"}
{"name":"ProbabilityTheory.CondIndepFun","declaration":"/-- The assertion that `f` and `g` are conditionally independent relative to `h`. -/\ndef ProbabilityTheory.CondIndepFun {Ω : Type u_1} {α : Type u_3} {β : Type u_4} {γ : Type u_5} [MeasurableSpace Ω] [MeasurableSpace α] [MeasurableSpace β] [MeasurableSpace γ] (f : Ω → α) (g : Ω → β) (h : Ω → γ) (μ : autoParam (MeasureTheory.Measure Ω) _auto✝) : Prop"}
