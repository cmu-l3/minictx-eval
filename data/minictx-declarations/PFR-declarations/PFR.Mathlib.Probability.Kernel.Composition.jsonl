{"name":"ProbabilityTheory.kernel.AEFiniteKernelSupport.reverse","declaration":"theorem ProbabilityTheory.kernel.AEFiniteKernelSupport.reverse {γ : Type u_3} {S : Type u_7} {T : Type u_8} {β : Type u_9} [Countable S] [MeasurableSpace S] [MeasurableSingletonClass S] [MeasurableSpace T] [Countable β] [MeasurableSpace β] [MeasurableSingletonClass β] [Countable γ] [MeasurableSpace γ] [MeasurableSingletonClass γ] {κ : ↥(ProbabilityTheory.kernel T (S × β × γ))} {μ : MeasureTheory.Measure T} (hκ : ProbabilityTheory.kernel.AEFiniteKernelSupport κ μ) : ProbabilityTheory.kernel.AEFiniteKernelSupport (ProbabilityTheory.kernel.reverse κ) μ"}
{"name":"ProbabilityTheory.kernel.reverse_reverse","declaration":"theorem ProbabilityTheory.kernel.reverse_reverse {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.reverse (ProbabilityTheory.kernel.reverse κ) = κ"}
{"name":"ProbabilityTheory.kernel.map_swapRight","declaration":"theorem ProbabilityTheory.kernel.map_swapRight {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ))) {f : γ × β → δ} (hf : Measurable f),\n  ProbabilityTheory.kernel.map (ProbabilityTheory.kernel.swapRight κ) f hf =\n    ProbabilityTheory.kernel.map κ (f ∘ Prod.swap) ⋯"}
{"name":"ProbabilityTheory.kernel.instIsMarkovKernelProdInstMeasurableSpaceDeleteRight","declaration":"instance ProbabilityTheory.kernel.instIsMarkovKernelProdInstMeasurableSpaceDeleteRight {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ)))\n  [inst_2 : ProbabilityTheory.IsMarkovKernel κ],\n  ProbabilityTheory.IsMarkovKernel (ProbabilityTheory.kernel.deleteRight κ)"}
{"name":"ProbabilityTheory.kernel.deleteMiddle","declaration":"/-- Given a kernel taking values in a product of three spaces, forget the middle one. -/\ndef ProbabilityTheory.kernel.deleteMiddle {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : {x : MeasurableSpace α} →\n  {x_1 : MeasurableSpace δ} →\n    {β : Type u_9} →\n      [inst : MeasurableSpace β] →\n        [inst_1 : MeasurableSpace γ] → ↥(ProbabilityTheory.kernel α (β × γ × δ)) → ↥(ProbabilityTheory.kernel α (β × δ))"}
{"name":"ProbabilityTheory.kernel.swapRight_snd_reverse","declaration":"theorem ProbabilityTheory.kernel.swapRight_snd_reverse {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.swapRight (ProbabilityTheory.kernel.snd (ProbabilityTheory.kernel.reverse κ)) =\n    ProbabilityTheory.kernel.deleteRight κ"}
{"name":"ProbabilityTheory.kernel.snd_deleteMiddle","declaration":"theorem ProbabilityTheory.kernel.snd_deleteMiddle {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.snd (ProbabilityTheory.kernel.deleteMiddle κ) =\n    ProbabilityTheory.kernel.snd (ProbabilityTheory.kernel.snd κ)"}
{"name":"ProbabilityTheory.kernel.deleteRight","declaration":"/-- Given a kernel taking values in a product of three spaces, forget the last variable. -/\ndef ProbabilityTheory.kernel.deleteRight {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : {x : MeasurableSpace α} →\n  {x_1 : MeasurableSpace δ} →\n    {β : Type u_9} →\n      [inst : MeasurableSpace β] →\n        [inst_1 : MeasurableSpace γ] → ↥(ProbabilityTheory.kernel α (β × γ × δ)) → ↥(ProbabilityTheory.kernel α (β × γ))"}
{"name":"ProbabilityTheory.kernel.reverse","declaration":"/-- Given a kernel taking values in a product of three spaces, reverse the order of the spaces. -/\ndef ProbabilityTheory.kernel.reverse {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : {x : MeasurableSpace α} →\n  {x_1 : MeasurableSpace δ} →\n    {β : Type u_9} →\n      [inst : MeasurableSpace β] →\n        [inst_1 : MeasurableSpace γ] →\n          ↥(ProbabilityTheory.kernel α (β × γ × δ)) → ↥(ProbabilityTheory.kernel α (δ × γ × β))"}
{"name":"ProbabilityTheory.kernel.deleteMiddle_compProd","declaration":"theorem ProbabilityTheory.kernel.deleteMiddle_compProd {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (ξ : ↥(ProbabilityTheory.kernel α β)) [inst_2 : ProbabilityTheory.IsSFiniteKernel ξ]\n  (κ : ↥(ProbabilityTheory.kernel (α × β) (γ × δ))) [inst_3 : ProbabilityTheory.IsSFiniteKernel κ],\n  ProbabilityTheory.kernel.deleteMiddle (ProbabilityTheory.kernel.compProd ξ κ) =\n    ProbabilityTheory.kernel.compProd ξ (ProbabilityTheory.kernel.snd κ)"}
{"name":"ProbabilityTheory.kernel.instIsMarkovKernelProdInstMeasurableSpaceDeleteMiddle","declaration":"instance ProbabilityTheory.kernel.instIsMarkovKernelProdInstMeasurableSpaceDeleteMiddle {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ)))\n  [inst_2 : ProbabilityTheory.IsMarkovKernel κ],\n  ProbabilityTheory.IsMarkovKernel (ProbabilityTheory.kernel.deleteMiddle κ)"}
{"name":"ProbabilityTheory.kernel.swapRight_deleteMiddle_reverse","declaration":"theorem ProbabilityTheory.kernel.swapRight_deleteMiddle_reverse {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.swapRight (ProbabilityTheory.kernel.deleteMiddle (ProbabilityTheory.kernel.reverse κ)) =\n    ProbabilityTheory.kernel.deleteMiddle κ"}
{"name":"ProbabilityTheory.kernel.swapRight_deleteRight_reverse","declaration":"theorem ProbabilityTheory.kernel.swapRight_deleteRight_reverse {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.swapRight (ProbabilityTheory.kernel.deleteRight (ProbabilityTheory.kernel.reverse κ)) =\n    ProbabilityTheory.kernel.snd κ"}
{"name":"ProbabilityTheory.kernel.fst_deleteRight","declaration":"theorem ProbabilityTheory.kernel.fst_deleteRight {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.fst (ProbabilityTheory.kernel.deleteRight κ) = ProbabilityTheory.kernel.fst κ"}
{"name":"ProbabilityTheory.kernel.map_map","declaration":"theorem ProbabilityTheory.kernel.map_map {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α β)) {f : β → γ} (hf : Measurable f) {g : γ → δ}\n  (hg : Measurable g),\n  ProbabilityTheory.kernel.map (ProbabilityTheory.kernel.map κ f hf) g hg = ProbabilityTheory.kernel.map κ (g ∘ f) ⋯"}
{"name":"ProbabilityTheory.kernel.fst_deleteMiddle","declaration":"theorem ProbabilityTheory.kernel.fst_deleteMiddle {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.fst (ProbabilityTheory.kernel.deleteMiddle κ) = ProbabilityTheory.kernel.fst κ"}
{"name":"ProbabilityTheory.kernel.instIsMarkovKernelProdProdInstMeasurableSpaceInstMeasurableSpaceReverse","declaration":"instance ProbabilityTheory.kernel.instIsMarkovKernelProdProdInstMeasurableSpaceInstMeasurableSpaceReverse {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ)))\n  [inst_2 : ProbabilityTheory.IsMarkovKernel κ], ProbabilityTheory.IsMarkovKernel (ProbabilityTheory.kernel.reverse κ)"}
{"name":"ProbabilityTheory.kernel.deleteRight_map_prod","declaration":"theorem ProbabilityTheory.kernel.deleteRight_map_prod {α : Type u_1} {γ : Type u_3} {δ : Type u_4} {ε : Type u_5} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {x_2 : MeasurableSpace ε} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α β)) {f : β → γ} {g : β → δ} {g' : β → ε}\n  (hf : Measurable f) (hg : Measurable g) (hg' : Measurable g'),\n  ProbabilityTheory.kernel.deleteRight (ProbabilityTheory.kernel.map κ (fun b => (f b, g b, g' b)) ⋯) =\n    ProbabilityTheory.kernel.map κ (fun b => (f b, g b)) ⋯"}
{"name":"ProbabilityTheory.kernel.snd_deleteRight","declaration":"theorem ProbabilityTheory.kernel.snd_deleteRight {α : Type u_1} {γ : Type u_3} {δ : Type u_4} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α (β × γ × δ))),\n  ProbabilityTheory.kernel.snd (ProbabilityTheory.kernel.deleteRight κ) =\n    ProbabilityTheory.kernel.fst (ProbabilityTheory.kernel.snd κ)"}
{"name":"ProbabilityTheory.kernel.finiteKernelSupport_of_reverse","declaration":"/-- Reversing preserves finite kernel support -/\ntheorem ProbabilityTheory.kernel.finiteKernelSupport_of_reverse {α : Type u_1} {γ : Type u_3} : ∀ {x : MeasurableSpace α} {T : Type u_8} {β : Type u_9} [inst : MeasurableSpace T] [inst_1 : Countable β]\n  [inst_2 : MeasurableSpace β] [inst_3 : MeasurableSingletonClass β] [inst_4 : Countable γ] [inst_5 : MeasurableSpace γ]\n  [inst_6 : MeasurableSingletonClass γ] [inst_7 : Countable α] [inst_8 : MeasurableSingletonClass α]\n  {κ : ↥(ProbabilityTheory.kernel T (α × β × γ))},\n  ProbabilityTheory.kernel.FiniteKernelSupport κ →\n    ProbabilityTheory.kernel.FiniteKernelSupport (ProbabilityTheory.kernel.reverse κ)"}
{"name":"ProbabilityTheory.kernel.deleteMiddle_map_prod","declaration":"theorem ProbabilityTheory.kernel.deleteMiddle_map_prod {α : Type u_1} {γ : Type u_3} {δ : Type u_4} {ε : Type u_5} : ∀ {x : MeasurableSpace α} {x_1 : MeasurableSpace δ} {x_2 : MeasurableSpace ε} {β : Type u_9} [inst : MeasurableSpace β]\n  [inst_1 : MeasurableSpace γ] (κ : ↥(ProbabilityTheory.kernel α β)) {f : β → γ} {g : β → δ} {g' : β → ε}\n  (hf : Measurable f) (hg : Measurable g) (hg' : Measurable g'),\n  ProbabilityTheory.kernel.deleteMiddle (ProbabilityTheory.kernel.map κ (fun b => (f b, g b, g' b)) ⋯) =\n    ProbabilityTheory.kernel.map κ (fun b => (f b, g' b)) ⋯"}
