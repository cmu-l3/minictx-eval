{"name":"ProbabilityTheory.iIndepFun_iff'","declaration":"theorem ProbabilityTheory.iIndepFun_iff' {Ω : Type u_1} {ι : Type u_2} [MeasurableSpace Ω] {β : ι → Type u_11} (m : (i : ι) → MeasurableSpace (β i)) (f : (i : ι) → Ω → β i) (μ : MeasureTheory.Measure Ω) : ProbabilityTheory.iIndepFun m f μ ↔\n  ∀ (s : Finset ι) ⦃f' : ι → Set Ω⦄,\n    (∀ (i : ι), MeasurableSet (f' i)) → ↑↑μ (⋂ i ∈ s, f' i) = Finset.prod s fun i => ↑↑μ (f' i)"}
{"name":"ProbabilityTheory.EventuallyEq.finite_iInter","declaration":"/-- The new Mathlib tool `Finset.eventuallyEq_iInter` will supersede this result. -/\ntheorem ProbabilityTheory.EventuallyEq.finite_iInter {ι : Type u_14} {α : Type u_2} {l : Filter α} (s : Finset ι) {E : ι → Set α} {F : ι → Set α} (h : ∀ i ∈ s, E i =ᶠ[l] F i) : ⋂ i ∈ s, E i =ᶠ[l] ⋂ i ∈ s, F i"}
{"name":"ProbabilityTheory.iIndepFun.pi","declaration":"/-- If a family of functions `(i, j) ↦ f i j` is independent, then the family of function tuples\n`i ↦ (f i j)ⱼ` is independent. -/\ntheorem ProbabilityTheory.iIndepFun.pi {Ω : Type u_2} [MeasurableSpace Ω] {μ : MeasureTheory.Measure Ω} [MeasureTheory.IsProbabilityMeasure μ] {ι : Type u_5} {κ : ι → Type u_6} [(i : ι) → Fintype (κ i)] {α : (i : ι) → κ i → Type u_7} {f : (i : ι) → (j : κ i) → Ω → α i j} [m : (i : ι) → (j : κ i) → MeasurableSpace (α i j)] (f_meas : ∀ (i : ι) (j : κ i), Measurable (f i j)) (hf : ProbabilityTheory.iIndepFun (fun ij => m ij.fst ij.snd) (fun ij => f ij.fst ij.snd) μ) : ProbabilityTheory.iIndepFun (fun i => MeasurableSpace.pi) (fun i ω j => f i j ω) μ"}
{"name":"ProbabilityTheory.iIndepFun.neg","declaration":"theorem ProbabilityTheory.iIndepFun.neg {Ω : Type u_10} {ι : Type u_11} [MeasurableSpace Ω] {α : ι → Type u_13} [n : (i : ι) → MeasurableSpace (α i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (i : ι) [Neg (α i)] [MeasurableNeg (α i)] [DecidableEq ι] (h : ProbabilityTheory.iIndepFun n f μ) : ProbabilityTheory.iIndepFun n (Function.update f i (-f i)) μ"}
{"name":"ProbabilityTheory.IndepFun.comp_right","declaration":"/-- Composing independent functions with a measurable embedding of conull range gives independent\nfunctions. -/\ntheorem ProbabilityTheory.IndepFun.comp_right {α : Type u_11} {Ω : Type u_1} {β : Type u_6} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {Ω' : Type u_10} [MeasurableSpace Ω'] [MeasurableSpace α] [MeasurableSpace β] {f : Ω → α} {g : Ω → β} {i : Ω' → Ω} (hi : MeasurableEmbedding i) (hi' : ∀ᵐ (a : Ω) ∂μ, a ∈ Set.range i) (hf : Measurable f) (hg : Measurable g) (hfg : ProbabilityTheory.IndepFun f g μ) : ProbabilityTheory.IndepFun (f ∘ i) (g ∘ i) (MeasureTheory.Measure.comap i μ)"}
{"name":"ProbabilityTheory.IndepFun.measureReal_inter_preimage_eq_mul","declaration":"theorem ProbabilityTheory.IndepFun.measureReal_inter_preimage_eq_mul {Ω : Type u_1} {β : Type u_10} {β' : Type u_11} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {f : Ω → β} {g : Ω → β'} {_mβ : MeasurableSpace β} {_mβ' : MeasurableSpace β'} (h : ProbabilityTheory.IndepFun f g μ) {s : Set β} {t : Set β'} (hs : MeasurableSet s) (ht : MeasurableSet t) : μ.real (f ⁻¹' s ∩ g ⁻¹' t) = μ.real (f ⁻¹' s) * μ.real (g ⁻¹' t)"}
{"name":"Finset.prod_univ_prod","declaration":"theorem Finset.prod_univ_prod {ι : Type u_1} {κ : ι → Type u_3} [Fintype ι] [(i : ι) → Fintype (κ i)] {β : Type u_5} [CommMonoid β] (f : (i : ι) → κ i → β) : (Finset.prod Finset.univ fun ij => f ij.fst ij.snd) =\n  Finset.prod Finset.univ fun i => Finset.prod Finset.univ fun j => f i j"}
{"name":"ProbabilityTheory.iIndepFun_reindex_iff","declaration":"theorem ProbabilityTheory.iIndepFun_reindex_iff {Ω : Type u_10} {ι : Type u_11} {ι' : Type u_12} [MeasurableSpace Ω] {α : ι → Type u_13} [n : (i : ι) → MeasurableSpace (α i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (g : ι' ≃ ι) : ProbabilityTheory.iIndepFun ((fun {x} => n) ∘' ⇑g) ((fun {x} => f) ∘' ⇑g) μ ↔ ProbabilityTheory.iIndepFun n f μ"}
{"name":"ProbabilityTheory.iIndepFun.reindex_of_injective","declaration":"theorem ProbabilityTheory.iIndepFun.reindex_of_injective {Ω : Type u_10} {ι : Type u_11} {ι' : Type u_12} [MeasurableSpace Ω] {α : ι → Type u_13} [n : (i : ι) → MeasurableSpace (α i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (h : ProbabilityTheory.iIndepFun n f μ) (g : ι' → ι) (hg : Function.Injective g) : ProbabilityTheory.iIndepFun ((fun {x} => n) ∘' g) ((fun {x} => f) ∘' g) μ"}
{"name":"ProbabilityTheory.iIndepFun.reindex_symm","declaration":"theorem ProbabilityTheory.iIndepFun.reindex_symm {Ω : Type u_10} {ι : Type u_11} {ι' : Type u_12} [MeasurableSpace Ω] {α : ι → Type u_13} [n : (i : ι) → MeasurableSpace (α i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (g : ι' ≃ ι) (h : ProbabilityTheory.iIndepFun n f μ) : ProbabilityTheory.iIndepFun ((fun {x} => n) ∘' ⇑g) ((fun {x} => f) ∘' ⇑g) μ"}
{"name":"ProbabilityTheory.indepFun_const","declaration":"/-- Random variables are always independent of constants. -/\ntheorem ProbabilityTheory.indepFun_const {α : Type u_11} {Ω : Type u_1} {β : Type u_6} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {f : Ω → β} [MeasurableSpace α] [MeasurableSpace β] [MeasureTheory.IsProbabilityMeasure μ] (c : α) : ProbabilityTheory.IndepFun f (fun x => c) μ"}
{"name":"ProbabilityTheory.iIndepFun.pi'","declaration":"/-- If a family of functions `(i, j) ↦ f i j` is independent, then the family of function tuples\n`i ↦ (f i j)ⱼ` is independent. -/\ntheorem ProbabilityTheory.iIndepFun.pi' {Ω : Type u_2} [MeasurableSpace Ω] {μ : MeasureTheory.Measure Ω} [MeasureTheory.IsProbabilityMeasure μ] {ι : Type u_5} {κ : ι → Type u_6} [(i : ι) → Fintype (κ i)] {α : (i : ι) → κ i → Type u_7} [m : (i : ι) → (j : κ i) → MeasurableSpace (α i j)] {f : (ij : (i : ι) × κ i) → Ω → α ij.fst ij.snd} (f_meas : ∀ (i : (i : ι) × κ i), Measurable (f i)) (hf : ProbabilityTheory.iIndepFun (fun ij => m ij.fst ij.snd) f μ) : ProbabilityTheory.iIndepFun (fun _i => MeasurableSpace.pi) (fun i ω j => f { fst := i, snd := j } ω) μ"}
{"name":"Finset.sum_univ_sum","declaration":"theorem Finset.sum_univ_sum {ι : Type u_1} {κ : ι → Type u_3} [Fintype ι] [(i : ι) → Fintype (κ i)] {β : Type u_5} [AddCommMonoid β] (f : (i : ι) → κ i → β) : (Finset.sum Finset.univ fun ij => f ij.fst ij.snd) =\n  Finset.sum Finset.univ fun i => Finset.sum Finset.univ fun j => f i j"}
{"name":"Finset.sum_univ_sum'","declaration":"theorem Finset.sum_univ_sum' {ι : Type u_1} {κ : ι → Type u_3} [Fintype ι] [(i : ι) → Fintype (κ i)] {β : Type u_5} [AddCommMonoid β] (f : (i : ι) × κ i → β) : (Finset.sum Finset.univ fun ij => f ij) =\n  Finset.sum Finset.univ fun i => Finset.sum Finset.univ fun j => f { fst := i, snd := j }"}
{"name":"ProbabilityTheory.IndepFun.symm'","declaration":"/-- in mathlib as of `4d385393cd569f08ac30425ef886a57bb10daaa5` (TODO: bump) -/\ntheorem ProbabilityTheory.IndepFun.symm' {γ : Type u_14} {β : Type u_15} {Ω : Type u_16} : ∀ {x : MeasurableSpace γ} {x_1 : MeasurableSpace β} {x_2 : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {f : Ω → β}\n  {g : Ω → γ}, ProbabilityTheory.IndepFun f g μ → ProbabilityTheory.IndepFun g f μ"}
{"name":"ProbabilityTheory.kernel.IndepFun.symm'","declaration":"/-- in mathlib as of `4d385393cd569f08ac30425ef886a57bb10daaa5` (TODO: bump) -/\ntheorem ProbabilityTheory.kernel.IndepFun.symm' {Ω : Type u_14} {α : Type u_15} {β : Type u_16} {γ : Type u_17} : ∀ {x : MeasurableSpace Ω} {x_1 : MeasurableSpace α} {x_2 : MeasurableSpace β} {x_3 : MeasurableSpace γ}\n  {κ : ↥(ProbabilityTheory.kernel α Ω)} {f : Ω → β} {g : Ω → γ} {μ : MeasureTheory.Measure α},\n  ProbabilityTheory.kernel.IndepFun f g κ μ → ProbabilityTheory.kernel.IndepFun g f κ μ"}
{"name":"ProbabilityTheory.IndepFun.measure_inter_preimage_eq_mul","declaration":"theorem ProbabilityTheory.IndepFun.measure_inter_preimage_eq_mul {Ω : Type u_1} {β : Type u_10} {β' : Type u_11} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {f : Ω → β} {g : Ω → β'} {_mβ : MeasurableSpace β} {_mβ' : MeasurableSpace β'} (h : ProbabilityTheory.IndepFun f g μ) {s : Set β} {t : Set β'} (hs : MeasurableSet s) (ht : MeasurableSet t) : ↑↑μ (f ⁻¹' s ∩ g ⁻¹' t) = ↑↑μ (f ⁻¹' s) * ↑↑μ (g ⁻¹' t)"}
{"name":"ProbabilityTheory.iIndepFun.ae_eq","declaration":"/-- TODO: a kernel version of this theorem-/\ntheorem ProbabilityTheory.iIndepFun.ae_eq {Ω : Type u_13} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {ι : Type u_14} {β : ι → Type u_15} {m : (i : ι) → MeasurableSpace (β i)} {f : (i : ι) → Ω → β i} {g : (i : ι) → Ω → β i} (hf_Indep : ProbabilityTheory.iIndepFun m f μ) (hfg : ∀ (i : ι), f i =ᶠ[MeasureTheory.Measure.ae μ] g i) : ProbabilityTheory.iIndepFun m g μ"}
{"name":"Finset.prod_univ_prod'","declaration":"theorem Finset.prod_univ_prod' {ι : Type u_1} {κ : ι → Type u_3} [Fintype ι] [(i : ι) → Fintype (κ i)] {β : Type u_5} [CommMonoid β] (f : (i : ι) × κ i → β) : (Finset.prod Finset.univ fun ij => f ij) =\n  Finset.prod Finset.univ fun i => Finset.prod Finset.univ fun j => f { fst := i, snd := j }"}
{"name":"ProbabilityTheory.measurable_sigmaCurry","declaration":"theorem ProbabilityTheory.measurable_sigmaCurry {ι : Type u_1} {κ : ι → Type u_3} {α : (i : ι) → κ i → Type u_4} [m : (i : ι) → (j : κ i) → MeasurableSpace (α i j)] : Measurable Sigma.curry"}
{"name":"ProbabilityTheory.IndepFun.ae_eq'","declaration":"/-- in mathlib as of `4d385393cd569f08ac30425ef886a57bb10daaa5` (TODO: bump) -/\ntheorem ProbabilityTheory.IndepFun.ae_eq' {β : Type u_11} {β' : Type u_12} {Ω : Type u_13} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {mβ : MeasurableSpace β} {mβ' : MeasurableSpace β'} {f : Ω → β} {f' : Ω → β} {g : Ω → β'} {g' : Ω → β'} (hfg : ProbabilityTheory.IndepFun f g μ) (hf : f =ᶠ[MeasureTheory.Measure.ae μ] f') (hg : g =ᶠ[MeasureTheory.Measure.ae μ] g') : ProbabilityTheory.IndepFun f' g' μ"}
{"name":"ProbabilityTheory.iIndepFun.prod","declaration":"theorem ProbabilityTheory.iIndepFun.prod {Ω : Type u_2} [MeasurableSpace Ω] {μ : MeasureTheory.Measure Ω} [MeasureTheory.IsProbabilityMeasure μ] {ι : Type u_8} {ι' : Type u_9} {α : ι → Type u_10} {n : (i : ι) → MeasurableSpace (α i)} {f : (i : ι) → Ω → α i} {hf : ∀ (i : ι), Measurable (f i)} {ST : ι' → Finset ι} (hS : Pairwise (Disjoint on ST)) (h : ProbabilityTheory.iIndepFun n f μ) : let β := fun k => (i : { x // x ∈ ST k }) → α ↑i;\nProbabilityTheory.iIndepFun (fun k => MeasurableSpace.pi) (fun k x i => f (↑i) x) μ"}
{"name":"ProbabilityTheory.indepFun_iff_map_prod_eq_prod_map_map'","declaration":"theorem ProbabilityTheory.indepFun_iff_map_prod_eq_prod_map_map' {Ω : Type u_1} {β : Type u_6} {β' : Type u_7} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {mβ : MeasurableSpace β} {mβ' : MeasurableSpace β'} {f : Ω → β} {g : Ω → β'} [MeasureTheory.IsFiniteMeasure μ] (hf : AEMeasurable f μ) (hg : AEMeasurable g μ) : ProbabilityTheory.IndepFun f g μ ↔\n  MeasureTheory.Measure.map (fun ω => (f ω, g ω)) μ =\n    MeasureTheory.Measure.prod (MeasureTheory.Measure.map f μ) (MeasureTheory.Measure.map g μ)"}
{"name":"ProbabilityTheory.iIndepFun.reindex","declaration":"theorem ProbabilityTheory.iIndepFun.reindex {Ω : Type u_10} {ι : Type u_11} {ι' : Type u_12} [MeasurableSpace Ω] {α : ι → Type u_13} [n : (i : ι) → MeasurableSpace (α i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (g : ι' ≃ ι) (h : ProbabilityTheory.iIndepFun ((fun {x} => n) ∘' ⇑g) ((fun {x} => f) ∘' ⇑g) μ) : ProbabilityTheory.iIndepFun n f μ"}
{"name":"ProbabilityTheory.iIndepFun.comp","declaration":"theorem ProbabilityTheory.iIndepFun.comp {Ω : Type u_10} {ι : Type u_11} [MeasurableSpace Ω] {α : ι → Type u_13} {β : ι → Type u_14} [n : (i : ι) → MeasurableSpace (α i)] [m : (i : ι) → MeasurableSpace (β i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (h : ProbabilityTheory.iIndepFun n f μ) (g : (i : ι) → α i → β i) (hg : ∀ (i : ι), Measurable (g i)) : ProbabilityTheory.iIndepFun m (fun i => g i ∘ f i) μ"}
{"name":"ProbabilityTheory.indepFun_fst_snd","declaration":"theorem ProbabilityTheory.indepFun_fst_snd {Ω : Type u_1} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {Ω' : Type u_10} [MeasurableSpace Ω'] {μ' : MeasureTheory.Measure Ω'} [MeasureTheory.IsProbabilityMeasure μ] [MeasureTheory.IsProbabilityMeasure μ'] : ProbabilityTheory.IndepFun Prod.fst Prod.snd (MeasureTheory.Measure.prod μ μ')"}
{"name":"ProbabilityTheory.iIndepFun_iff_pi_map_eq_map","declaration":"theorem ProbabilityTheory.iIndepFun_iff_pi_map_eq_map {Ω : Type u_1} {mΩ : MeasurableSpace Ω} {μ : MeasureTheory.Measure Ω} {ι : Type u_11} {β : ι → Type u_12} [Fintype ι] (f : (x : ι) → Ω → β x) [m : (x : ι) → MeasurableSpace (β x)] [MeasureTheory.IsProbabilityMeasure μ] (hf : ∀ (x : ι), Measurable (f x)) : ProbabilityTheory.iIndepFun m f μ ↔\n  (MeasureTheory.Measure.pi fun i => MeasureTheory.Measure.map (f i) μ) = MeasureTheory.Measure.map (fun ω i => f i ω) μ"}
{"name":"ProbabilityTheory.iIndepFun.inv","declaration":"theorem ProbabilityTheory.iIndepFun.inv {Ω : Type u_10} {ι : Type u_11} [MeasurableSpace Ω] {α : ι → Type u_13} [n : (i : ι) → MeasurableSpace (α i)] {f : (i : ι) → Ω → α i} {μ : MeasureTheory.Measure Ω} (i : ι) [Inv (α i)] [MeasurableInv (α i)] [DecidableEq ι] (h : ProbabilityTheory.iIndepFun n f μ) : ProbabilityTheory.iIndepFun n (Function.update f i (f i)⁻¹) μ"}
