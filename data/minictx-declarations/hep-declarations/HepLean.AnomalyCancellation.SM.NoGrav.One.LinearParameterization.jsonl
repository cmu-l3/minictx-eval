{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero","declaration":"/-- A map from `linearParameters` to `linearParametersQENeqZero` in the special case when\n`Q'` and `E'` of the linear parameters are non-zero. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : SM.SMNoGrav.One.linearParametersQENeqZero"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.hvw","declaration":"def SM.SMNoGrav.One.linearParametersQENeqZero.hvw (self : SM.SMNoGrav.One.linearParametersQENeqZero) : self.v + self.w ≠ 0"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.grav_of_cubic","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.grav_of_cubic (S : SM.SMNoGrav.One.linearParametersQENeqZero) (h : SMACCs.accCube (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0) (FLTThree : FermatLastTheoremWith ℚ 3) : SMACCs.accGrav (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0"}
{"name":"SM.SMNoGrav.One.linearParameters.asCharges","declaration":"/-- The map from the linear parameters to elements of `(SMNoGrav 1).charges`. -/\ndef SM.SMNoGrav.One.linearParameters.asCharges (S : SM.SMNoGrav.One.linearParameters) : ACCSystemCharges.Charges (SM.SMNoGrav 1).toACCSystemCharges"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_symm_apply_w","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_symm_apply_w (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : (SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters.symm S).w = ((↑S).Y - 3 * (↑S).Q') / (↑S).E'"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_apply_coe_Y","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_apply_coe_Y (S : SM.SMNoGrav.One.linearParametersQENeqZero) : (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters S)).Y = 3 * S.x * (S.v - S.w) / (S.v + S.w)"}
{"name":"SM.SMNoGrav.One.linearParameters.E'","declaration":"/-- The parameter `E'`. -/\ndef SM.SMNoGrav.One.linearParameters.E' (self : SM.SMNoGrav.One.linearParameters) : ℚ"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters_coe_E'","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters_coe_E' (S : SM.SMNoGrav.One.linearParametersQENeqZero) : (↑(SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters S)).E' = -(6 * S.x) / (S.v + S.w)"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.ext","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.ext {S : SM.SMNoGrav.One.linearParametersQENeqZero} {T : SM.SMNoGrav.One.linearParametersQENeqZero} (hx : S.x = T.x) (hv : S.v = T.v) (hw : S.w = T.w) : S = T"}
{"name":"SM.SMNoGrav.One.linearParameters.cubic_zero_E'_zero","declaration":"theorem SM.SMNoGrav.One.linearParameters.cubic_zero_E'_zero (S : SM.SMNoGrav.One.linearParameters) (hc : SMACCs.accCube (SM.SMNoGrav.One.linearParameters.asCharges S) = 0) (h : S.E' = 0) : S.Q' = 0"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters","declaration":"/-- A bijection between the type `linearParametersQENeqZero` and linear parameters\nwith `Q'` and `E'` non-zero. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters  : SM.SMNoGrav.One.linearParametersQENeqZero ≃ { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_symm_apply_v","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_symm_apply_v (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : (SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters.symm S).v = (-(↑S).Y + -(3 * (↑S).Q')) / (↑S).E'"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.mk","declaration":"ctor SM.SMNoGrav.One.linearParametersQENeqZero.mk (x : ℚ) (v : ℚ) (w : ℚ) (hx : x ≠ 0) (hvw : v + w ≠ 0) : SM.SMNoGrav.One.linearParametersQENeqZero"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.hx","declaration":"def SM.SMNoGrav.One.linearParametersQENeqZero.hx (self : SM.SMNoGrav.One.linearParametersQENeqZero) : self.x ≠ 0"}
{"name":"SM.SMNoGrav.One.linearParameters.bijection","declaration":"/-- The bijection between the type of linear parameters and `(SMNoGrav 1).LinSols`. -/\ndef SM.SMNoGrav.One.linearParameters.bijection  : SM.SMNoGrav.One.linearParameters ≃ ACCSystemLinear.LinSols (SM.SMNoGrav 1).toACCSystemLinear"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters_coe_Y","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters_coe_Y (S : SM.SMNoGrav.One.linearParametersQENeqZero) : (↑(SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters S)).Y = 3 * S.x * (S.v - S.w) / (S.v + S.w)"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_symm_apply_x","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_symm_apply_x (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : (SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters.symm S).x = (↑S).Q'"}
{"name":"SM.SMNoGrav.One.linearParameters.mk","declaration":"ctor SM.SMNoGrav.One.linearParameters.mk (Q' : ℚ) (Y : ℚ) (E' : ℚ) : SM.SMNoGrav.One.linearParameters"}
{"name":"SM.SMNoGrav.One.linearParameters.grav","declaration":"theorem SM.SMNoGrav.One.linearParameters.grav (S : SM.SMNoGrav.One.linearParameters) : SMACCs.accGrav (SM.SMNoGrav.One.linearParameters.asCharges S) = 0 ↔ S.E' = 6 * S.Q'"}
{"name":"SM.SMNoGrav.One.linearParameters.Y","declaration":"/-- The parameter `Y`. -/\ndef SM.SMNoGrav.One.linearParameters.Y (self : SM.SMNoGrav.One.linearParameters) : ℚ"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero_v","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero_v (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : (SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero S).v = (-(↑S).Y + -(3 * (↑S).Q')) / (↑S).E'"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters_coe_Q'","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters_coe_Q' (S : SM.SMNoGrav.One.linearParametersQENeqZero) : (↑(SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters S)).Q' = S.x"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.cubic_v_or_w_zero","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.cubic_v_or_w_zero (S : SM.SMNoGrav.One.linearParametersQENeqZero) (h : SMACCs.accCube (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0) (FLTThree : FermatLastTheoremWith ℚ 3) : S.v = 0 ∨ S.w = 0"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_apply_coe_E'","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_apply_coe_E' (S : SM.SMNoGrav.One.linearParametersQENeqZero) : (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters S)).E' = -(6 * S.x) / (S.v + S.w)"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.v","declaration":"/-- The parameter `v`. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.v (self : SM.SMNoGrav.One.linearParametersQENeqZero) : ℚ"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.cube_w_zero","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.cube_w_zero (S : SM.SMNoGrav.One.linearParametersQENeqZero) (h : SMACCs.accCube (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0) (hw : S.w = 0) : S.v = -1"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.cube_w_v","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.cube_w_v (S : SM.SMNoGrav.One.linearParametersQENeqZero) (h : SMACCs.accCube (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0) (FLTThree : FermatLastTheoremWith ℚ 3) : S.v = -1 ∧ S.w = 0 ∨ S.v = 0 ∧ S.w = -1"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero","declaration":"/-- The parameters for solutions to the linear ACCs with the condition that Q and E are\nnon-zero. -/\nstructure SM.SMNoGrav.One.linearParametersQENeqZero  : Type"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.cubic_v_zero","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.cubic_v_zero (S : SM.SMNoGrav.One.linearParametersQENeqZero) (h : SMACCs.accCube (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0) (hv : S.v = 0) : S.w = -1"}
{"name":"SM.SMNoGrav.One.linearParameters.Q'","declaration":"/-- The parameter `Q'`. -/\ndef SM.SMNoGrav.One.linearParameters.Q' (self : SM.SMNoGrav.One.linearParameters) : ℚ"}
{"name":"SM.SMNoGrav.One.linearParameters.cubic_zero_Q'_zero","declaration":"theorem SM.SMNoGrav.One.linearParameters.cubic_zero_Q'_zero (S : SM.SMNoGrav.One.linearParameters) (hc : SMACCs.accCube (SM.SMNoGrav.One.linearParameters.asCharges S) = 0) (h : S.Q' = 0) : S.E' = 0"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters","declaration":"/-- A map from `linearParametersQENeqZero` to `linearParameters`. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.toLinearParameters (S : SM.SMNoGrav.One.linearParametersQENeqZero) : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero_x","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero_x (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : (SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero S).x = (↑S).Q'"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.cubic","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.cubic (S : SM.SMNoGrav.One.linearParametersQENeqZero) : SMACCs.accCube (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0 ↔ S.v ^ 3 + S.w ^ 3 = -1"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.w","declaration":"/-- The parameter `w`. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.w (self : SM.SMNoGrav.One.linearParametersQENeqZero) : ℚ"}
{"name":"SM.SMNoGrav.One.linearParameters.ext","declaration":"theorem SM.SMNoGrav.One.linearParameters.ext {S : SM.SMNoGrav.One.linearParameters} {T : SM.SMNoGrav.One.linearParameters} (hQ : S.Q' = T.Q') (hY : S.Y = T.Y) (hE : S.E' = T.E') : S = T"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_apply_coe_Q'","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters_apply_coe_Q' (S : SM.SMNoGrav.One.linearParametersQENeqZero) : (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijectionLinearParameters S)).Q' = S.x"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.grav","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.grav (S : SM.SMNoGrav.One.linearParametersQENeqZero) : SMACCs.accGrav (↑(SM.SMNoGrav.One.linearParametersQENeqZero.bijection S)).val = 0 ↔ S.v + S.w = -1"}
{"name":"SM.SMNoGrav.One.linearParameters.speciesVal","declaration":"theorem SM.SMNoGrav.One.linearParameters.speciesVal {i : Fin 5} (S : SM.SMNoGrav.One.linearParameters) : (SMCharges.toSpecies i) (SM.SMNoGrav.One.linearParameters.asCharges S) 0 =\n  SM.SMNoGrav.One.linearParameters.asCharges S i"}
{"name":"SM.SMNoGrav.One.linearParameters.asLinear_val","declaration":"theorem SM.SMNoGrav.One.linearParameters.asLinear_val (S : SM.SMNoGrav.One.linearParameters) : (SM.SMNoGrav.One.linearParameters.asLinear S).val = SM.SMNoGrav.One.linearParameters.asCharges S"}
{"name":"SM.SMNoGrav.One.linearParameters","declaration":"/-- The parameters for a linear parameterization to the solution of the linear ACCs. -/\nstructure SM.SMNoGrav.One.linearParameters  : Type"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero_w","declaration":"theorem SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero_w (S : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 }) : (SM.SMNoGrav.One.linearParametersQENeqZero.tolinearParametersQNeqZero S).w = ((↑S).Y - 3 * (↑S).Q') / (↑S).E'"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.bijection","declaration":"/-- The bijection between `linearParametersQENeqZero` and `LinSols` with `Q` and `E` non-zero. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.bijection  : SM.SMNoGrav.One.linearParametersQENeqZero ≃ { S // SMCharges.Q S.val 0 ≠ 0 ∧ SMCharges.E S.val 0 ≠ 0 }"}
{"name":"SM.SMNoGrav.One.linearParametersQENeqZero.x","declaration":"/-- The parameter `x`. -/\ndef SM.SMNoGrav.One.linearParametersQENeqZero.x (self : SM.SMNoGrav.One.linearParametersQENeqZero) : ℚ"}
{"name":"SM.SMNoGrav.One.linearParameters.bijectionQEZero","declaration":"/-- The bijection between the linear parameters and `(SMNoGrav 1).LinSols` in the special\ncase when Q and E are both not zero. -/\ndef SM.SMNoGrav.One.linearParameters.bijectionQEZero  : { S // S.Q' ≠ 0 ∧ S.E' ≠ 0 } ≃ { S // SMCharges.Q S.val 0 ≠ 0 ∧ SMCharges.E S.val 0 ≠ 0 }"}
{"name":"SM.SMNoGrav.One.linearParameters.asLinear","declaration":"/-- The map from the linear paramaters to elements of `(SMNoGrav 1).LinSols`. -/\ndef SM.SMNoGrav.One.linearParameters.asLinear (S : SM.SMNoGrav.One.linearParameters) : ACCSystemLinear.LinSols (SM.SMNoGrav 1).toACCSystemLinear"}
{"name":"SM.SMNoGrav.One.linearParameters.cubic","declaration":"theorem SM.SMNoGrav.One.linearParameters.cubic (S : SM.SMNoGrav.One.linearParameters) : SMACCs.accCube (SM.SMNoGrav.One.linearParameters.asCharges S) = -54 * S.Q' ^ 3 - 18 * S.Q' * S.Y ^ 2 + S.E' ^ 3"}
