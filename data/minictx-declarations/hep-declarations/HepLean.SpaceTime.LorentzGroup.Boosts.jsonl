{"name":"LorentzGroup.genBoost.toLorentz_in_connected_component_1","declaration":"theorem LorentzGroup.genBoost.toLorentz_in_connected_component_1 {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzGroup.genBoost.toLorentz u v ∈ connectedComponent 1"}
{"name":"LorentzGroup.genBoost.self","declaration":"/-- This lemma states that for a given four-velocity `u`, the general boost\ntransformation `genBoost u u` is equal to the identity linear map `LinearMap.id`.\n-/\ntheorem LorentzGroup.genBoost.self {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzGroup.genBoost u u = LinearMap.id"}
{"name":"LorentzGroup.genBoost.toMatrix_mulVec","declaration":"theorem LorentzGroup.genBoost.toMatrix_mulVec {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) (x : LorentzVector d) : Matrix.mulVec (LorentzGroup.genBoost.toMatrix u v) x = (LorentzGroup.genBoost u v) x"}
{"name":"LorentzGroup.genBoost.isProper","declaration":"theorem LorentzGroup.genBoost.isProper {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzGroup.IsProper (LorentzGroup.genBoost.toLorentz u v)"}
{"name":"LorentzGroup.genBoost.toMatrix_continuous","declaration":"theorem LorentzGroup.genBoost.toMatrix_continuous {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) : Continuous (LorentzGroup.genBoost.toMatrix u)"}
{"name":"LorentzGroup.genBoost.toLorentz","declaration":"/-- A generalised boost as an element of the Lorentz Group. -/\ndef LorentzGroup.genBoost.toLorentz {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : ↑(LorentzGroup d)"}
{"name":"LorentzGroup.genBoost.toMatrix","declaration":"/-- A generalised boost as a matrix. -/\ndef LorentzGroup.genBoost.toMatrix {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : Matrix (Fin 1 ⊕ Fin d) (Fin 1 ⊕ Fin d) ℝ"}
{"name":"LorentzGroup.genBoost","declaration":"/-- An generalised boost. This is a Lorentz transformation which takes the four velocity `u`\nto `v`. -/\ndef LorentzGroup.genBoost {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzVector d →ₗ[ℝ] LorentzVector d"}
{"name":"LorentzGroup.genBoostAux₂","declaration":"/-- An auxillary linear map used in the definition of a genearlised boost. -/\ndef LorentzGroup.genBoostAux₂ {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzVector d →ₗ[ℝ] LorentzVector d"}
{"name":"LorentzGroup.genBoost.toLorentz_joined_to_1","declaration":"theorem LorentzGroup.genBoost.toLorentz_joined_to_1 {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : Joined 1 (LorentzGroup.genBoost.toLorentz u v)"}
{"name":"LorentzGroup.genBoostAux₁","declaration":"/-- An auxillary linear map used in the definition of a generalised boost. -/\ndef LorentzGroup.genBoostAux₁ {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzVector d →ₗ[ℝ] LorentzVector d"}
{"name":"LorentzGroup.genBoost.toMatrix_in_lorentzGroup","declaration":"theorem LorentzGroup.genBoost.toMatrix_in_lorentzGroup {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) : LorentzGroup.genBoost.toMatrix u v ∈ LorentzGroup d"}
{"name":"LorentzGroup.genBoost.toLorentz_continuous","declaration":"theorem LorentzGroup.genBoost.toLorentz_continuous {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) : Continuous (LorentzGroup.genBoost.toLorentz u)"}
{"name":"LorentzGroup.genBoost.toMatrix_apply","declaration":"theorem LorentzGroup.genBoost.toMatrix_apply {d : ℕ} (u : ↑(NormOneLorentzVector.FuturePointing d)) (v : ↑(NormOneLorentzVector.FuturePointing d)) (μ : Fin 1 ⊕ Fin d) (ν : Fin 1 ⊕ Fin d) : LorentzGroup.genBoost.toMatrix u v μ ν =\n  minkowskiMatrix μ μ *\n    ((minkowskiMetric (LorentzVector.stdBasis μ)) (LorentzVector.stdBasis ν) +\n        2 * (minkowskiMetric (LorentzVector.stdBasis ν)) ↑↑u * (minkowskiMetric (LorentzVector.stdBasis μ)) ↑↑v -\n      (minkowskiMetric (LorentzVector.stdBasis μ)) (↑↑u + ↑↑v) *\n          (minkowskiMetric (LorentzVector.stdBasis ν)) (↑↑u + ↑↑v) /\n        (1 + (minkowskiMetric ↑↑u) ↑↑v))"}
