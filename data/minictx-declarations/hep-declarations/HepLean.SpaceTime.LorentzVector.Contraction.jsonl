{"name":"minkowskiMatrix.asCoTenProd_diag","declaration":"theorem minkowskiMatrix.asCoTenProd_diag {d : ℕ} : minkowskiMatrix.asCoTenProd =\n  Finset.sum Finset.univ fun μ =>\n    minkowskiMatrix μ μ • CovariantLorentzVector.stdBasis μ ⊗ₜ[ℝ] CovariantLorentzVector.stdBasis μ"}
{"name":"minkowskiMatrix.asTenProd_invariant","declaration":"theorem minkowskiMatrix.asTenProd_invariant {d : ℕ} (g : ↑(LorentzGroup d)) : (TensorProduct.map (LorentzVector.rep g) (LorentzVector.rep g)) minkowskiMatrix.asTenProd = minkowskiMatrix.asTenProd"}
{"name":"LorentzVector.unitDown_rid","declaration":"theorem LorentzVector.unitDown_rid {d : ℕ} (x : CovariantLorentzVector d) : (TensorStructure.contrLeftAux LorentzVector.contrDownUp) (x ⊗ₜ[ℝ] LorentzVector.unitDown) = x"}
{"name":"LorentzVector.unitDown","declaration":"/-- The unit of the contraction of covariant Lorentz vector and a\ncontravariant Lorentz vector. -/\ndef LorentzVector.unitDown {d : ℕ} : TensorProduct ℝ (LorentzVector d) (CovariantLorentzVector d)"}
{"name":"LorentzVector.contrUpDown","declaration":"/-- The linear map defining the contraction of a contravariant Lorentz vector\nand a covariant Lorentz vector. -/\ndef LorentzVector.contrUpDown {d : ℕ} : TensorProduct ℝ (LorentzVector d) (CovariantLorentzVector d) →ₗ[ℝ] ℝ"}
{"name":"minkowskiMatrix.contrLeft_asTenProd","declaration":"theorem minkowskiMatrix.contrLeft_asTenProd {d : ℕ} (x : CovariantLorentzVector d) : (TensorStructure.contrLeftAux LorentzVector.contrDownUp) (x ⊗ₜ[ℝ] minkowskiMatrix.asTenProd) =\n  Finset.sum Finset.univ fun μ => (minkowskiMatrix μ μ * x μ) • LorentzVector.stdBasis μ"}
{"name":"minkowskiMatrix.asTenProd_diag","declaration":"theorem minkowskiMatrix.asTenProd_diag {d : ℕ} : minkowskiMatrix.asTenProd =\n  Finset.sum Finset.univ fun μ => minkowskiMatrix μ μ • LorentzVector.stdBasis μ ⊗ₜ[ℝ] LorentzVector.stdBasis μ"}
{"name":"LorentzVector.contrUpDown_tmul_eq_dotProduct","declaration":"theorem LorentzVector.contrUpDown_tmul_eq_dotProduct {d : ℕ} {x : LorentzVector d} {y : CovariantLorentzVector d} : LorentzVector.contrUpDown (x ⊗ₜ[ℝ] y) = Matrix.dotProduct x y"}
{"name":"minkowskiMatrix.asTenProd_contr_asCoTenProd","declaration":"theorem minkowskiMatrix.asTenProd_contr_asCoTenProd {d : ℕ} : (TensorStructure.contrMidAux LorentzVector.contrUpDown) (minkowskiMatrix.asTenProd ⊗ₜ[ℝ] minkowskiMatrix.asCoTenProd) =\n  (TensorProduct.comm ℝ (CovariantLorentzVector d) (LorentzVector d)) LorentzVector.unitUp"}
{"name":"LorentzVector.unitUp_rid","declaration":"theorem LorentzVector.unitUp_rid {d : ℕ} (x : LorentzVector d) : (TensorStructure.contrLeftAux LorentzVector.contrUpDown) (x ⊗ₜ[ℝ] LorentzVector.unitUp) = x"}
{"name":"LorentzVector.contrUpDown_invariant_lorentzAction","declaration":"theorem LorentzVector.contrUpDown_invariant_lorentzAction {d : ℕ} {g : ↑(LorentzGroup d)} {x : LorentzVector d} {y : CovariantLorentzVector d} : LorentzVector.contrUpDown ((LorentzVector.rep g) x ⊗ₜ[ℝ] (CovariantLorentzVector.rep g) y) =\n  LorentzVector.contrUpDown (x ⊗ₜ[ℝ] y)"}
{"name":"minkowskiMatrix.asCoTenProd_contr_asTenProd","declaration":"theorem minkowskiMatrix.asCoTenProd_contr_asTenProd {d : ℕ} : (TensorStructure.contrMidAux LorentzVector.contrDownUp) (minkowskiMatrix.asCoTenProd ⊗ₜ[ℝ] minkowskiMatrix.asTenProd) =\n  (TensorProduct.comm ℝ (LorentzVector d) (CovariantLorentzVector d)) LorentzVector.unitDown"}
{"name":"minkowskiMatrix.asCoTenProd_invariant","declaration":"theorem minkowskiMatrix.asCoTenProd_invariant {d : ℕ} (g : ↑(LorentzGroup d)) : (TensorProduct.map (CovariantLorentzVector.rep g) (CovariantLorentzVector.rep g)) minkowskiMatrix.asCoTenProd =\n  minkowskiMatrix.asCoTenProd"}
{"name":"LorentzVector.contrUpDown_stdBasis_right","declaration":"theorem LorentzVector.contrUpDown_stdBasis_right {d : ℕ} (x : CovariantLorentzVector d) (i : Fin 1 ⊕ Fin d) : LorentzVector.contrUpDown (LorentzVector.stdBasis i ⊗ₜ[ℝ] x) = x i"}
{"name":"LorentzVector.contrDownUp_tmul_eq_dotProduct","declaration":"theorem LorentzVector.contrDownUp_tmul_eq_dotProduct {d : ℕ} {x : CovariantLorentzVector d} {y : LorentzVector d} : LorentzVector.contrDownUp (x ⊗ₜ[ℝ] y) = Matrix.dotProduct x y"}
{"name":"minkowskiMatrix.asTenProd","declaration":"/-- The metric tensor as an element of `LorentzVector d ⊗[ℝ] LorentzVector d`. -/\ndef minkowskiMatrix.asTenProd {d : ℕ} : TensorProduct ℝ (LorentzVector d) (LorentzVector d)"}
{"name":"LorentzVector.contrDownUp","declaration":"/-- The linear map defining the contraction of a covariant Lorentz vector\nand a contravariant Lorentz vector. -/\ndef LorentzVector.contrDownUp {d : ℕ} : TensorProduct ℝ (CovariantLorentzVector d) (LorentzVector d) →ₗ[ℝ] ℝ"}
{"name":"minkowskiMatrix.asCoTenProd","declaration":"/-- The metric tensor as an element of `CovariantLorentzVector d ⊗[ℝ] CovariantLorentzVector d`. -/\ndef minkowskiMatrix.asCoTenProd {d : ℕ} : TensorProduct ℝ (CovariantLorentzVector d) (CovariantLorentzVector d)"}
{"name":"LorentzVector.contrUpDown_stdBasis_left","declaration":"theorem LorentzVector.contrUpDown_stdBasis_left {d : ℕ} (x : LorentzVector d) (i : Fin 1 ⊕ Fin d) : LorentzVector.contrUpDown (x ⊗ₜ[ℝ] CovariantLorentzVector.stdBasis i) = x i"}
{"name":"minkowskiMatrix.contrLeft_asCoTenProd","declaration":"theorem minkowskiMatrix.contrLeft_asCoTenProd {d : ℕ} (x : LorentzVector d) : (TensorStructure.contrLeftAux LorentzVector.contrUpDown) (x ⊗ₜ[ℝ] minkowskiMatrix.asCoTenProd) =\n  Finset.sum Finset.univ fun μ => (minkowskiMatrix μ μ * x μ) • CovariantLorentzVector.stdBasis μ"}
{"name":"LorentzVector.contrDownUp_invariant_lorentzAction","declaration":"theorem LorentzVector.contrDownUp_invariant_lorentzAction {d : ℕ} {g : ↑(LorentzGroup d)} {x : CovariantLorentzVector d} {y : LorentzVector d} : LorentzVector.contrDownUp ((CovariantLorentzVector.rep g) x ⊗ₜ[ℝ] (LorentzVector.rep g) y) =\n  LorentzVector.contrDownUp (x ⊗ₜ[ℝ] y)"}
{"name":"LorentzVector.contrUpDownBi","declaration":"/-- The bi-linear map defining the contraction of a contravariant Lorentz vector\nand a covariant Lorentz vector. -/\ndef LorentzVector.contrUpDownBi {d : ℕ} : LorentzVector d →ₗ[ℝ] CovariantLorentzVector d →ₗ[ℝ] ℝ"}
{"name":"LorentzVector.unitUp","declaration":"/-- The unit of the contraction of contravariant Lorentz vector and a\ncovariant Lorentz vector. -/\ndef LorentzVector.unitUp {d : ℕ} : TensorProduct ℝ (CovariantLorentzVector d) (LorentzVector d)"}
