{"name":"MSSMACC.AnomalyFreePerp.toSol_inQuadCube","declaration":"theorem MSSMACC.AnomalyFreePerp.toSol_inQuadCube (T : MSSMACC.AnomalyFreePerp.InQuadCubeSol) : ∃ X, MSSMACC.AnomalyFreePerp.toSol X = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.lineEqCoeff","declaration":"/-- A rational which appears in `toSolNS` acting on sols, and which being zero is\nequivalent to satisfying `lineEqPropSol`. -/\ndef MSSMACC.AnomalyFreePerp.lineEqCoeff (T : ACCSystem.Sols MSSMACC) : ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadCubeToSol_proj","declaration":"theorem MSSMACC.AnomalyFreePerp.inQuadCubeToSol_proj (T : MSSMACC.AnomalyFreePerp.InQuadCubeSol) : MSSMACC.AnomalyFreePerp.inQuadCubeToSol (MSSMACC.AnomalyFreePerp.inQuadCubeProj T) = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.inLineEqTo_smul","declaration":"theorem MSSMACC.AnomalyFreePerp.inLineEqTo_smul (R : MSSMACC.AnomalyFreePerp.InLineEq) (c₁ : ℚ) (c₂ : ℚ) (c₃ : ℚ) (d : ℚ) : MSSMACC.AnomalyFreePerp.inLineEqToSol (R, d * c₁, d * c₂, d * c₃) =\n  d • MSSMACC.AnomalyFreePerp.inLineEqToSol (R, c₁, c₂, c₃)"}
{"name":"MSSMACC.AnomalyFreePerp.instDecidableInCubeProp","declaration":"instance MSSMACC.AnomalyFreePerp.instDecidableInCubeProp (R : MSSMACC.AnomalyFreePerp) : Decidable (MSSMACC.AnomalyFreePerp.InCubeProp R)"}
{"name":"MSSMACC.AnomalyFreePerp.NotInLineEqSol","declaration":"/-- Those solutions which do not satisfy the condition `lineEqPropSol`. -/\ndef MSSMACC.AnomalyFreePerp.NotInLineEqSol  : Type"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadSolProp_iff_proj_inQuadProp","declaration":"/-- The conditions `inQuadSolProp R` and `inQuadProp (proj R.1.1)` are equivalent. This is to be\nexpected since both `R` and `proj R.1.1` define the same plane with `Y₃` and `B₃`. -/\ntheorem MSSMACC.AnomalyFreePerp.inQuadSolProp_iff_proj_inQuadProp (R : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp.InQuadSolProp R ↔ MSSMACC.AnomalyFreePerp.InQuadProp (MSSMACC.proj R.toLinSols)"}
{"name":"MSSMACC.AnomalyFreePerp.InCubeProp","declaration":"/-- A condition which is satisfied if the plane spanned by `R`, `Y₃` and `B₃` lies\nentirely in the cubic surface. -/\ndef MSSMACC.AnomalyFreePerp.InCubeProp (R : MSSMACC.AnomalyFreePerp) : Prop"}
{"name":"MSSMACC.AnomalyFreePerp.toSolNSQuad_eq_planeY₃B₃_on_α","declaration":"theorem MSSMACC.AnomalyFreePerp.toSolNSQuad_eq_planeY₃B₃_on_α (R : MSSMACC.AnomalyFreePerp) : (MSSMACC.AnomalyFreePerp.toSolNSQuad R).toLinSols = MSSMACC.planeY₃B₃ R (MSSMACC.α₁ R) (MSSMACC.α₂ R) (MSSMACC.α₃ R)"}
{"name":"MSSMACC.AnomalyFreePerp.toSol_surjective","declaration":"theorem MSSMACC.AnomalyFreePerp.toSol_surjective  : Function.Surjective MSSMACC.AnomalyFreePerp.toSol"}
{"name":"MSSMACC.AnomalyFreePerp.toSolNS_proj","declaration":"theorem MSSMACC.AnomalyFreePerp.toSolNS_proj (T : MSSMACC.AnomalyFreePerp.NotInLineEqSol) : MSSMACC.AnomalyFreePerp.toSolNS (MSSMACC.AnomalyFreePerp.toSolNSProj ↑T) = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadToSol_proj","declaration":"theorem MSSMACC.AnomalyFreePerp.inQuadToSol_proj (T : MSSMACC.AnomalyFreePerp.InQuadSol) : MSSMACC.AnomalyFreePerp.inQuadToSol (MSSMACC.AnomalyFreePerp.inQuadProj T) = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.inCubeSolProp_iff_cubicCoeff_zero","declaration":"theorem MSSMACC.AnomalyFreePerp.inCubeSolProp_iff_cubicCoeff_zero (T : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp.InCubeSolProp T ↔ MSSMACC.AnomalyFreePerp.cubicCoeff T = 0"}
{"name":"MSSMACC.AnomalyFreePerp.LineEqProp","declaration":"/-- A condition for the quad line in the plane spanned by R, Y₃ and B₃ to sit in the cubic,\nand for the cube line to sit in the quad. -/\ndef MSSMACC.AnomalyFreePerp.LineEqProp (R : MSSMACC.AnomalyFreePerp) : Prop"}
{"name":"MSSMACC.AnomalyFreePerp.linEqPropSol_iff_proj_linEqProp","declaration":"theorem MSSMACC.AnomalyFreePerp.linEqPropSol_iff_proj_linEqProp (R : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp.LineEqPropSol R ↔ MSSMACC.AnomalyFreePerp.LineEqProp (MSSMACC.proj R.toLinSols)"}
{"name":"MSSMACC.AnomalyFreePerp.toSol_inLineEq","declaration":"theorem MSSMACC.AnomalyFreePerp.toSol_inLineEq (T : MSSMACC.AnomalyFreePerp.InLineEqSol) : ∃ X, MSSMACC.AnomalyFreePerp.toSol X = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.inLineEqProj","declaration":"/-- On elements of `inLineEqSol` a right-inverse to `inLineEqSol`. -/\ndef MSSMACC.AnomalyFreePerp.inLineEqProj (T : MSSMACC.AnomalyFreePerp.InLineEqSol) : MSSMACC.AnomalyFreePerp.InLineEq × ℚ × ℚ × ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.instDecidableInQuadProp","declaration":"instance MSSMACC.AnomalyFreePerp.instDecidableInQuadProp (R : MSSMACC.AnomalyFreePerp) : Decidable (MSSMACC.AnomalyFreePerp.InQuadProp R)"}
{"name":"MSSMACC.AnomalyFreePerp.InQuadSolProp","declaration":"/-- A condition which is satisfied if the plane spanned by the solutions `R`, `Y₃` and `B₃`\nlies entirely in the quadratic surface. -/\ndef MSSMACC.AnomalyFreePerp.InQuadSolProp (R : ACCSystem.Sols MSSMACC) : Prop"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadCubeToSol","declaration":"/-- Given a element of `inQuadCube × ℚ × ℚ × ℚ`, a solution to the ACCs. -/\ndef MSSMACC.AnomalyFreePerp.inQuadCubeToSol  : MSSMACC.AnomalyFreePerp.InQuadCube × ℚ × ℚ × ℚ → ACCSystem.Sols MSSMACC"}
{"name":"MSSMACC.AnomalyFreePerp.InQuadCubeSol","declaration":"/-- Those solutions which satisfy the conditions `lineEqPropSol`, `inQuadSolProp`\nand `inCubeSolProp`. -/\ndef MSSMACC.AnomalyFreePerp.InQuadCubeSol  : Type"}
{"name":"MSSMACC.AnomalyFreePerp.LineEqPropSol","declaration":"/-- A condition on `Sols` which we will show in `linEqPropSol_iff_proj_linEqProp` that is equivalent\nto the condition that the `proj` of the solution satisfies `lineEqProp`. -/\ndef MSSMACC.AnomalyFreePerp.LineEqPropSol (R : ACCSystem.Sols MSSMACC) : Prop"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadToSol","declaration":"/-- Given an element of `inQuad × ℚ × ℚ × ℚ`, a solution to the ACCs. -/\ndef MSSMACC.AnomalyFreePerp.inQuadToSol  : MSSMACC.AnomalyFreePerp.InQuad × ℚ × ℚ × ℚ → ACCSystem.Sols MSSMACC"}
{"name":"MSSMACC.AnomalyFreePerp.InQuadCube","declaration":"/-- Those charge assignments perpendicular to `Y₃` and `B₃` which satisfy the conditions\n`lineEqProp`, `inQuadProp` and `inCubeProp`. -/\ndef MSSMACC.AnomalyFreePerp.InQuadCube  : Type"}
{"name":"MSSMACC.AnomalyFreePerp.lineEqPropSol_iff_lineEqCoeff_zero","declaration":"theorem MSSMACC.AnomalyFreePerp.lineEqPropSol_iff_lineEqCoeff_zero (T : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp.LineEqPropSol T ↔ MSSMACC.AnomalyFreePerp.lineEqCoeff T = 0"}
{"name":"MSSMACC.AnomalyFreePerp.toSolNSQuad","declaration":"/-- Given an `R` perpendicular to `Y₃` and `B₃` a quadratic solution. -/\ndef MSSMACC.AnomalyFreePerp.toSolNSQuad (R : MSSMACC.AnomalyFreePerp) : ACCSystemQuad.QuadSols MSSMACC.toACCSystemQuad"}
{"name":"MSSMACC.AnomalyFreePerp.inLineEqToSol_proj","declaration":"theorem MSSMACC.AnomalyFreePerp.inLineEqToSol_proj (T : MSSMACC.AnomalyFreePerp.InLineEqSol) : MSSMACC.AnomalyFreePerp.inLineEqToSol (MSSMACC.AnomalyFreePerp.inLineEqProj T) = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.instDecidableLineEqProp","declaration":"instance MSSMACC.AnomalyFreePerp.instDecidableLineEqProp (R : MSSMACC.AnomalyFreePerp) : Decidable (MSSMACC.AnomalyFreePerp.LineEqProp R)"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadCubeToSol_smul","declaration":"theorem MSSMACC.AnomalyFreePerp.inQuadCubeToSol_smul (R : MSSMACC.AnomalyFreePerp.InQuadCube) (c₁ : ℚ) (c₂ : ℚ) (c₃ : ℚ) (d : ℚ) : MSSMACC.AnomalyFreePerp.inQuadCubeToSol (R, d * c₁, d * c₂, d * c₃) =\n  d • MSSMACC.AnomalyFreePerp.inQuadCubeToSol (R, c₁, c₂, c₃)"}
{"name":"MSSMACC.AnomalyFreePerp.InQuadSol","declaration":"/-- Those solutions which satisfy the condition `lineEqPropSol` and `inQuadSolProp` but\nnot `inCubeSolProp`. -/\ndef MSSMACC.AnomalyFreePerp.InQuadSol  : Type"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadToSol_smul","declaration":"theorem MSSMACC.AnomalyFreePerp.inQuadToSol_smul (R : MSSMACC.AnomalyFreePerp.InQuad) (c₁ : ℚ) (c₂ : ℚ) (c₃ : ℚ) (d : ℚ) : MSSMACC.AnomalyFreePerp.inQuadToSol (R, d * c₁, d * c₂, d * c₃) =\n  d • MSSMACC.AnomalyFreePerp.inQuadToSol (R, c₁, c₂, c₃)"}
{"name":"MSSMACC.AnomalyFreePerp.toSolNSProj","declaration":"/-- A map from `Sols` to `MSSMACC.AnomalyFreePerp × ℚ × ℚ × ℚ` which on elements of\n`notInLineEqSol` will produce a right inverse to `toSolNS`. -/\ndef MSSMACC.AnomalyFreePerp.toSolNSProj (T : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp × ℚ × ℚ × ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.toSol_inQuad","declaration":"theorem MSSMACC.AnomalyFreePerp.toSol_inQuad (T : MSSMACC.AnomalyFreePerp.InQuadSol) : ∃ X, MSSMACC.AnomalyFreePerp.toSol X = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.toSolNSQuad_cube","declaration":"theorem MSSMACC.AnomalyFreePerp.toSolNSQuad_cube (R : MSSMACC.AnomalyFreePerp) : MSSMACCs.accCube (MSSMACC.AnomalyFreePerp.toSolNSQuad R).val = 0"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadCubeProj","declaration":"/-- On elements of `inQuadCubeSol` a right-inverse to `inQuadCubeToSol`. -/\ndef MSSMACC.AnomalyFreePerp.inQuadCubeProj (T : MSSMACC.AnomalyFreePerp.InQuadCubeSol) : MSSMACC.AnomalyFreePerp.InQuadCube × ℚ × ℚ × ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadSolProp_iff_quadCoeff_zero","declaration":"theorem MSSMACC.AnomalyFreePerp.inQuadSolProp_iff_quadCoeff_zero (T : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp.InQuadSolProp T ↔ MSSMACC.AnomalyFreePerp.quadCoeff T = 0"}
{"name":"MSSMACC.AnomalyFreePerp.InQuadProp","declaration":"/-- A condition which is satisfied if the plane spanned by `R`, `Y₃` and `B₃` lies\nentirely in the quadratic surface. -/\ndef MSSMACC.AnomalyFreePerp.InQuadProp (R : MSSMACC.AnomalyFreePerp) : Prop"}
{"name":"MSSMACC.AnomalyFreePerp.inQuadProj","declaration":"/-- On elements of `inQuadSol` a right-inverse to `inQuadToSol`. -/\ndef MSSMACC.AnomalyFreePerp.inQuadProj (T : MSSMACC.AnomalyFreePerp.InQuadSol) : MSSMACC.AnomalyFreePerp.InQuad × ℚ × ℚ × ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.toSol","declaration":"/-- A solution from an element of `MSSMACC.AnomalyFreePerp × ℚ × ℚ × ℚ`. We will\nshow that this map is a surjection. -/\ndef MSSMACC.AnomalyFreePerp.toSol  : MSSMACC.AnomalyFreePerp × ℚ × ℚ × ℚ → ACCSystem.Sols MSSMACC"}
{"name":"MSSMACC.AnomalyFreePerp.InCubeSolProp","declaration":"/-- A condition which is satisfied if the plane spanned by the solutions `R`, `Y₃` and `B₃`\nlies entirely in the cubic surface. -/\ndef MSSMACC.AnomalyFreePerp.InCubeSolProp (R : ACCSystem.Sols MSSMACC) : Prop"}
{"name":"MSSMACC.AnomalyFreePerp.toSol_toSolNSProj","declaration":"theorem MSSMACC.AnomalyFreePerp.toSol_toSolNSProj (T : MSSMACC.AnomalyFreePerp.NotInLineEqSol) : ∃ X, MSSMACC.AnomalyFreePerp.toSol X = ↑T"}
{"name":"MSSMACC.AnomalyFreePerp.inCubeSolProp_iff_proj_inCubeProp","declaration":"theorem MSSMACC.AnomalyFreePerp.inCubeSolProp_iff_proj_inCubeProp (R : ACCSystem.Sols MSSMACC) : MSSMACC.AnomalyFreePerp.InCubeSolProp R ↔ MSSMACC.AnomalyFreePerp.InCubeProp (MSSMACC.proj R.toLinSols)"}
{"name":"MSSMACC.AnomalyFreePerp.cubicCoeff","declaration":"/-- A rational which has two properties. It is zero for a solution `T` if and only if\nthat solution satisfies `inCubeSolProp`. It appears in the definition of `inLineEqProj`. -/\ndef MSSMACC.AnomalyFreePerp.cubicCoeff (T : ACCSystem.Sols MSSMACC) : ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.InQuad","declaration":"/-- Those charge assignments perpendicular to `Y₃` and `B₃` which satisfy the conditions\n`lineEqProp` and `inQuadProp`. -/\ndef MSSMACC.AnomalyFreePerp.InQuad  : Type"}
{"name":"MSSMACC.AnomalyFreePerp.quadCoeff","declaration":"/-- A rational which has two properties. It is zero for a solution `T` if and only if\nthat solution satisfies `inQuadSolProp`. It appears in the definition of `inQuadProj`. -/\ndef MSSMACC.AnomalyFreePerp.quadCoeff (T : ACCSystem.Sols MSSMACC) : ℚ"}
{"name":"MSSMACC.AnomalyFreePerp.inLineEqToSol","declaration":"/-- A solution to the ACCs, given an element of `inLineEq × ℚ × ℚ × ℚ`. -/\ndef MSSMACC.AnomalyFreePerp.inLineEqToSol  : MSSMACC.AnomalyFreePerp.InLineEq × ℚ × ℚ × ℚ → ACCSystem.Sols MSSMACC"}
{"name":"MSSMACC.AnomalyFreePerp.InLineEq","declaration":"/-- Those charge assignments perpendicular to `Y₃` and `B₃` which satisfy the condition\n`lineEqProp`. -/\ndef MSSMACC.AnomalyFreePerp.InLineEq  : Type"}
{"name":"MSSMACC.AnomalyFreePerp.toSolNS","declaration":"/-- Given an `R` perpendicular to `Y₃` and `B₃`, an element of `Sols`. This map is\nnot surjective. -/\ndef MSSMACC.AnomalyFreePerp.toSolNS  : MSSMACC.AnomalyFreePerp × ℚ × ℚ × ℚ → ACCSystem.Sols MSSMACC"}
{"name":"MSSMACC.AnomalyFreePerp.InLineEqSol","declaration":"/-- Those solutions which satisfy the condition `lineEqPropSol` but not `inQuadSolProp`. -/\ndef MSSMACC.AnomalyFreePerp.InLineEqSol  : Type"}
