{"name":"CKMMatrix.ubOnePhaseCond_hold_up_to_equiv_of_ub_one","declaration":"theorem CKMMatrix.ubOnePhaseCond_hold_up_to_equiv_of_ub_one {V : CKMMatrix} (hb : ¬(↑V 0 0 ≠ 0 ∨ ↑V 0 1 ≠ 0)) (hV : CKMMatrix.FstRowThdColRealCond V) : ∃ U, V ≈ U ∧ CKMMatrix.ubOnePhaseCond U"}
{"name":"CKMMatrix.cd_of_fstRowThdColRealCond","declaration":"theorem CKMMatrix.cd_of_fstRowThdColRealCond {V : CKMMatrix} (hb : ↑V 0 0 ≠ 0 ∨ ↑V 0 1 ≠ 0) (hV : CKMMatrix.FstRowThdColRealCond V) : ↑V 1 0 =\n  -↑(VtbAbs ⟦V⟧) * ↑(VusAbs ⟦V⟧) / (↑(VudAbs ⟦V⟧) ^ 2 + ↑(VusAbs ⟦V⟧) ^ 2) +\n    -↑(VubAbs ⟦V⟧) * ↑(VudAbs ⟦V⟧) * ↑(VcbAbs ⟦V⟧) / (↑(VudAbs ⟦V⟧) ^ 2 + ↑(VusAbs ⟦V⟧) ^ 2) *\n      Complex.exp (-↑(Complex.arg (↑V 0 2)) * Complex.I)"}
{"name":"CKMMatrix.shift_ub_phase_zero","declaration":"theorem CKMMatrix.shift_ub_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} (h1 : u + b = -Complex.arg (↑V 0 2)) : ↑(phaseShiftApply V u c t d s b) 0 2 = ↑(VubAbs ⟦V⟧)"}
{"name":"CKMMatrix.cs_of_fstRowThdColRealCond","declaration":"theorem CKMMatrix.cs_of_fstRowThdColRealCond {V : CKMMatrix} (hb : ↑V 0 0 ≠ 0 ∨ ↑V 0 1 ≠ 0) (hV : CKMMatrix.FstRowThdColRealCond V) : ↑V 1 1 =\n  ↑(VtbAbs ⟦V⟧) * ↑(VudAbs ⟦V⟧) / (↑(VudAbs ⟦V⟧) ^ 2 + ↑(VusAbs ⟦V⟧) ^ 2) +\n    -↑(VubAbs ⟦V⟧) * ↑(VusAbs ⟦V⟧) * ↑(VcbAbs ⟦V⟧) / (↑(VudAbs ⟦V⟧) ^ 2 + ↑(VusAbs ⟦V⟧) ^ 2) *\n      Complex.exp (-↑(Complex.arg (↑V 0 2)) * Complex.I)"}
{"name":"CKMMatrix.shift_ud_phase_zero","declaration":"theorem CKMMatrix.shift_ud_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) (V : CKMMatrix) (h1 : u + d = -Complex.arg (↑V 0 0)) : ↑(phaseShiftApply V u c t d s b) 0 0 = ↑(VudAbs ⟦V⟧)"}
{"name":"CKMMatrix.shift_us_phase_zero","declaration":"theorem CKMMatrix.shift_us_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} (h1 : u + s = -Complex.arg (↑V 0 1)) : ↑(phaseShiftApply V u c t d s b) 0 1 = ↑(VusAbs ⟦V⟧)"}
{"name":"CKMMatrix.fstRowThdColRealCond_shift_solution","declaration":"theorem CKMMatrix.fstRowThdColRealCond_shift_solution (a : ℝ) (b : ℝ) (c : ℝ) (d : ℝ) (e : ℝ) (f : ℝ) {τ : ℝ} {V : CKMMatrix} (h1 : a + d = -Complex.arg (↑V 0 0)) (h2 : a + e = -Complex.arg (↑V 0 1)) (h3 : b + f = -Complex.arg (↑V 1 2)) (h4 : c + f = -Complex.arg (↑V 2 2)) (h5 : τ = -a - b - c - d - e - f) : b = -τ + Complex.arg (↑V 0 0) + Complex.arg (↑V 0 1) + Complex.arg (↑V 2 2) + a ∧\n  c = -τ + Complex.arg (↑V 1 2) + Complex.arg (↑V 0 0) + Complex.arg (↑V 0 1) + a ∧\n    d = -Complex.arg (↑V 0 0) - a ∧\n      e = -Complex.arg (↑V 0 1) - a ∧\n        f = τ - Complex.arg (↑V 0 0) - Complex.arg (↑V 0 1) - Complex.arg (↑V 1 2) - Complex.arg (↑V 2 2) - a"}
{"name":"CKMMatrix.FstRowThdColRealCond","declaration":"/-- A proposition which is satisfied by a CKM matrix if its `ud`, `us`, `cb` and `tb` elements\nare positive and real, and there is no phase difference between the `t`th-row and\nthe cross product of the conjugates of the `u`th and `c`th rows. -/\ndef CKMMatrix.FstRowThdColRealCond (U : CKMMatrix) : Prop"}
{"name":"CKMMatrix.shift_cd_phase_pi","declaration":"theorem CKMMatrix.shift_cd_phase_pi (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} (h1 : c + d = Real.pi - Complex.arg (↑V 1 0)) : ↑(phaseShiftApply V u c t d s b) 1 0 = -↑(VcdAbs ⟦V⟧)"}
{"name":"CKMMatrix.shift_tb_phase_zero","declaration":"theorem CKMMatrix.shift_tb_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} (h1 : t + b = -Complex.arg (↑V 2 2)) : ↑(phaseShiftApply V u c t d s b) 2 2 = ↑(VtbAbs ⟦V⟧)"}
{"name":"CKMMatrix.ubOnePhaseCond_shift_solution","declaration":"theorem CKMMatrix.ubOnePhaseCond_shift_solution (a : ℝ) (b : ℝ) (c : ℝ) (d : ℝ) (e : ℝ) (f : ℝ) {V : CKMMatrix} (h1 : a + f = -Complex.arg (↑V 0 2)) (h2 : 0 = -a - b - c - d - e - f) (h3 : b + d = Real.pi - Complex.arg (↑V 1 0)) (h5 : b + e = -Complex.arg (↑V 1 1)) : c = -Real.pi + Complex.arg (↑V 1 0) + Complex.arg (↑V 1 1) + Complex.arg (↑V 0 2) + b ∧\n  d = Real.pi - Complex.arg (↑V 1 0) - b ∧ e = -Complex.arg (↑V 1 1) - b ∧ f = -Complex.arg (↑V 0 2) - a"}
{"name":"CKMMatrix.shift_cross_product_phase_zero","declaration":"theorem CKMMatrix.shift_cross_product_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} {τ : ℝ} (hτ : Complex.exp (↑τ * Complex.I) •\n    (crossProduct ((starRingEnd (Fin 3 → ℂ)) (CKMMatrix.uRow V))) ((starRingEnd (Fin 3 → ℂ)) (CKMMatrix.cRow V)) =\n  CKMMatrix.tRow V) (h1 : τ = -u - c - t - d - s - b) : CKMMatrix.tRow (phaseShiftApply V u c t d s b) =\n  (crossProduct ((starRingEnd (Fin 3 → ℂ)) (CKMMatrix.uRow (phaseShiftApply V u c t d s b))))\n    ((starRingEnd (Fin 3 → ℂ)) (CKMMatrix.cRow (phaseShiftApply V u c t d s b)))"}
{"name":"CKMMatrix.fstRowThdColRealCond_holds_up_to_equiv","declaration":"theorem CKMMatrix.fstRowThdColRealCond_holds_up_to_equiv (V : CKMMatrix) : ∃ U, V ≈ U ∧ CKMMatrix.FstRowThdColRealCond U"}
{"name":"CKMMatrix.shift_cs_phase_zero","declaration":"theorem CKMMatrix.shift_cs_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} (h1 : c + s = -Complex.arg (↑V 1 1)) : ↑(phaseShiftApply V u c t d s b) 1 1 = ↑(VcsAbs ⟦V⟧)"}
{"name":"CKMMatrix.shift_cb_phase_zero","declaration":"theorem CKMMatrix.shift_cb_phase_zero (u : ℝ) (c : ℝ) (t : ℝ) (d : ℝ) (s : ℝ) (b : ℝ) {V : CKMMatrix} (h1 : c + b = -Complex.arg (↑V 1 2)) : ↑(phaseShiftApply V u c t d s b) 1 2 = ↑(VcbAbs ⟦V⟧)"}
{"name":"CKMMatrix.ubOnePhaseCond","declaration":"/-- A proposition which is satisfied by a CKM matrix `ub` is one, `ud`, `us` and `cb` are zero,\n  there is no phase difference between the `t`th-row and\nthe cross product of the conjugates of the `u`th and `c`th rows, and the `cd`th and `cs`th\nelements are real and related in a set way.\n-/\ndef CKMMatrix.ubOnePhaseCond (U : CKMMatrix) : Prop"}
