{"name":"SM.chargesMapOfSpeciesMap","declaration":"/-- Given a map of for a generic species, the corresponding map for charges. -/\ndef SM.chargesMapOfSpeciesMap {n : ℕ} {m : ℕ} (f : ACCSystemCharges.Charges (SMSpecies n) →ₗ[ℚ] ACCSystemCharges.Charges (SMSpecies m)) : ACCSystemCharges.Charges (SMCharges n) →ₗ[ℚ] ACCSystemCharges.Charges (SMCharges m)"}
{"name":"SM.familyEmbedding","declaration":"/-- The embedding of the `m`-family charges onto the `n`-family charges, with all\nother charges zero. -/\ndef SM.familyEmbedding (m : ℕ) (n : ℕ) : ACCSystemCharges.Charges (SMCharges m) →ₗ[ℚ] ACCSystemCharges.Charges (SMCharges n)"}
{"name":"SM.chargesMapOfSpeciesMap_apply","declaration":"theorem SM.chargesMapOfSpeciesMap_apply {n : ℕ} {m : ℕ} (f : ACCSystemCharges.Charges (SMSpecies n) →ₗ[ℚ] ACCSystemCharges.Charges (SMSpecies m)) (S : ACCSystemCharges.Charges (SMCharges n)) : (SM.chargesMapOfSpeciesMap f) S = SMCharges.toSpeciesEquiv.symm fun i => f ((SMCharges.toSpecies i) S)"}
{"name":"SM.speciesFamilyUniversial_apply","declaration":"theorem SM.speciesFamilyUniversial_apply (n : ℕ) (S : ACCSystemCharges.Charges (SMSpecies 1)) : ∀ (x : Fin (SMSpecies n).numberCharges), (SM.speciesFamilyUniversial n) S x = S 0"}
{"name":"SM.speciesFamilyUniversial","declaration":"/-- For species, the embedding of the `1`-family charges into the `n`-family charges in\na universal manor. -/\ndef SM.speciesFamilyUniversial (n : ℕ) : ACCSystemCharges.Charges (SMSpecies 1) →ₗ[ℚ] ACCSystemCharges.Charges (SMSpecies n)"}
{"name":"SM.speciesFamilyProj","declaration":"/-- The projection of the `m`-family charges onto the first `n`-family charges for species. -/\ndef SM.speciesFamilyProj {m : ℕ} {n : ℕ} (h : n ≤ m) : ACCSystemCharges.Charges (SMSpecies m) →ₗ[ℚ] ACCSystemCharges.Charges (SMSpecies n)"}
{"name":"SM.speciesEmbed_apply","declaration":"theorem SM.speciesEmbed_apply (m : ℕ) (n : ℕ) (S : ACCSystemCharges.Charges (SMSpecies m)) (i : Fin (SMSpecies n).numberCharges) : (SM.speciesEmbed m n) S i = if hi : ↑i < m then S { val := ↑i, isLt := hi } else 0"}
{"name":"SM.speciesFamilyProj_apply","declaration":"theorem SM.speciesFamilyProj_apply {m : ℕ} {n : ℕ} (h : n ≤ m) (S : ACCSystemCharges.Charges (SMSpecies m)) : ∀ (a : Fin (SMSpecies n).numberCharges), (SM.speciesFamilyProj h) S a = S (Fin.castLE h a)"}
{"name":"SM.familyProjection","declaration":"/-- The projection of the `m`-family charges onto the first `n`-family charges. -/\ndef SM.familyProjection {m : ℕ} {n : ℕ} (h : n ≤ m) : ACCSystemCharges.Charges (SMCharges m) →ₗ[ℚ] ACCSystemCharges.Charges (SMCharges n)"}
{"name":"SM.familyUniversal","declaration":"/-- The embedding of the `1`-family charges into the `n`-family charges in\na universal manor. -/\ndef SM.familyUniversal (n : ℕ) : ACCSystemCharges.Charges (SMCharges 1) →ₗ[ℚ] ACCSystemCharges.Charges (SMCharges n)"}
{"name":"SM.speciesEmbed","declaration":"/-- For species, the embedding of the `m`-family charges onto the `n`-family charges, with all\nother charges zero. -/\ndef SM.speciesEmbed (m : ℕ) (n : ℕ) : ACCSystemCharges.Charges (SMSpecies m) →ₗ[ℚ] ACCSystemCharges.Charges (SMSpecies n)"}
