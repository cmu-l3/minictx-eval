{"name":"LorentzGroup.id_IsProper","declaration":"theorem LorentzGroup.id_IsProper {d : ℕ} : LorentzGroup.IsProper 1"}
{"name":"LorentzGroup.instTopologicalSpaceMultiplicativeZModOfNatNatInstOfNatNat","declaration":"instance LorentzGroup.instTopologicalSpaceMultiplicativeZModOfNatNatInstOfNatNat  : TopologicalSpace (Multiplicative (ZMod 2))"}
{"name":"LorentzGroup.IsProper","declaration":"/-- A Lorentz Matrix is proper if its determinant is 1. -/\ndef LorentzGroup.IsProper {d : ℕ} (Λ : ↑(LorentzGroup d)) : Prop"}
{"name":"LorentzGroup.det_of_joined","declaration":"theorem LorentzGroup.det_of_joined {d : ℕ} {Λ : ↑(LorentzGroup d)} {Λ' : ↑(LorentzGroup d)} (h : Joined Λ Λ') : Matrix.det ↑Λ = Matrix.det ↑Λ'"}
{"name":"LorentzGroup.coeForℤ₂_apply","declaration":"theorem LorentzGroup.coeForℤ₂_apply (x : ↑{-1, 1}) : LorentzGroup.coeForℤ₂ x = if x = { val := 1, property := LorentzGroup.coeForℤ₂.proof_1 } then 1 else Additive.toMul 1"}
{"name":"LorentzGroup.instDiscreteTopologyMultiplicativeZModOfNatNatInstOfNatNatInstTopologicalSpaceMultiplicativeZModOfNatNatInstOfNatNat","declaration":"instance LorentzGroup.instDiscreteTopologyMultiplicativeZModOfNatNatInstOfNatNatInstTopologicalSpaceMultiplicativeZModOfNatNatInstOfNatNat  : DiscreteTopology (Multiplicative (ZMod 2))"}
{"name":"LorentzGroup.detRep_apply","declaration":"theorem LorentzGroup.detRep_apply {d : ℕ} (Λ : ↑(LorentzGroup d)) : LorentzGroup.detRep Λ = LorentzGroup.detContinuous Λ"}
{"name":"Finite.instDiscreteTopology","declaration":"instance Finite.instDiscreteTopology {X : Type u_1} [TopologicalSpace X] [T1Space X] [Finite X] : DiscreteTopology X"}
{"name":"LorentzGroup.instTopologicalGroupMultiplicativeZModOfNatNatInstOfNatNatInstTopologicalSpaceMultiplicativeZModOfNatNatInstOfNatNatGroupToAddGroupToAddGroupWithOneToRingToDivisionRingInstFieldZModFact_prime_two","declaration":"instance LorentzGroup.instTopologicalGroupMultiplicativeZModOfNatNatInstOfNatNatInstTopologicalSpaceMultiplicativeZModOfNatNatInstOfNatNatGroupToAddGroupToAddGroupWithOneToRingToDivisionRingInstFieldZModFact_prime_two  : TopologicalGroup (Multiplicative (ZMod 2))"}
{"name":"LorentzGroup.IsProper_iff","declaration":"theorem LorentzGroup.IsProper_iff {d : ℕ} (Λ : ↑(LorentzGroup d)) : LorentzGroup.IsProper Λ ↔ LorentzGroup.detRep Λ = 1"}
{"name":"LorentzGroup.detRep_on_connected_component","declaration":"theorem LorentzGroup.detRep_on_connected_component {d : ℕ} {Λ : ↑(LorentzGroup d)} {Λ' : ↑(LorentzGroup d)} (h : Λ' ∈ connectedComponent Λ) : LorentzGroup.detRep Λ = LorentzGroup.detRep Λ'"}
{"name":"LorentzGroup.detContinuous","declaration":"/-- The continuous map taking a Lorentz matrix to its determinant. -/\ndef LorentzGroup.detContinuous {d : ℕ} : C(↑(LorentzGroup d), Multiplicative (ZMod 2))"}
{"name":"LorentzGroup.detContinuous_eq_one","declaration":"theorem LorentzGroup.detContinuous_eq_one {d : ℕ} (Λ : ↑(LorentzGroup d)) : LorentzGroup.detContinuous Λ = Additive.toMul 0 ↔ Matrix.det ↑Λ = 1"}
{"name":"toMul_eq_one","declaration":"theorem toMul_eq_one {α : Type u_1} [One α] {x : Additive α} : Additive.toMul x = 1 ↔ x = 0"}
{"name":"LorentzGroup.det_on_connected_component","declaration":"theorem LorentzGroup.det_on_connected_component {d : ℕ} {Λ : ↑(LorentzGroup d)} {Λ' : ↑(LorentzGroup d)} (h : Λ' ∈ connectedComponent Λ) : Matrix.det ↑Λ = Matrix.det ↑Λ'"}
{"name":"LorentzGroup.isProper_on_connected_component","declaration":"theorem LorentzGroup.isProper_on_connected_component {d : ℕ} {Λ : ↑(LorentzGroup d)} {Λ' : ↑(LorentzGroup d)} (h : Λ' ∈ connectedComponent Λ) : LorentzGroup.IsProper Λ ↔ LorentzGroup.IsProper Λ'"}
{"name":"LorentzGroup.det_eq_one_or_neg_one","declaration":"/-- The determinant of a member of the Lorentz group is `1` or `-1`. -/\ntheorem LorentzGroup.det_eq_one_or_neg_one {d : ℕ} (Λ : ↑(LorentzGroup d)) : Matrix.det ↑Λ = 1 ∨ Matrix.det ↑Λ = -1"}
{"name":"LorentzGroup.detRep_continuous","declaration":"theorem LorentzGroup.detRep_continuous {d : ℕ} : Continuous ⇑LorentzGroup.detRep"}
{"name":"LorentzGroup.coeForℤ₂","declaration":"/-- A continuous function from `({-1, 1} : Set ℝ)` to `ℤ₂`. -/\ndef LorentzGroup.coeForℤ₂  : C(↑{-1, 1}, Multiplicative (ZMod 2))"}
{"name":"LorentzGroup.detContinuous_eq_iff_det_eq","declaration":"theorem LorentzGroup.detContinuous_eq_iff_det_eq {d : ℕ} (Λ : ↑(LorentzGroup d)) (Λ' : ↑(LorentzGroup d)) : LorentzGroup.detContinuous Λ = LorentzGroup.detContinuous Λ' ↔ Matrix.det ↑Λ = Matrix.det ↑Λ'"}
{"name":"LorentzGroup.instDecidablePredElemMatrixSumFinOfNatNatInstOfNatNatRealLorentzGroupIsProper","declaration":"instance LorentzGroup.instDecidablePredElemMatrixSumFinOfNatNatInstOfNatNatRealLorentzGroupIsProper {d : ℕ} : DecidablePred LorentzGroup.IsProper"}
{"name":"LorentzGroup.detRep","declaration":"/-- The representation taking a Lorentz matrix to its determinant. -/\ndef LorentzGroup.detRep {d : ℕ} : ↑(LorentzGroup d) →* Multiplicative (ZMod 2)"}
{"name":"LorentzGroup.detContinuous_eq_zero","declaration":"theorem LorentzGroup.detContinuous_eq_zero {d : ℕ} (Λ : ↑(LorentzGroup d)) : LorentzGroup.detContinuous Λ = Additive.toMul 1 ↔ Matrix.det ↑Λ = -1"}
