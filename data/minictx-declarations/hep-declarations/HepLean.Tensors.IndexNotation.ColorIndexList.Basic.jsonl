{"name":"IndexNotation.ColorIndexList.orderEmbOfFin_univ","declaration":"theorem IndexNotation.ColorIndexList.orderEmbOfFin_univ (n : ℕ) (m : ℕ) (h : n = m) : Finset.orderEmbOfFin Finset.univ ⋯ = OrderIso.toOrderEmbedding (Fin.castIso ⋯)"}
{"name":"IndexNotation.ColorIndexList.mk","declaration":"ctor IndexNotation.ColorIndexList.mk {𝓒 : TensorColor} [IndexNotation 𝓒.Color] (toIndexList : IndexNotation.IndexList 𝓒.Color) (unique_duals : IndexNotation.IndexList.OnlyUniqueDuals toIndexList) (dual_color : IndexNotation.IndexList.ColorCond toIndexList) : IndexNotation.ColorIndexList 𝓒"}
{"name":"IndexNotation.ColorIndexList.ext","declaration":"theorem IndexNotation.ColorIndexList.ext {𝓒 : TensorColor} [IndexNotation 𝓒.Color] {l : IndexNotation.ColorIndexList 𝓒} {l' : IndexNotation.ColorIndexList 𝓒} (h : l.val = l'.val) : l = l'"}
{"name":"IndexNotation.ColorIndexList.countId_le_two","declaration":"theorem IndexNotation.ColorIndexList.countId_le_two {𝓒 : TensorColor} [IndexNotation 𝓒.Color] [DecidableEq 𝓒.Color] (l : IndexNotation.ColorIndexList 𝓒) (I : IndexNotation.Index 𝓒.Color) : IndexNotation.IndexList.countId l.toIndexList I ≤ 2"}
{"name":"IndexNotation.ColorIndexList.instCoeColorIndexListIndexListColor","declaration":"instance IndexNotation.ColorIndexList.instCoeColorIndexListIndexListColor {𝓒 : TensorColor} [IndexNotation 𝓒.Color] : Coe (IndexNotation.ColorIndexList 𝓒) (IndexNotation.IndexList 𝓒.Color)"}
{"name":"IndexNotation.ColorIndexList.empty","declaration":"/-- The `ColorIndexList` whose underlying list of indices is empty. -/\ndef IndexNotation.ColorIndexList.empty {𝓒 : TensorColor} [IndexNotation 𝓒.Color] : IndexNotation.ColorIndexList 𝓒"}
{"name":"IndexNotation.ColorIndexList","declaration":"/-- A list of indices with the additional constraint that if a index has a dual,\nthat dual is unique, and the dual of an index has dual color to that index.\n\nThis is the permissible type of indices which can be used for a tensor. For example,\nthe index list `['ᵘ¹', 'ᵤ₁']` can be extended to a `ColorIndexList` but the index list\n`['ᵘ¹', 'ᵤ₁', 'ᵤ₁']` cannot. -/\nstructure IndexNotation.ColorIndexList (𝓒 : TensorColor) [IndexNotation 𝓒.Color] : Type"}
{"name":"IndexNotation.ColorIndexList.colorMap'","declaration":"/-- The colorMap of a `ColorIndexList` as a `𝓒.ColorMap`.\nThis is to be compared with `colorMap` which is a map `Fin l.length → 𝓒.Color`. -/\ndef IndexNotation.ColorIndexList.colorMap' {𝓒 : TensorColor} [IndexNotation 𝓒.Color] (l : IndexNotation.ColorIndexList 𝓒) : TensorColor.ColorMap 𝓒 (Fin (IndexNotation.IndexList.length l.toIndexList))"}
{"name":"IndexNotation.ColorIndexList.dual_color","declaration":"/-- The condition that for an index with a dual, that dual has dual color to the index. -/\ndef IndexNotation.ColorIndexList.dual_color {𝓒 : TensorColor} [IndexNotation 𝓒.Color] (self : IndexNotation.ColorIndexList 𝓒) : IndexNotation.IndexList.ColorCond self.toIndexList"}
{"name":"IndexNotation.ColorIndexList.ext'","declaration":"theorem IndexNotation.ColorIndexList.ext' {𝓒 : TensorColor} [IndexNotation 𝓒.Color] {l : IndexNotation.ColorIndexList 𝓒} {l' : IndexNotation.ColorIndexList 𝓒} (h : l.toIndexList = l'.toIndexList) : l = l'"}
{"name":"IndexNotation.ColorIndexList.unique_duals","declaration":"/-- The condition that for index with a dual, that dual is the unique other index with\nan identical `id`. -/\ndef IndexNotation.ColorIndexList.unique_duals {𝓒 : TensorColor} [IndexNotation 𝓒.Color] (self : IndexNotation.ColorIndexList 𝓒) : IndexNotation.IndexList.OnlyUniqueDuals self.toIndexList"}
