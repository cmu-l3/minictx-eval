{"name":"SMRHN.accSU3_invariant","declaration":"theorem SMRHN.accSU3_invariant {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : SMνACCs.accSU3 ((SMRHN.repCharges f) S) = SMνACCs.accSU3 S"}
{"name":"SMRHN.PermGroup","declaration":"/-- The group of `Sₙ` permutations for each species. -/\ndef SMRHN.PermGroup (n : ℕ) : Type"}
{"name":"SMRHN.repCharges_toSpecies","declaration":"theorem SMRHN.repCharges_toSpecies {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) (j : Fin 6) : (SMνCharges.toSpecies j) ((SMRHN.repCharges f) S) = (SMνCharges.toSpecies j) S ∘ ⇑(f⁻¹ j)"}
{"name":"SMRHN.accSU2_invariant","declaration":"theorem SMRHN.accSU2_invariant {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : SMνACCs.accSU2 ((SMRHN.repCharges f) S) = SMνACCs.accSU2 S"}
{"name":"SMRHN.accGrav_invariant","declaration":"theorem SMRHN.accGrav_invariant {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : SMνACCs.accGrav ((SMRHN.repCharges f) S) = SMνACCs.accGrav S"}
{"name":"SMRHN.instGroupPermGroup","declaration":"instance SMRHN.instGroupPermGroup {n : ℕ} : Group (SMRHN.PermGroup n)"}
{"name":"SMRHN.chargeMap","declaration":"/-- The image of an element of `permGroup n` under the representation on charges. -/\ndef SMRHN.chargeMap {n : ℕ} (f : SMRHN.PermGroup n) : ACCSystemCharges.Charges (SMνCharges n) →ₗ[ℚ] ACCSystemCharges.Charges (SMνCharges n)"}
{"name":"SMRHN.toSpecies_sum_invariant","declaration":"theorem SMRHN.toSpecies_sum_invariant {n : ℕ} (m : ℕ) (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) (j : Fin 6) : (Finset.sum Finset.univ fun i => ((fun a => a ^ m) ∘ (SMνCharges.toSpecies j) ((SMRHN.repCharges f) S)) i) =\n  Finset.sum Finset.univ fun i => ((fun a => a ^ m) ∘ (SMνCharges.toSpecies j) S) i"}
{"name":"SMRHN.chargeMap_apply","declaration":"theorem SMRHN.chargeMap_apply {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : (SMRHN.chargeMap f) S = SMνCharges.toSpeciesEquiv.symm fun i => (SMνCharges.toSpecies i) S ∘ ⇑(f i)"}
{"name":"SMRHN.repCharges","declaration":"/-- The representation of `(permGroup n)` acting on the vector space of charges. -/\ndef SMRHN.repCharges {n : ℕ} : Representation ℚ (SMRHN.PermGroup n) (ACCSystemCharges.Charges (SMνCharges n))"}
{"name":"SMRHN.accQuad_invariant","declaration":"theorem SMRHN.accQuad_invariant {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : SMνACCs.accQuad ((SMRHN.repCharges f) S) = SMνACCs.accQuad S"}
{"name":"SMRHN.accCube_invariant","declaration":"theorem SMRHN.accCube_invariant {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : SMνACCs.accCube ((SMRHN.repCharges f) S) = SMνACCs.accCube S"}
{"name":"SMRHN.accYY_invariant","declaration":"theorem SMRHN.accYY_invariant {n : ℕ} (f : SMRHN.PermGroup n) (S : ACCSystemCharges.Charges (SMνCharges n)) : SMνACCs.accYY ((SMRHN.repCharges f) S) = SMνACCs.accYY S"}
