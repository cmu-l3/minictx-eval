{"name":"IndexNotation.IndexList.Subperm.contr_refl","declaration":"theorem IndexNotation.IndexList.Subperm.contr_refl {X : Type} [DecidableEq X] {l : IndexNotation.IndexList X} : IndexNotation.IndexList.Subperm (IndexNotation.IndexList.contrIndexList l) (IndexNotation.IndexList.contrIndexList l)"}
{"name":"IndexNotation.IndexList.Subperm.symm","declaration":"theorem IndexNotation.IndexList.Subperm.symm {X : Type} [DecidableEq X] {l : IndexNotation.IndexList X} {l2 : IndexNotation.IndexList X} (h : IndexNotation.IndexList.Subperm l l2) (hl : IndexNotation.IndexList.length l = IndexNotation.IndexList.length l2) : IndexNotation.IndexList.Subperm l2 l"}
{"name":"IndexNotation.IndexList.Subperm","declaration":"/-- An IndexList `l` is a subpermutation of `l2` if there are no duals in `l`, and\nevery element of `l` has a unique dual in `l2`. -/\ndef IndexNotation.IndexList.Subperm {X : Type} (l : IndexNotation.IndexList X) (l2 : IndexNotation.IndexList X) : Prop"}
{"name":"IndexNotation.IndexList.Subperm.trans","declaration":"theorem IndexNotation.IndexList.Subperm.trans {X : Type} [DecidableEq X] {l : IndexNotation.IndexList X} {l2 : IndexNotation.IndexList X} {l3 : IndexNotation.IndexList X} (h1 : IndexNotation.IndexList.Subperm l l2) (h2 : IndexNotation.IndexList.Subperm l2 l3) : IndexNotation.IndexList.Subperm l l3"}
{"name":"IndexNotation.IndexList.Subperm.fst_eq_contrIndexList","declaration":"theorem IndexNotation.IndexList.Subperm.fst_eq_contrIndexList {X : Type} [DecidableEq X] {l : IndexNotation.IndexList X} {l2 : IndexNotation.IndexList X} (h : IndexNotation.IndexList.Subperm l l2) : IndexNotation.IndexList.contrIndexList l = l"}
{"name":"IndexNotation.IndexList.Subperm.iff_countId_fin","declaration":"theorem IndexNotation.IndexList.Subperm.iff_countId_fin {X : Type} [DecidableEq X] {l : IndexNotation.IndexList X} {l2 : IndexNotation.IndexList X} : IndexNotation.IndexList.Subperm l l2 ↔\n  ∀ (i : Fin (List.length l.val)),\n    IndexNotation.IndexList.countId l (List.get l.val i) = 1 ∧ IndexNotation.IndexList.countId l2 (List.get l.val i) = 1"}
{"name":"IndexNotation.IndexList.Subperm.iff_countId","declaration":"theorem IndexNotation.IndexList.Subperm.iff_countId {X : Type} [DecidableEq X] {l : IndexNotation.IndexList X} {l2 : IndexNotation.IndexList X} : IndexNotation.IndexList.Subperm l l2 ↔\n  ∀ (I : IndexNotation.Index X),\n    IndexNotation.IndexList.countId l I ≤ 1 ∧\n      (IndexNotation.IndexList.countId l I = 1 → IndexNotation.IndexList.countId l2 I = 1)"}
