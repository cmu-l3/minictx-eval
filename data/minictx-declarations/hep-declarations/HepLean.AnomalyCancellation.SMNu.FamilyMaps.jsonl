{"name":"SMRHN.sum_familyUniversal_one","declaration":"theorem SMRHN.sum_familyUniversal_one {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) (j : Fin 6) : (Finset.sum Finset.univ fun i => (SMνCharges.toSpecies j) ((SMRHN.familyUniversal n) S) i) =\n  ↑n * (SMνCharges.toSpecies j) S { val := 0, isLt := ⋯ }"}
{"name":"SMRHN.toSpecies_familyUniversal","declaration":"theorem SMRHN.toSpecies_familyUniversal {n : ℕ} (j : Fin 6) (S : ACCSystemCharges.Charges (SMνCharges 1)) (i : Fin n) : (SMνCharges.toSpecies j) ((SMRHN.familyUniversal n) S) i = (SMνCharges.toSpecies j) S { val := 0, isLt := ⋯ }"}
{"name":"SMRHN.sum_familyUniversal_three","declaration":"theorem SMRHN.sum_familyUniversal_three {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) (T : ACCSystemCharges.Charges (SMνCharges n)) (L : ACCSystemCharges.Charges (SMνCharges n)) (j : Fin 6) : (Finset.sum Finset.univ fun i =>\n    (SMνCharges.toSpecies j) ((SMRHN.familyUniversal n) S) i * (SMνCharges.toSpecies j) T i *\n      (SMνCharges.toSpecies j) L i) =\n  (SMνCharges.toSpecies j) S { val := 0, isLt := ⋯ } *\n    Finset.sum Finset.univ fun i => (SMνCharges.toSpecies j) T i * (SMνCharges.toSpecies j) L i"}
{"name":"SMRHN.speciesEmbed","declaration":"/-- For species, the embedding of the `m`-family charges onto the `n`-family charges, with all\nother charges zero. -/\ndef SMRHN.speciesEmbed (m : ℕ) (n : ℕ) : ACCSystemCharges.Charges (SMνSpecies m) →ₗ[ℚ] ACCSystemCharges.Charges (SMνSpecies n)"}
{"name":"SMRHN.familyUniversal_quadBiLin","declaration":"theorem SMRHN.familyUniversal_quadBiLin {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) (T : ACCSystemCharges.Charges (SMνCharges n)) : (SMνACCs.quadBiLin ((SMRHN.familyUniversal n) S)) T =\n  ((((S 0 * Finset.sum Finset.univ fun i => SMνCharges.Q T i) -\n          2 * S 1 * Finset.sum Finset.univ fun i => SMνCharges.U T i) +\n        S 2 * Finset.sum Finset.univ fun i => SMνCharges.D T i) -\n      S 3 * Finset.sum Finset.univ fun i => SMνCharges.L T i) +\n    S 4 * Finset.sum Finset.univ fun i => SMνCharges.E T i"}
{"name":"SMRHN.familyUniversal_accSU2","declaration":"theorem SMRHN.familyUniversal_accSU2 {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) : SMνACCs.accSU2 ((SMRHN.familyUniversal n) S) = ↑n * SMνACCs.accSU2 S"}
{"name":"SMRHN.familyProjection","declaration":"/-- The projection of the `m`-family charges onto the first `n`-family charges. -/\ndef SMRHN.familyProjection {m : ℕ} {n : ℕ} (h : n ≤ m) : ACCSystemCharges.Charges (SMνCharges m) →ₗ[ℚ] ACCSystemCharges.Charges (SMνCharges n)"}
{"name":"SMRHN.familyEmbedding","declaration":"/-- The embedding of the `m`-family charges onto the `n`-family charges, with all\nother charges zero. -/\ndef SMRHN.familyEmbedding (m : ℕ) (n : ℕ) : ACCSystemCharges.Charges (SMνCharges m) →ₗ[ℚ] ACCSystemCharges.Charges (SMνCharges n)"}
{"name":"SMRHN.speciesFamilyProj_apply","declaration":"theorem SMRHN.speciesFamilyProj_apply {m : ℕ} {n : ℕ} (h : n ≤ m) (S : ACCSystemCharges.Charges (SMνSpecies m)) : ∀ (a : Fin (SMνSpecies n).numberCharges), (SMRHN.speciesFamilyProj h) S a = S (Fin.castLE h a)"}
{"name":"SMRHN.chargesMapOfSpeciesMap_toSpecies","declaration":"theorem SMRHN.chargesMapOfSpeciesMap_toSpecies {n : ℕ} {m : ℕ} (f : ACCSystemCharges.Charges (SMνSpecies n) →ₗ[ℚ] ACCSystemCharges.Charges (SMνSpecies m)) (S : ACCSystemCharges.Charges (SMνCharges n)) (j : Fin 6) : (SMνCharges.toSpecies j) ((SMRHN.chargesMapOfSpeciesMap f) S) = (f ∘ₗ SMνCharges.toSpecies j) S"}
{"name":"SMRHN.speciesFamilyProj","declaration":"/-- The projection of the `m`-family charges onto the first `n`-family charges for species. -/\ndef SMRHN.speciesFamilyProj {m : ℕ} {n : ℕ} (h : n ≤ m) : ACCSystemCharges.Charges (SMνSpecies m) →ₗ[ℚ] ACCSystemCharges.Charges (SMνSpecies n)"}
{"name":"SMRHN.familyUniversal","declaration":"/-- The embedding of the `1`-family charges into the `n`-family charges in\na universal manor. -/\ndef SMRHN.familyUniversal (n : ℕ) : ACCSystemCharges.Charges (SMνCharges 1) →ₗ[ℚ] ACCSystemCharges.Charges (SMνCharges n)"}
{"name":"SMRHN.chargesMapOfSpeciesMap","declaration":"/-- Given a map of for a generic species, the corresponding map for charges. -/\ndef SMRHN.chargesMapOfSpeciesMap {n : ℕ} {m : ℕ} (f : ACCSystemCharges.Charges (SMνSpecies n) →ₗ[ℚ] ACCSystemCharges.Charges (SMνSpecies m)) : ACCSystemCharges.Charges (SMνCharges n) →ₗ[ℚ] ACCSystemCharges.Charges (SMνCharges m)"}
{"name":"SMRHN.speciesEmbed_apply","declaration":"theorem SMRHN.speciesEmbed_apply (m : ℕ) (n : ℕ) (S : ACCSystemCharges.Charges (SMνSpecies m)) (i : Fin (SMνSpecies n).numberCharges) : (SMRHN.speciesEmbed m n) S i = if hi : ↑i < m then S { val := ↑i, isLt := hi } else 0"}
{"name":"SMRHN.familyUniversal_accCube","declaration":"theorem SMRHN.familyUniversal_accCube {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) : SMνACCs.accCube ((SMRHN.familyUniversal n) S) = ↑n * SMνACCs.accCube S"}
{"name":"SMRHN.familyUniversal_accGrav","declaration":"theorem SMRHN.familyUniversal_accGrav {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) : SMνACCs.accGrav ((SMRHN.familyUniversal n) S) = ↑n * SMνACCs.accGrav S"}
{"name":"SMRHN.chargesMapOfSpeciesMap_apply","declaration":"theorem SMRHN.chargesMapOfSpeciesMap_apply {n : ℕ} {m : ℕ} (f : ACCSystemCharges.Charges (SMνSpecies n) →ₗ[ℚ] ACCSystemCharges.Charges (SMνSpecies m)) (S : ACCSystemCharges.Charges (SMνCharges n)) : (SMRHN.chargesMapOfSpeciesMap f) S = SMνCharges.toSpeciesEquiv.symm fun i => f ((SMνCharges.toSpecies i) S)"}
{"name":"SMRHN.speciesFamilyUniversial","declaration":"/-- For species, the embedding of the `1`-family charges into the `n`-family charges in\na universal manor. -/\ndef SMRHN.speciesFamilyUniversial (n : ℕ) : ACCSystemCharges.Charges (SMνSpecies 1) →ₗ[ℚ] ACCSystemCharges.Charges (SMνSpecies n)"}
{"name":"SMRHN.speciesFamilyUniversial_apply","declaration":"theorem SMRHN.speciesFamilyUniversial_apply (n : ℕ) (S : ACCSystemCharges.Charges (SMνSpecies 1)) : ∀ (x : Fin (SMνSpecies n).numberCharges), (SMRHN.speciesFamilyUniversial n) S x = S 0"}
{"name":"SMRHN.sum_familyUniversal","declaration":"theorem SMRHN.sum_familyUniversal {n : ℕ} (m : ℕ) (S : ACCSystemCharges.Charges (SMνCharges 1)) (j : Fin 6) : (Finset.sum Finset.univ fun i => ((fun a => a ^ m) ∘ (SMνCharges.toSpecies j) ((SMRHN.familyUniversal n) S)) i) =\n  ↑n * (SMνCharges.toSpecies j) S { val := 0, isLt := ⋯ } ^ m"}
{"name":"SMRHN.sum_familyUniversal_two","declaration":"theorem SMRHN.sum_familyUniversal_two {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) (T : ACCSystemCharges.Charges (SMνCharges n)) (j : Fin 6) : (Finset.sum Finset.univ fun i =>\n    (SMνCharges.toSpecies j) ((SMRHN.familyUniversal n) S) i * (SMνCharges.toSpecies j) T i) =\n  (SMνCharges.toSpecies j) S { val := 0, isLt := ⋯ } * Finset.sum Finset.univ fun i => (SMνCharges.toSpecies j) T i"}
{"name":"SMRHN.familyUniversal_accQuad","declaration":"theorem SMRHN.familyUniversal_accQuad {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) : SMνACCs.accQuad ((SMRHN.familyUniversal n) S) = ↑n * SMνACCs.accQuad S"}
{"name":"SMRHN.familyUniversal_accSU3","declaration":"theorem SMRHN.familyUniversal_accSU3 {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) : SMνACCs.accSU3 ((SMRHN.familyUniversal n) S) = ↑n * SMνACCs.accSU3 S"}
{"name":"SMRHN.familyUniversal_cubeTriLin'","declaration":"theorem SMRHN.familyUniversal_cubeTriLin' {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) (T : ACCSystemCharges.Charges (SMνCharges 1)) (R : ACCSystemCharges.Charges (SMνCharges n)) : ((SMνACCs.cubeTriLin ((SMRHN.familyUniversal n) S)) ((SMRHN.familyUniversal n) T)) R =\n  (((((6 * S 0 * T 0 * Finset.sum Finset.univ fun i => SMνCharges.Q R i) +\n            3 * S 1 * T 1 * Finset.sum Finset.univ fun i => SMνCharges.U R i) +\n          3 * S 2 * T 2 * Finset.sum Finset.univ fun i => SMνCharges.D R i) +\n        2 * S 3 * T 3 * Finset.sum Finset.univ fun i => SMνCharges.L R i) +\n      S 4 * T 4 * Finset.sum Finset.univ fun i => SMνCharges.E R i) +\n    S 5 * T 5 * Finset.sum Finset.univ fun i => SMνCharges.N R i"}
{"name":"SMRHN.familyUniversal_accYY","declaration":"theorem SMRHN.familyUniversal_accYY {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) : SMνACCs.accYY ((SMRHN.familyUniversal n) S) = ↑n * SMνACCs.accYY S"}
{"name":"SMRHN.familyUniversal_cubeTriLin","declaration":"theorem SMRHN.familyUniversal_cubeTriLin {n : ℕ} (S : ACCSystemCharges.Charges (SMνCharges 1)) (T : ACCSystemCharges.Charges (SMνCharges n)) (R : ACCSystemCharges.Charges (SMνCharges n)) : ((SMνACCs.cubeTriLin ((SMRHN.familyUniversal n) S)) T) R =\n  (((((6 * S 0 * Finset.sum Finset.univ fun i => SMνCharges.Q T i * SMνCharges.Q R i) +\n            3 * S 1 * Finset.sum Finset.univ fun i => SMνCharges.U T i * SMνCharges.U R i) +\n          3 * S 2 * Finset.sum Finset.univ fun i => SMνCharges.D T i * SMνCharges.D R i) +\n        2 * S 3 * Finset.sum Finset.univ fun i => SMνCharges.L T i * SMνCharges.L R i) +\n      S 4 * Finset.sum Finset.univ fun i => SMνCharges.E T i * SMνCharges.E R i) +\n    S 5 * Finset.sum Finset.univ fun i => SMνCharges.N T i * SMνCharges.N R i"}
