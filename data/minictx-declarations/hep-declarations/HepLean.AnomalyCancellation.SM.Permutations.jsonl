{"name":"SM.toSpecies_sum_invariant","declaration":"theorem SM.toSpecies_sum_invariant {n : ℕ} (m : ℕ) (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) (j : Fin 5) : (Finset.sum Finset.univ fun i => ((fun a => a ^ m) ∘ (SMCharges.toSpecies j) ((SM.repCharges f) S)) i) =\n  Finset.sum Finset.univ fun i => ((fun a => a ^ m) ∘ (SMCharges.toSpecies j) S) i"}
{"name":"SM.accSU2_invariant","declaration":"theorem SM.accSU2_invariant {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : SMACCs.accSU2 ((SM.repCharges f) S) = SMACCs.accSU2 S"}
{"name":"SM.accQuad_invariant","declaration":"theorem SM.accQuad_invariant {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : SMACCs.accQuad ((SM.repCharges f) S) = SMACCs.accQuad S"}
{"name":"SM.accCube_invariant","declaration":"theorem SM.accCube_invariant {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : SMACCs.accCube ((SM.repCharges f) S) = SMACCs.accCube S"}
{"name":"SM.chargeMap_apply","declaration":"theorem SM.chargeMap_apply {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : (SM.chargeMap f) S = SMCharges.toSpeciesEquiv.symm fun i => (SMCharges.toSpecies i) S ∘ ⇑(f i)"}
{"name":"SM.PermGroup","declaration":"/-- The group of `Sₙ` permutations for each species. -/\ndef SM.PermGroup (n : ℕ) : Type"}
{"name":"SM.accGrav_invariant","declaration":"theorem SM.accGrav_invariant {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : SMACCs.accGrav ((SM.repCharges f) S) = SMACCs.accGrav S"}
{"name":"SM.chargeMap","declaration":"/-- The image of an element of `permGroup n` under the representation on charges. -/\ndef SM.chargeMap {n : ℕ} (f : SM.PermGroup n) : ACCSystemCharges.Charges (SMCharges n) →ₗ[ℚ] ACCSystemCharges.Charges (SMCharges n)"}
{"name":"SM.repCharges_toSpecies","declaration":"theorem SM.repCharges_toSpecies {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) (j : Fin 5) : (SMCharges.toSpecies j) ((SM.repCharges f) S) = (SMCharges.toSpecies j) S ∘ ⇑(f⁻¹ j)"}
{"name":"SM.accYY_invariant","declaration":"theorem SM.accYY_invariant {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : SMACCs.accYY ((SM.repCharges f) S) = SMACCs.accYY S"}
{"name":"SM.instGroupPermGroup","declaration":"instance SM.instGroupPermGroup {n : ℕ} : Group (SM.PermGroup n)"}
{"name":"SM.accSU3_invariant","declaration":"theorem SM.accSU3_invariant {n : ℕ} (f : SM.PermGroup n) (S : ACCSystemCharges.Charges (SMCharges n)) : SMACCs.accSU3 ((SM.repCharges f) S) = SMACCs.accSU3 S"}
{"name":"SM.repCharges","declaration":"/-- The representation of `(permGroup n)` acting on the vector space of charges. -/\ndef SM.repCharges {n : ℕ} : Representation ℚ (SM.PermGroup n) (ACCSystemCharges.Charges (SMCharges n))"}
