{"name":"IndexNotation.IndexString.toIndexList","declaration":"/-- The indices associated to an index string. -/\ndef IndexNotation.IndexString.toIndexList {X : Type} [IndexNotation X] (s : IndexNotation.IndexString X) : IndexNotation.IndexList X"}
{"name":"IndexNotation.IndexString","declaration":"/-- A string of indices to be associated with a tensor. For example, `·µò‚Å∞·µ§‚ÇÇ‚ÇÜ‚ÇÄ·µò¬≥`. -/\ndef IndexNotation.IndexString (X : Type) [IndexNotation X] : Type"}
{"name":"IndexNotation.listCharIsIndexString","declaration":"/-- A bool which is true given a list of characters if and only if everl element\nof the corresponding `stringToPreIndexList` correspondings to an index. -/\ndef IndexNotation.listCharIsIndexString (X : Type) [IndexNotation X] (l : List Char) : Bool"}
{"name":"IndexNotation.stringToPreIndexList","declaration":"/-- Takes in a list of characters and splits it into a list of characters at those characters\nwhich are notation characters e.g. `'·µò'`. -/\ndef IndexNotation.stringToPreIndexList (X : Type) [IndexNotation X] (l : List Char) : List (List Char)"}
{"name":"IndexNotation.IndexString.toCharList","declaration":"/-- The character list associated with a index string. -/\ndef IndexNotation.IndexString.toCharList {X : Type} [IndexNotation X] (s : IndexNotation.IndexString X) : List Char"}
{"name":"TensorStructure.TensorIndex.fromIndexString","declaration":"/-- The construction of a tensor index from a tensor and a string satisfing conditions which are\neasy to check automatically. -/\ndef TensorStructure.TensorIndex.fromIndexString {R : Type} [CommSemiring R] {ùì£ : TensorStructure R} [IndexNotation ùì£.Color] [DecidableEq ùì£.Color] {n : ‚Ñï} {cn : Fin n ‚Üí ùì£.Color} (T : TensorStructure.Tensor ùì£ cn) (s : String) (hs : IndexNotation.listCharIsIndexString ùì£.Color (String.toList s) = true) (hn : n = IndexNotation.IndexList.length (IndexNotation.IndexString.toIndexList' s hs)) (hD : IndexNotation.IndexList.OnlyUniqueDuals (IndexNotation.IndexString.toIndexList' s hs)) (hC : IndexNotation.IndexList.ColorCond (IndexNotation.IndexString.toIndexList' s hs)) (hd : TensorColor.ColorMap.DualMap (IndexNotation.IndexList.colorMap (IndexNotation.IndexString.toIndexList' s hs))\n  (cn ‚àò Fin.cast ‚ãØ)) : TensorStructure.TensorIndex ùì£"}
{"name":"IndexNotation.IndexString.toIndexList'","declaration":"/-- The formation of an index list from a string `s` statisfying `listCharIndexStringBool`. -/\ndef IndexNotation.IndexString.toIndexList' {X : Type} [IndexNotation X] (s : String) (hs : IndexNotation.listCharIsIndexString X (String.toList s) = true) : IndexNotation.IndexList X"}
{"name":"IndexNotation.IndexString.charListToOptionIndex","declaration":"/-- Takes a list of characters to the correpsonding index if it exists else to `none`. -/\ndef IndexNotation.IndexString.charListToOptionIndex {X : Type} [IndexNotation X] (l : List Char) : Option (IndexNotation.Index X)"}
