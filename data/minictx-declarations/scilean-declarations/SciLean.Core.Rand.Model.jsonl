{"name":"SciLean.Rand.modelBind","declaration":"/-- Special form of bind for `Rand` for which it is easy to compute conditional probabilities and\nprobability densities. Most likely you want to use this bind when defining probabilistic model. -/\ndef SciLean.Rand.modelBind {X : Type} {Y : Type} (x : SciLean.Rand X) (f : X → SciLean.Rand Y) : SciLean.Rand (X × Y)"}
{"name":"SciLean.«termLet_~____»","declaration":"def SciLean.«termLet_~____»  : Lean.ParserDescr"}
{"name":"SciLean.modelBind_condition","declaration":"theorem SciLean.modelBind_condition {X : Type} {Y : Type} (r : SciLean.Rand X) (f : X → SciLean.Rand Y) (x' : X) : SciLean.Rand.conditionFst\n    (let x ~ r\n    f x)\n    x' =\n  f x'"}
{"name":"SciLean.modelBind_pdf","declaration":"theorem SciLean.modelBind_pdf {R : Type u_1} [SciLean.RealScalar R] {X : Type} {Y : Type} [MeasureTheory.MeasureSpace X] [MeasureTheory.MeasureSpace Y] (r : SciLean.Rand X) (f : X → SciLean.Rand Y) : SciLean.Rand.pdf R\n    (let x ~ r\n    f x)\n    MeasureTheory.volume =\n  fun xy => SciLean.Rand.pdf R r MeasureTheory.volume xy.1 * SciLean.Rand.pdf R (f xy.1) MeasureTheory.volume xy.2"}
{"name":"SciLean.modelBind_pdf_prod","declaration":"theorem SciLean.modelBind_pdf_prod {R : Type u_1} [SciLean.RealScalar R] {X : Type} {Y : Type} [MeasurableSpace X] [MeasurableSpace Y] (r : SciLean.Rand X) (f : X → SciLean.Rand Y) (μ : MeasureTheory.Measure X) (ν : MeasureTheory.Measure Y) : SciLean.Rand.pdf R\n    (let x ~ r\n    f x)\n    (MeasureTheory.Measure.prod μ ν) =\n  fun xy => SciLean.Rand.pdf R r μ xy.1 * SciLean.Rand.pdf R (f xy.1) ν xy.2"}
{"name":"SciLean.unexpandRandBind","declaration":"def SciLean.unexpandRandBind  : Lean.PrettyPrinter.Unexpander"}
