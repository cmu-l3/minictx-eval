{"name":"SciLean.gaussian.arg_μx.CDifferentiableAt_rule","declaration":"theorem SciLean.gaussian.arg_μx.CDifferentiableAt_rule {R : Type u_1} [SciLean.RealScalar R] {W : Type u_2} [SciLean.Vec R W] {U : Type u_3} [SciLean.SemiHilbert R U] (w : W) (μ : W → U) (σ : R) (x : W → U) (hμ : SciLean.CDifferentiableAt R μ w) (hx : SciLean.CDifferentiableAt R x w) : SciLean.CDifferentiableAt R (fun w => SciLean.gaussian (μ w) σ (x w)) w"}
{"name":"SciLean.gaussian","declaration":"def SciLean.gaussian {R : Type u_1} [SciLean.RealScalar R] {U : Type u_2} [SciLean.SemiHilbert R U] (μ : U) (σ : R) (x : U) : R"}
{"name":"SciLean.gaussian.arg_μx.CDifferentiable_rule","declaration":"theorem SciLean.gaussian.arg_μx.CDifferentiable_rule {R : Type u_1} [SciLean.RealScalar R] {W : Type u_2} [SciLean.Vec R W] {U : Type u_3} [SciLean.SemiHilbert R U] (μ : W → U) (σ : R) (x : W → U) (hμ : SciLean.CDifferentiable R μ) (hx : SciLean.CDifferentiable R x) : SciLean.CDifferentiable R fun w => SciLean.gaussian (μ w) σ (x w)"}
{"name":"SciLean.gaussian.arg_μx.cderiv_rule","declaration":"theorem SciLean.gaussian.arg_μx.cderiv_rule {R : Type u_1} [SciLean.RealScalar R] {W : Type u_2} [SciLean.Vec R W] {U : Type u_3} [SciLean.SemiHilbert R U] (μ : W → U) (σ : R) (x : W → U) (hμ : SciLean.CDifferentiable R μ) (hx : SciLean.CDifferentiable R x) : (SciLean.fwdDeriv R fun w => SciLean.gaussian (μ w) σ (x w)) = fun w dw =>\n  let μdμ := SciLean.fwdDeriv R μ w dw;\n  let xdx := SciLean.fwdDeriv R x w dw;\n  let xdx' := σ⁻¹ • (xdx - μdμ);\n  let g := SciLean.gaussian μdμ.1 σ xdx.1;\n  (g, -⟪xdx'.1, xdx'.2⟫_R * g)"}
{"name":"SciLean.gaussian.arg_μσx.CDifferentiableAt_rule","declaration":"theorem SciLean.gaussian.arg_μσx.CDifferentiableAt_rule {R : Type u_1} [SciLean.RealScalar R] {W : Type u_2} [SciLean.Vec R W] {U : Type u_3} [SciLean.SemiHilbert R U] (w : W) (μ : W → U) (σ : W → R) (x : W → U) (hμ : SciLean.CDifferentiableAt R μ w) (hσ : SciLean.CDifferentiableAt R σ w) (hx : SciLean.CDifferentiableAt R x w) (hσ' : σ w ≠ 0) : SciLean.CDifferentiableAt R (fun w => SciLean.gaussian (μ w) (σ w) (x w)) w"}
{"name":"SciLean.log_gaussian","declaration":"theorem SciLean.log_gaussian {R : Type u_1} [SciLean.RealScalar R] {U : Type u_2} [SciLean.SemiHilbert R U] (μ : U) (σ : R) (x : U) : SciLean.Scalar.log (SciLean.gaussian μ σ x) =\n  let x' := σ⁻¹ • (x - μ);\n  -‖x'‖₂² / 2 - SciLean.Scalar.log σ - SciLean.Scalar.log (SciLean.Scalar.sqrt (2 * SciLean.RealScalar.pi))"}
{"name":"SciLean.gaussian.arg_μσx.CDifferentiable_rule","declaration":"theorem SciLean.gaussian.arg_μσx.CDifferentiable_rule {R : Type u_1} [SciLean.RealScalar R] {W : Type u_2} [SciLean.Vec R W] (μ : W → R) (σ : W → R) (x : W → R) (hμ : SciLean.CDifferentiable R μ) (hσ : SciLean.CDifferentiable R σ) (hx : SciLean.CDifferentiable R x) (hσ' : ∀ (w : W), σ w ≠ 0) : SciLean.CDifferentiable R fun w => SciLean.gaussian (μ w) (σ w) (x w)"}
