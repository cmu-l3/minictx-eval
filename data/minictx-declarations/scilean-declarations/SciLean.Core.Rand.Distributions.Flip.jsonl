{"name":"SciLean.Rand.flip","declaration":"def SciLean.Rand.flip {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] (x : R) : SciLean.Rand Bool"}
{"name":"SciLean.Rand.add_as_flip_E","declaration":"theorem SciLean.Rand.add_as_flip_E {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] {X : Type u_1} [AddCommGroup X] [Module R X] [Module ‚Ñù X] {x : X} {y : X} (Œ∏ : R) (h : Œ∏ ‚àà Set.Ioo 0 1) : x + y = (SciLean.Rand.flip Œ∏).ùîº fun b => if b = true then Œ∏‚Åª¬π ‚Ä¢ x else (1 - Œ∏)‚Åª¬π ‚Ä¢ y"}
{"name":"SciLean.Rand.flip.integral","declaration":"theorem SciLean.Rand.flip.integral {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] {X : Type u_1} [AddCommGroup X] [Module R X] [Module ‚Ñù X] (Œ∏ : R) (f : Bool ‚Üí X) : ‚à´' x, f x ‚àÇ(SciLean.Rand.flip Œ∏).‚Ñô = Œ∏ ‚Ä¢ f true + (1 - Œ∏) ‚Ä¢ f false"}
{"name":"SciLean.Rand.instLawfulRandBoolFlipInstMeasurableSpace","declaration":"instance SciLean.Rand.instLawfulRandBoolFlipInstMeasurableSpace {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] (Œ∏ : R) : SciLean.Rand.LawfulRand (SciLean.Rand.flip Œ∏)"}
{"name":"SciLean.Rand.flip.pdf","declaration":"theorem SciLean.Rand.flip.pdf {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] (x : R) : SciLean.Rand.pdf R (SciLean.Rand.flip x) MeasureTheory.Measure.count = fun b =>\n  let x := (x ‚äî 0) ‚äì 1;\n  if b = true then x else 1 - x"}
{"name":"SciLean.Rand.flip.measure","declaration":"theorem SciLean.Rand.flip.measure {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] (Œ∏ : R) : (SciLean.Rand.flip Œ∏).‚Ñô =\n  ENNReal.ofReal (SciLean.Scalar.toReal R Œ∏) ‚Ä¢ MeasureTheory.Measure.dirac true +\n    ENNReal.ofReal (SciLean.Scalar.toReal R (1 - Œ∏)) ‚Ä¢ MeasureTheory.Measure.dirac false"}
{"name":"SciLean.Rand.flip.pdf_wrt_flip","declaration":"theorem SciLean.Rand.flip.pdf_wrt_flip {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] (Œ∏ : R) (Œ∏' : R) : SciLean.Rand.pdf R (SciLean.Rand.flip Œ∏) (SciLean.Rand.flip Œ∏').‚Ñô = fun b =>\n  if b = true then Œ∏ / Œ∏' else (1 - Œ∏) / (1 - Œ∏')"}
{"name":"SciLean.Rand.flip.E","declaration":"theorem SciLean.Rand.flip.E {R : Type} [SciLean.RealScalar R] [MeasureTheory.MeasureSpace R] {X : Type u_1} [AddCommGroup X] [Module R X] [Module ‚Ñù X] (Œ∏ : R) (f : Bool ‚Üí X) : (SciLean.Rand.flip Œ∏).ùîº f = Œ∏ ‚Ä¢ f true + (1 - Œ∏) ‚Ä¢ f false"}
