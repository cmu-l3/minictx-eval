{"name":"SciLean.ArrayType.instVecStructInstStructTypeInstVec","declaration":"instance SciLean.ArrayType.instVecStructInstStructTypeInstVec {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {K : Type u_4} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [SciLean.Vec K Elem] : SciLean.VecStruct K Cont Idx fun x => Elem"}
{"name":"SciLean.ArrayType.instOrthonormalBasisToSemiringToDivisionSemiringToSemifieldToFieldToNormedFieldToDenselyNormedFieldInstBasisToInnerToSemiInnerProductSpaceInstSemiHilbertToSemiHilbertUnitInstIndexTypeUnitInstLawfulIndexTypeUnitInstIndexTypeUnitInstDecidableEqPUnitInstFinVecUnitInstIndexTypeUnitInstLawfulIndexTypeUnitInstIndexTypeUnitInstDecidableEqPUnit","declaration":"instance SciLean.ArrayType.instOrthonormalBasisToSemiringToDivisionSemiringToSemifieldToFieldToNormedFieldToDenselyNormedFieldInstBasisToInnerToSemiInnerProductSpaceInstSemiHilbertToSemiHilbertUnitInstIndexTypeUnitInstLawfulIndexTypeUnitInstIndexTypeUnitInstDecidableEqPUnitInstFinVecUnitInstIndexTypeUnitInstLawfulIndexTypeUnitInstIndexTypeUnitInstDecidableEqPUnit {Cont : Type u_1} {Idx : Type u_2} [SciLean.IndexType Idx] [DecidableEq Idx] {K : Type u_1} [RCLike K] [SciLean.ArrayType Cont Idx K] : SciLean.OrthonormalBasis Idx K Cont"}
{"name":"SciLean.ArrayType.instFinVec","declaration":"instance SciLean.ArrayType.instFinVec {Cont : Type u_1} {Idx : Type u_2} [SciLean.IndexType Idx] [SciLean.LawfulIndexType Idx] [DecidableEq Idx] {K : Type u_1} [RCLike K] [SciLean.ArrayType Cont Idx K] : SciLean.FinVec Idx K Cont"}
{"name":"SciLean.ArrayType.instModuleToSemiringToAddCommMonoidInstAddCommGroup","declaration":"instance SciLean.ArrayType.instModuleToSemiringToAddCommMonoidInstAddCommGroup {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {R : Type u_4} [CommSemiring R] [SciLean.ArrayType Cont Idx Elem] [AddCommGroup Elem] [Module R Elem] : Module R Cont"}
{"name":"SciLean.ArrayType.instSemiInnerProductSpace","declaration":"instance SciLean.ArrayType.instSemiInnerProductSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {K : Type u_1} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [SciLean.SemiInnerProductSpace K Elem] : SciLean.SemiInnerProductSpace K Cont"}
{"name":"SciLean.ArrayType.instSMulStructInstStructTypeInstSMul","declaration":"instance SciLean.ArrayType.instSMulStructInstStructTypeInstSMul {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {K : Type u_4} [SciLean.ArrayType Cont Idx Elem] [SMul K Elem] : SciLean.SMulStruct K Cont Idx fun x => Elem"}
{"name":"SciLean.ArrayType.instBasisDuality","declaration":"instance SciLean.ArrayType.instBasisDuality {Cont : Type u_1} {Idx : Type u_2} {K : Type u_3} [SciLean.ArrayType Cont Idx K] : SciLean.BasisDuality Cont"}
{"name":"SciLean.ArrayType.instAddStructInstStructTypeInstAdd","declaration":"instance SciLean.ArrayType.instAddStructInstStructTypeInstAdd {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] [SciLean.ArrayType Cont Idx Elem] [Add Elem] : SciLean.AddStruct Cont Idx fun x => Elem"}
{"name":"SciLean.ArrayType.instContinuousSMulInstSMulInstTopologicalSpace","declaration":"instance SciLean.ArrayType.instContinuousSMulInstSMulInstTopologicalSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {R : Type u_4} [SciLean.ArrayType Cont Idx Elem] [TopologicalSpace R] [TopologicalSpace Elem] [SMul R Elem] [ContinuousSMul R Elem] : ContinuousSMul R Cont"}
{"name":"SciLean.ArrayType.instAddCommGroup","declaration":"instance SciLean.ArrayType.instAddCommGroup {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] [SciLean.ArrayType Cont Idx Elem] [AddCommGroup Elem] : AddCommGroup Cont"}
{"name":"SciLean.ArrayType.instVec","declaration":"instance SciLean.ArrayType.instVec {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {K : Type u_4} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [SciLean.Vec K Elem] : SciLean.Vec K Cont"}
{"name":"SciLean.ArrayType.instUniformSpace","declaration":"instance SciLean.ArrayType.instUniformSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.ArrayType Cont Idx Elem] [UniformSpace Elem] : UniformSpace Cont"}
{"name":"SciLean.ArrayType.instTopologicalSpace","declaration":"instance SciLean.ArrayType.instTopologicalSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.ArrayType Cont Idx Elem] [TopologicalSpace Elem] : TopologicalSpace Cont"}
{"name":"SciLean.ArrayType.instAddGroup","declaration":"instance SciLean.ArrayType.instAddGroup {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] [SciLean.ArrayType Cont Idx Elem] [AddGroup Elem] : AddGroup Cont"}
{"name":"SciLean.ArrayType.instInner","declaration":"instance SciLean.ArrayType.instInner {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {K : Type u_4} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [Inner K Elem] : Inner K Cont"}
{"name":"SciLean.ArrayType.instSemiHilbert","declaration":"instance SciLean.ArrayType.instSemiHilbert {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] {K : Type u_1} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [SciLean.SemiHilbert K Elem] : SciLean.SemiHilbert K Cont"}
{"name":"SciLean.ArrayType.instSemiInnerProductSpaceStructInstStructTypeInstSemiInnerProductSpace","declaration":"instance SciLean.ArrayType.instSemiInnerProductSpaceStructInstStructTypeInstSemiInnerProductSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] [SciLean.LawfulIndexType Idx] {K : Type u_1} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [SciLean.SemiInnerProductSpace K Elem] : SciLean.SemiInnerProductSpaceStruct K Cont Idx fun x => Elem"}
{"name":"SciLean.ArrayType.instCompleteSpaceInstUniformSpace","declaration":"instance SciLean.ArrayType.instCompleteSpaceInstUniformSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.ArrayType Cont Idx Elem] [UniformSpace Elem] [CompleteSpace Elem] : CompleteSpace Cont"}
{"name":"SciLean.ArrayType.instTestFunctions","declaration":"instance SciLean.ArrayType.instTestFunctions {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} {K : Type u_4} [RCLike K] [SciLean.ArrayType Cont Idx Elem] [SciLean.Vec K Elem] [SciLean.TestFunctions Elem] : SciLean.TestFunctions Cont"}
{"name":"SciLean.ArrayType.instBasis","declaration":"instance SciLean.ArrayType.instBasis {Cont : Type u_1} {Idx : Type u_2} [DecidableEq Idx] {K : Type u_3} [RCLike K] [SciLean.ArrayType Cont Idx K] : SciLean.Basis Idx K Cont"}
{"name":"SciLean.ArrayType.instMeasurableSpace","declaration":"instance SciLean.ArrayType.instMeasurableSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.ArrayType Cont Idx Elem] [MeasurableSpace Elem] : MeasurableSpace Cont"}
{"name":"SciLean.ArrayType.instUniformAddGroupInstUniformSpaceInstAddGroup","declaration":"instance SciLean.ArrayType.instUniformAddGroupInstUniformSpaceInstAddGroup {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.IndexType Idx] [SciLean.ArrayType Cont Idx Elem] [UniformSpace Elem] [AddGroup Elem] [UniformAddGroup Elem] : UniformAddGroup Cont"}
{"name":"SciLean.ArrayType.instDualBasis","declaration":"instance SciLean.ArrayType.instDualBasis {Cont : Type u_1} {Idx : Type u_2} [DecidableEq Idx] {K : Type u_3} [RCLike K] [SciLean.ArrayType Cont Idx K] : SciLean.DualBasis Idx K Cont"}
{"name":"SciLean.ArrayType.instMeasureSpace","declaration":"instance SciLean.ArrayType.instMeasureSpace {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.ArrayType Cont Idx Elem] [MeasureTheory.MeasureSpace Elem] : MeasureTheory.MeasureSpace Cont"}
{"name":"SciLean.ArrayType.instZeroStructInstStructTypeInstZero","declaration":"instance SciLean.ArrayType.instZeroStructInstStructTypeInstZero {Cont : Type u_1} {Elem : outParam (Type u_2)} {Idx : Type u_3} [SciLean.ArrayType Cont Idx Elem] [Zero Elem] : SciLean.ZeroStruct Cont Idx fun x => Elem"}
