{"name":"Set.preimage1_const","declaration":"theorem Set.preimage1_const {α : Type u_1} {β : Sort u_2} {γ : Type u_3} (c : γ) (C : Set γ) : Set.preimage1 (fun x x => c) C = if c ∈ C then Set.univ else ∅"}
{"name":"Set.Prod.mk.arg_fstsnd.preimage_rule_prod","declaration":"theorem Set.Prod.mk.arg_fstsnd.preimage_rule_prod {α : Type u_3} {β : Type u_1} {γ : Type u_2} (f : α → β) (g : α → γ) (B : Set β) (C : Set γ) : (fun x => (f x, g x)) ⁻¹' Set.prod B C = f ⁻¹' B ∩ g ⁻¹' C"}
{"name":"Set.preimage1","declaration":"def Set.preimage1 {α : Type u_1} {β : Sort u_2} {γ : Type u_3} (f : α → β → γ) (C : Set γ) : Set α"}
{"name":"Set.preimage1_id1","declaration":"theorem Set.preimage1_id1 {α : Type u_1} {β : Sort u_2} (A : Set α) : Set.preimage1 (fun a x => a) A = A"}
{"name":"Set.preimage_const'","declaration":"theorem Set.preimage_const' {α : Type u_2} {β : Type u_1} (b : β) (s : Set β) : (fun x => b) ⁻¹' s = if b ∈ s then Set.univ else ∅"}
{"name":"Set.preimage_comp'","declaration":"theorem Set.preimage_comp' {α : Type u_1} {β : Type u_3} {γ : Type u_2} (f : β → γ) (g : α → β) : (Set.preimage fun x => f (g x)) = fun s => g ⁻¹' (f ⁻¹' s)"}
{"name":"Set.Neg.neg.arg_a1.preimage_rule_Ioo","declaration":"theorem Set.Neg.neg.arg_a1.preimage_rule_Ioo {R : Type u_1} [SciLean.RealScalar R] (a : R) (b : R) : (fun x => -x) ⁻¹' Set.Ioo a b = Set.Ioo (-b) (-a)"}
{"name":"Set.HSub.hSub.arg_a1.preimage_rule_Ioo","declaration":"theorem Set.HSub.hSub.arg_a1.preimage_rule_Ioo {R : Type u_1} [SciLean.RealScalar R] (x' : R) (a : R) (b : R) : (fun x => x' - x) ⁻¹' Set.Ioo a b = Set.Ioo (x' - b) (x' - a)"}
{"name":"Set.preimage1_prod'","declaration":"theorem Set.preimage1_prod' {α : Type u_1} {β : Sort u_2} {γ : Type u_3} {δ : Type u_4} (f : α → γ) (g : β → δ) (C : Set γ) (D : Set δ) : Set.preimage1 (fun x y => (g y, f x)) (Set.prod D C) = f ⁻¹' C"}
{"name":"Set.preimage1_prod","declaration":"theorem Set.preimage1_prod {α : Type u_1} {β : Sort u_2} {γ : Type u_3} {δ : Type u_4} (f : α → γ) (g : β → δ) (C : Set γ) (D : Set δ) : Set.preimage1 (fun x y => (f x, g y)) (Set.prod C D) = f ⁻¹' C"}
{"name":"Set.Prod.mk.arg_fst.preimage_rule_prod","declaration":"theorem Set.Prod.mk.arg_fst.preimage_rule_prod {α : Type u_1} {β : Type u_2} {γ : Type u_3} (f : α → β) (c : γ) : (Set.preimage fun x => (f x, c)) = fun s => f ⁻¹' {y | (y, c) ∈ s}"}
{"name":"Set.preimage1_id2","declaration":"theorem Set.preimage1_id2 {α : Type u_1} {β : Type u_2} (B : Set β) : Set.preimage1 (fun x b => b) B = Set.univ"}
{"name":"Set.HAdd.hAdd.arg_a1.preimage_rule_Ioo","declaration":"theorem Set.HAdd.hAdd.arg_a1.preimage_rule_Ioo {R : Type u_1} [SciLean.RealScalar R] (x' : R) (a : R) (b : R) : (fun x => x' + x) ⁻¹' Set.Ioo a b = Set.Ioo (a - x') (b - x')"}
{"name":"Set.HAdd.hAdd.arg_a0.preimage_rule_Ioo","declaration":"theorem Set.HAdd.hAdd.arg_a0.preimage_rule_Ioo {R : Type u_1} [SciLean.RealScalar R] (x' : R) (a : R) (b : R) : (fun x => x + x') ⁻¹' Set.Ioo a b = Set.Ioo (a - x') (b - x')"}
{"name":"Set.HSub.hSub.arg_a0.preimage_rule_Ioo","declaration":"theorem Set.HSub.hSub.arg_a0.preimage_rule_Ioo {R : Type u_1} [SciLean.RealScalar R] (x' : R) (a : R) (b : R) : (fun x => x - x') ⁻¹' Set.Ioo a b = Set.Ioo (a + x') (b + x')"}
{"name":"Set.Prod.mk.arg_snd.preimage_rule_prod","declaration":"theorem Set.Prod.mk.arg_snd.preimage_rule_prod {α : Type u_1} {β : Type u_2} {γ : Type u_3} (b : β) (g : α → γ) : (Set.preimage fun x => (b, g x)) = fun s => g ⁻¹' {z | (b, z) ∈ s}"}
