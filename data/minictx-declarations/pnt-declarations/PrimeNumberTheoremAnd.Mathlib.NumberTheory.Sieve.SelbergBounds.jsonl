{"name":"Sieve.CompletelyMultiplicative.pdiv","declaration":"theorem Sieve.CompletelyMultiplicative.pdiv {f : ArithmeticFunction ℝ} {g : ArithmeticFunction ℝ} (hf : Sieve.CompletelyMultiplicative f) (hg : Sieve.CompletelyMultiplicative g) : Sieve.CompletelyMultiplicative (ArithmeticFunction.pdiv f g)"}
{"name":"Sieve.zeta_lt_self_of_prime","declaration":"theorem Sieve.zeta_lt_self_of_prime (p : ℕ) : Nat.Prime p → ↑ArithmeticFunction.zeta p < ↑p"}
{"name":"Sieve.boundingSum_ge_log","declaration":"theorem Sieve.boundingSum_ge_log (s : SelbergSieve) (hnu : s.nu = ArithmeticFunction.pdiv ↑ArithmeticFunction.zeta ↑ArithmeticFunction.id) (hP : ∀ (p : ℕ), Nat.Prime p → ↑p ≤ s.level → p ∣ s.prodPrimes) : SelbergSieve.selbergBoundingSum s ≥ Real.log s.level / 2"}
{"name":"Sieve.CompletelyMultiplicative","declaration":"def Sieve.CompletelyMultiplicative (f : ArithmeticFunction ℝ) : Prop"}
{"name":"Sieve.CompletelyMultiplicative.apply_pow","declaration":"theorem Sieve.CompletelyMultiplicative.apply_pow (f : ArithmeticFunction ℝ) (hf : Sieve.CompletelyMultiplicative f) (a : ℕ) (n : ℕ) : f (a ^ n) = f a ^ n"}
{"name":"Sieve.Nat.squarefree_dvd_pow","declaration":"theorem Sieve.Nat.squarefree_dvd_pow (a : ℕ) (b : ℕ) (N : ℕ) (ha : Squarefree a) (hab : a ∣ b ^ N) : a ∣ b"}
{"name":"Sieve.CompletelyMultiplicative.isMultiplicative","declaration":"theorem Sieve.CompletelyMultiplicative.isMultiplicative {f : ArithmeticFunction ℝ} (hf : Sieve.CompletelyMultiplicative f) : ArithmeticFunction.IsMultiplicative f"}
{"name":"Sieve.prod_factors_one_div_compMult_ge","declaration":"theorem Sieve.prod_factors_one_div_compMult_ge (M : ℕ) (f : ArithmeticFunction ℝ) (hf : Sieve.CompletelyMultiplicative f) (hf_nonneg : ∀ (n : ℕ), 0 ≤ f n) (d : ℕ) (hd : Squarefree d) (hf_size : ∀ (n : ℕ), Nat.Prime n → n ∣ d → f n < 1) : (f d * Finset.prod d.primeFactors fun p => 1 / (1 - f p)) ≥\n  Finset.prod d.primeFactors fun p => Finset.sum (Finset.Icc 1 M) fun n => f (p ^ n)"}
{"name":"Sieve.sqrt_le_self","declaration":"theorem Sieve.sqrt_le_self (x : ℝ) (hx : 1 ≤ x) : Real.sqrt x ≤ x"}
{"name":"Sieve.selbergBoundingSum_ge_sum_div","declaration":"theorem Sieve.selbergBoundingSum_ge_sum_div (s : SelbergSieve) (hP : ∀ (p : ℕ), Nat.Prime p → ↑p ≤ s.level → p ∣ s.prodPrimes) (hnu : Sieve.CompletelyMultiplicative s.nu) (hnu_nonneg : ∀ (n : ℕ), 0 ≤ s.nu n) (hnu_lt : ∀ (p : ℕ), Nat.Prime p → p ∣ s.prodPrimes → s.nu p < 1) : SelbergSieve.selbergBoundingSum s ≥ Finset.sum (Finset.Icc 1 ⌊Real.sqrt s.level⌋₊) fun m => s.nu m"}
{"name":"Sieve.primorial_squarefree","declaration":"theorem Sieve.primorial_squarefree (n : ℕ) : Squarefree (primorial n)"}
{"name":"Sieve.CompletelyMultiplicative.pmul","declaration":"theorem Sieve.CompletelyMultiplicative.pmul (f : ArithmeticFunction ℝ) (g : ArithmeticFunction ℝ) (hf : Sieve.CompletelyMultiplicative f) (hg : Sieve.CompletelyMultiplicative g) : Sieve.CompletelyMultiplicative (ArithmeticFunction.pmul f g)"}
{"name":"Sieve.prod_primes_dvd_of_dvd","declaration":"theorem Sieve.prod_primes_dvd_of_dvd (P : ℕ) {s : Finset ℕ} (h : ∀ p ∈ s, p ∣ P) (h' : ∀ p ∈ s, Nat.Prime p) : (Finset.prod s fun p => p) ∣ P"}
{"name":"Sieve.prod_factors_sum_pow_compMult","declaration":"theorem Sieve.prod_factors_sum_pow_compMult (M : ℕ) (hM : M ≠ 0) (f : ArithmeticFunction ℝ) (hf : Sieve.CompletelyMultiplicative f) (d : ℕ) (hd : Squarefree d) : (Finset.prod d.primeFactors fun p => Finset.sum (Finset.Icc 1 M) fun n => f (p ^ n)) =\n  Finset.sum (Finset.filter (fun x => d ∣ x) (Nat.divisors (d ^ M))) fun m => f m"}
{"name":"Sieve.zeta_pos_of_prime","declaration":"theorem Sieve.zeta_pos_of_prime (p : ℕ) : Nat.Prime p → 0 < ↑ArithmeticFunction.zeta p"}
{"name":"Sieve.prime_dvd_primorial_iff","declaration":"theorem Sieve.prime_dvd_primorial_iff (n : ℕ) (p : ℕ) (hp : Nat.Prime p) : p ∣ primorial n ↔ p ≤ n"}
{"name":"Sieve.boundingSum_ge_sum","declaration":"theorem Sieve.boundingSum_ge_sum (s : SelbergSieve) (hnu : s.nu = ArithmeticFunction.pdiv ↑ArithmeticFunction.zeta ↑ArithmeticFunction.id) (hP : ∀ (p : ℕ), Nat.Prime p → ↑p ≤ s.level → p ∣ s.prodPrimes) : SelbergSieve.selbergBoundingSum s ≥ Finset.sum (Finset.Icc 1 ⌊Real.sqrt s.level⌋₊) fun m => 1 / ↑m"}
{"name":"Sieve.siftedSum_eq","declaration":"theorem Sieve.siftedSum_eq (s : SelbergSieve) (hw : ∀ i ∈ s.support, s.weights i = 1) (z : ℝ) (hz : 1 ≤ z) (hP : s.prodPrimes = primorial ⌊z⌋₊) : Sieve.siftedSum s.toSieve = ↑(Finset.filter (fun d => ∀ (p : ℕ), Nat.Prime p → ↑p ≤ z → ¬p ∣ d) s.support).card"}
{"name":"Sieve.CompletelyMultiplicative.id","declaration":"theorem Sieve.CompletelyMultiplicative.id  : Sieve.CompletelyMultiplicative ↑ArithmeticFunction.id"}
{"name":"Sieve.prodDistinctPrimes_squarefree","declaration":"theorem Sieve.prodDistinctPrimes_squarefree (s : Finset ℕ) (h : ∀ p ∈ s, Nat.Prime p) : Squarefree (Finset.prod s fun p => p)"}
{"name":"Sieve.CompletelyMultiplicative.zeta","declaration":"theorem Sieve.CompletelyMultiplicative.zeta  : Sieve.CompletelyMultiplicative ↑ArithmeticFunction.zeta"}
{"name":"Sieve.rem_sum_le_of_const","declaration":"theorem Sieve.rem_sum_le_of_const (s : SelbergSieve) (C : ℝ) (hrem : ∀ d > 0, |Sieve.rem s.toSieve d| ≤ C) : (Finset.sum (Nat.divisors s.prodPrimes) fun d =>\n    if ↑d ≤ s.level then 3 ^ ArithmeticFunction.cardDistinctFactors d * |Sieve.rem s.toSieve d| else 0) ≤\n  C * s.level * (1 + Real.log s.level) ^ 3"}
