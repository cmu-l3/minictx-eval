{"name":"MeasureTheory.Asymptotics.IsBigO.set_integral_isBigO","declaration":"/-- Let `f : X x Y → Z`. If as y → l, f(x, y) = O(g(y)) uniformly on `s : Set X` of finite measure,\nthen the integral of f along s is O(g(y)). -/\ntheorem MeasureTheory.Asymptotics.IsBigO.set_integral_isBigO {α : Type u_1} {E : Type u_2} {F : Type u_3} [NormedAddCommGroup E] {g : α → F} {l : Filter α} {ι : Type u_4} [MeasurableSpace ι] {f : ι × α → E} {s : Set ι} {μ : MeasureTheory.Measure ι} [NormedSpace ℝ E] [NormedAddCommGroup F] (hf : f =O[Filter.principal s ×ˢ l] fun x =>\n  match x with\n  | (_i, x) => g x) (hs : MeasurableSet s) (hμ : ↑↑μ s < ⊤) : (fun x => ∫ (i : ι) in s, f (i, x) ∂μ) =O[l] g"}
{"name":"MeasureTheory.Asymptotics.IsBigO.eventually_integrableOn","declaration":"/-- Let `f : X x Y → Z`. If as y → l, f(x, y) = O(g(y)) uniformly on `s : Set X` of finite measure,\nthen f is eventually (as y → l) integrable along `s`. -/\ntheorem MeasureTheory.Asymptotics.IsBigO.eventually_integrableOn {α : Type u_1} {E : Type u_2} {F : Type u_3} [NormedAddCommGroup E] {g : α → F} {l : Filter α} {ι : Type u_4} [MeasurableSpace ι] {f : ι × α → E} {s : Set ι} {μ : MeasureTheory.Measure ι} [Norm F] (hf : f =O[Filter.principal s ×ˢ l] fun x =>\n  match x with\n  | (_i, x) => g x) (hfm : ∀ᶠ (x : α) in l, MeasureTheory.AEStronglyMeasurable (fun i => f (i, x)) (μ.restrict s)) (hs : MeasurableSet s) (hμ : ↑↑μ s < ⊤) : ∀ᶠ (x : α) in l, MeasureTheory.IntegrableOn (fun i => f (i, x)) s μ"}
{"name":"MeasureTheory.LocallyIntegrable.integrable_of_isBigO_atTop_of_norm_eq_norm_neg","declaration":"/-- If `f` is locally integrable, `‖f(-x)‖ = ‖f(x)‖`, and `f =O[atTop] g`, for some\n`g` integrable at `atTop`, then `f` is integrable. -/\ntheorem MeasureTheory.LocallyIntegrable.integrable_of_isBigO_atTop_of_norm_eq_norm_neg {α : Type u_1} {E : Type u_2} {F : Type u_3} [MeasurableSpace α] [NormedAddCommGroup E] [NormedAddCommGroup F] {f : α → E} {g : α → F} {μ : MeasureTheory.Measure α} [TopologicalSpace α] [SecondCountableTopology α] [LinearOrderedAddCommGroup α] [CompactIccSpace α] [Filter.IsMeasurablyGenerated Filter.atTop] [MeasurableNeg α] [MeasureTheory.Measure.IsNegInvariant μ] (hf : MeasureTheory.LocallyIntegrable f μ) (hsymm : norm ∘ f =ᶠ[MeasureTheory.Measure.ae μ] norm ∘ f ∘ Neg.neg) (ho : f =O[Filter.atTop] g) (hg : MeasureTheory.IntegrableAtFilter g Filter.atTop μ) : MeasureTheory.Integrable f μ"}
