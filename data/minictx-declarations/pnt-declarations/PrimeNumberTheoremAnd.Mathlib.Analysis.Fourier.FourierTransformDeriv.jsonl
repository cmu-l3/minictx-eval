{"name":"Real.hasFDerivAt_fourierChar_neg_bilinear_left","declaration":"theorem Real.hasFDerivAt_fourierChar_neg_bilinear_left {V : Type u_1} {W : Type u_2} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) (v : V) (w : W) : HasFDerivAt (fun v => ↑(Real.fourierChar (-(L v) w)))\n  ((-2 * ↑Real.pi * Complex.I * ↑(Real.fourierChar (-(L v) w))) •\n    ContinuousLinearMap.comp Complex.ofRealCLM ((ContinuousLinearMap.flip L) w))\n  v"}
{"name":"Real.fderiv_fourierChar_neg_bilinear_right_apply","declaration":"theorem Real.fderiv_fourierChar_neg_bilinear_right_apply {V : Type u_1} {W : Type u_2} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) (v : V) (w : W) (y : W) : (fderiv ℝ (fun w => ↑(Real.fourierChar (-(L v) w))) w) y =\n  -2 * ↑Real.pi * Complex.I * ↑((L v) y) * ↑(Real.fourierChar (-(L v) w))"}
{"name":"VectorFourier.fourierIntegral_iteratedFDeriv","declaration":"/-- The Fourier integral of the `n`-th derivative of a function is obtained by multiplying the\nFourier integral of the original function by `(2πI L w ⬝ )^n`. -/\ntheorem VectorFourier.fourierIntegral_iteratedFDeriv {E : Type u_1} [NormedAddCommGroup E] [NormedSpace ℂ E] {V : Type u_2} {W : Type u_3} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) {f : V → E} [MeasurableSpace V] [BorelSpace V] [FiniteDimensional ℝ V] {μ : MeasureTheory.Measure V} [MeasureTheory.Measure.IsAddHaarMeasure μ] {N : ℕ∞} (hf : ContDiff ℝ N f) (h'f : ∀ (n : ℕ), ↑n ≤ N → MeasureTheory.Integrable (iteratedFDeriv ℝ n f) μ) {n : ℕ} (hn : ↑n ≤ N) : VectorFourier.fourierIntegral Real.fourierChar μ (ContinuousLinearMap.toLinearMap₂ L) (iteratedFDeriv ℝ n f) = fun w =>\n  VectorFourier.fourierPowSMulRight (-ContinuousLinearMap.flip L)\n    (VectorFourier.fourierIntegral Real.fourierChar μ (ContinuousLinearMap.toLinearMap₂ L) f) w n"}
{"name":"Real.fourierIntegral_iteratedDeriv","declaration":"theorem Real.fourierIntegral_iteratedDeriv {E : Type u_1} [NormedAddCommGroup E] [NormedSpace ℂ E] {f : ℝ → E} {N : ℕ∞} {n : ℕ} (hf : ContDiff ℝ N f) (h'f : ∀ (n : ℕ), ↑n ≤ N → MeasureTheory.Integrable (iteratedDeriv n f) MeasureTheory.volume) (hn : ↑n ≤ N) : Real.fourierIntegral (iteratedDeriv n f) = fun x => (2 * ↑Real.pi * Complex.I * ↑x) ^ n • Real.fourierIntegral f x"}
{"name":"Real.fourierIntegral_fderiv","declaration":"/-- The Fourier integral of the Fréchet derivative of a function is obtained by multiplying the\nFourier integral of the original function by `2πI ⟪v, w⟫`. -/\ntheorem Real.fourierIntegral_fderiv {E : Type u_1} [NormedAddCommGroup E] [NormedSpace ℂ E] {V : Type u_2} [NormedAddCommGroup V] [InnerProductSpace ℝ V] [FiniteDimensional ℝ V] [MeasurableSpace V] [BorelSpace V] {f : V → E} (hf : MeasureTheory.Integrable f MeasureTheory.volume) (h'f : Differentiable ℝ f) (hf' : MeasureTheory.Integrable (fderiv ℝ f) MeasureTheory.volume) : Real.fourierIntegral (fderiv ℝ f) = VectorFourier.fourierSMulRight (-innerSL ℝ) (Real.fourierIntegral f)"}
{"name":"Real.differentiable_fourierChar","declaration":"theorem Real.differentiable_fourierChar  : Differentiable ℝ fun x => ↑(Real.fourierChar x)"}
{"name":"Real.deriv_fourierChar","declaration":"theorem Real.deriv_fourierChar (x : ℝ) : deriv (fun x => ↑(Real.fourierChar x)) x = 2 * ↑Real.pi * Complex.I * ↑(Real.fourierChar x)"}
{"name":"Real.differentiable_fourierChar_neg_bilinear_right","declaration":"theorem Real.differentiable_fourierChar_neg_bilinear_right {V : Type u_1} {W : Type u_2} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) (v : V) : Differentiable ℝ fun w => ↑(Real.fourierChar (-(L v) w))"}
{"name":"Real.hasFDerivAt_fourierChar_neg_bilinear_right","declaration":"theorem Real.hasFDerivAt_fourierChar_neg_bilinear_right {V : Type u_1} {W : Type u_2} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) (v : V) (w : W) : HasFDerivAt (fun w => ↑(Real.fourierChar (-(L v) w)))\n  ((-2 * ↑Real.pi * Complex.I * ↑(Real.fourierChar (-(L v) w))) • ContinuousLinearMap.comp Complex.ofRealCLM (L v)) w"}
{"name":"Real.differentiable_fourierChar_neg_bilinear_left","declaration":"theorem Real.differentiable_fourierChar_neg_bilinear_left {V : Type u_1} {W : Type u_2} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) (w : W) : Differentiable ℝ fun v => ↑(Real.fourierChar (-(L v) w))"}
{"name":"Real.fourierIntegral_deriv","declaration":"/-- The Fourier integral of the Fréchet derivative of a function is obtained by multiplying the\nFourier integral of the original function by `2πI x`. -/\ntheorem Real.fourierIntegral_deriv {E : Type u_1} [NormedAddCommGroup E] [NormedSpace ℂ E] {f : ℝ → E} (hf : MeasureTheory.Integrable f MeasureTheory.volume) (h'f : Differentiable ℝ f) (hf' : MeasureTheory.Integrable (deriv f) MeasureTheory.volume) : Real.fourierIntegral (deriv f) = fun x => (2 * ↑Real.pi * Complex.I * ↑x) • Real.fourierIntegral f x"}
{"name":"VectorFourier.fourierIntegral_fderiv","declaration":"/-- The Fourier integral of the derivative of a function is obtained by multiplying the Fourier\nintegral of the original function by `-L w v`. -/\ntheorem VectorFourier.fourierIntegral_fderiv {E : Type u_1} [NormedAddCommGroup E] [NormedSpace ℂ E] {V : Type u_2} {W : Type u_3} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) {f : V → E} [MeasurableSpace V] [BorelSpace V] [FiniteDimensional ℝ V] {μ : MeasureTheory.Measure V} [MeasureTheory.Measure.IsAddHaarMeasure μ] (hf : MeasureTheory.Integrable f μ) (h'f : Differentiable ℝ f) (hf' : MeasureTheory.Integrable (fderiv ℝ f) μ) : VectorFourier.fourierIntegral Real.fourierChar μ (ContinuousLinearMap.toLinearMap₂ L) (fderiv ℝ f) =\n  VectorFourier.fourierSMulRight (-ContinuousLinearMap.flip L)\n    (VectorFourier.fourierIntegral Real.fourierChar μ (ContinuousLinearMap.toLinearMap₂ L) f)"}
{"name":"Real.fderiv_fourierChar_neg_bilinear_left_apply","declaration":"theorem Real.fderiv_fourierChar_neg_bilinear_left_apply {V : Type u_1} {W : Type u_2} [NormedAddCommGroup V] [NormedSpace ℝ V] [NormedAddCommGroup W] [NormedSpace ℝ W] (L : V →L[ℝ] W →L[ℝ] ℝ) (v : V) (y : V) (w : W) : (fderiv ℝ (fun v => ↑(Real.fourierChar (-(L v) w))) v) y =\n  -2 * ↑Real.pi * Complex.I * ↑((L y) w) * ↑(Real.fourierChar (-(L v) w))"}
{"name":"Real.fourierIntegral_iteratedFDeriv","declaration":"/-- The Fourier integral of the `n`-th derivative of a function is obtained by multiplying the\nFourier integral of the original function by `(2πI L w ⬝ )^n`. -/\ntheorem Real.fourierIntegral_iteratedFDeriv {E : Type u_1} [NormedAddCommGroup E] [NormedSpace ℂ E] {V : Type u_2} [NormedAddCommGroup V] [InnerProductSpace ℝ V] [FiniteDimensional ℝ V] [MeasurableSpace V] [BorelSpace V] {f : V → E} {N : ℕ∞} (hf : ContDiff ℝ N f) (h'f : ∀ (n : ℕ), ↑n ≤ N → MeasureTheory.Integrable (iteratedFDeriv ℝ n f) MeasureTheory.volume) {n : ℕ} (hn : ↑n ≤ N) : Real.fourierIntegral (iteratedFDeriv ℝ n f) = fun w =>\n  VectorFourier.fourierPowSMulRight (-innerSL ℝ) (Real.fourierIntegral f) w n"}
