{"query": "mathd_algebra_478 (b h v : \u211d) (h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v) (h\u2081 : v = 1 / 3 * (b * h))\n    (h\u2082 : b = 30) (h\u2083 : h = 13 / 2) : v = 65 := by", "response": "/-\n  b h v : \u211d\n  h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v\n  h\u2081 : v = 1 / 3 * (b * h)\n  h\u2082 : b = 30\n  h\u2083 : h = 13 / 2\n  \u22a2 v = 65\n-/", "name": "mathd_algebra_478", "step_count": 0}
{"query": "mathd_algebra_478 (b h v : \u211d) (h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v) (h\u2081 : v = 1 / 3 * (b * h))\n    (h\u2082 : b = 30) (h\u2083 : h = 13 / 2) : v = 65 := by\n  rw [h\u2082, h\u2083] at h\u2081", "response": "/-\n  b h v : \u211d\n  h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v\n  h\u2081 : v = 1 / 3 * (30 * (13 / 2))\n  h\u2082 : b = 30\n  h\u2083 : h = 13 / 2\n  \u22a2 v = 65\n-/", "name": "mathd_algebra_478", "step_count": 1}
{"query": "mathd_algebra_478 (b h v : \u211d) (h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v) (h\u2081 : v = 1 / 3 * (b * h))\n    (h\u2082 : b = 30) (h\u2083 : h = 13 / 2) : v = 65 := by\n  rw [h\u2082, h\u2083] at h\u2081\n  rw [h\u2081]", "response": "/-\n  b h v : \u211d\n  h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v\n  h\u2081 : v = 1 / 3 * (30 * (13 / 2))\n  h\u2082 : b = 30\n  h\u2083 : h = 13 / 2\n  \u22a2 1 / 3 * (30 * (13 / 2)) = 65\n-/", "name": "mathd_algebra_478", "step_count": 2}
{"query": "mathd_algebra_478 (b h v : \u211d) (h\u2080 : 0 < b \u2227 0 < h \u2227 0 < v) (h\u2081 : v = 1 / 3 * (b * h))\n    (h\u2082 : b = 30) (h\u2083 : h = 13 / 2) : v = 65 := by\n  rw [h\u2082, h\u2083] at h\u2081\n  rw [h\u2081]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_478", "step_count": -1}
{"query": "mathd_algebra_141 (a b : \u211d) (h\u2081 : a * b = 180) (h\u2082 : 2 * (a + b) = 54) :\n    a ^ 2 + b ^ 2 = 369 := by", "response": "/-\n  a b : \u211d\n  h\u2081 : a * b = 180\n  h\u2082 : 2 * (a + b) = 54\n  \u22a2 a ^ 2 + b ^ 2 = 369\n-/", "name": "mathd_algebra_141", "step_count": 0}
{"query": "mathd_algebra_141 (a b : \u211d) (h\u2081 : a * b = 180) (h\u2082 : 2 * (a + b) = 54) :\n    a ^ 2 + b ^ 2 = 369 := by\n  replace h\u2082 : a + b = 27", "response": "/-\n  case h\u2082\n  a b : \u211d\n  h\u2081 : a * b = 180\n  h\u2082 : 2 * (a + b) = 54\n  \u22a2 a + b = 27\n-/", "name": "mathd_algebra_141", "step_count": 1}
{"query": "mathd_algebra_141 (a b : \u211d) (h\u2081 : a * b = 180) (h\u2082 : 2 * (a + b) = 54) :\n    a ^ 2 + b ^ 2 = 369 := by\n  replace h\u2082 : a + b = 27\n  linarith", "response": "/-\n  a b : \u211d\n  h\u2081 : a * b = 180\n  h\u2082 : a + b = 27\n  \u22a2 a ^ 2 + b ^ 2 = 369\n-/", "name": "mathd_algebra_141", "step_count": 2}
{"query": "mathd_algebra_141 (a b : \u211d) (h\u2081 : a * b = 180) (h\u2082 : 2 * (a + b) = 54) :\n    a ^ 2 + b ^ 2 = 369 := by\n  replace h\u2082 : a + b = 27\n  linarith\n  have h\u2083 : a ^ 2 + b ^ 2 = (a + b) ^ 2 - 2 * (a * b) := by ring", "response": "/-\n  a b : \u211d\n  h\u2081 : a * b = 180\n  h\u2082 : a + b = 27\n  h\u2083 : a ^ 2 + b ^ 2 = (a + b) ^ 2 - 2 * (a * b)\n  \u22a2 a ^ 2 + b ^ 2 = 369\n-/", "name": "mathd_algebra_141", "step_count": 3}
{"query": "mathd_algebra_141 (a b : \u211d) (h\u2081 : a * b = 180) (h\u2082 : 2 * (a + b) = 54) :\n    a ^ 2 + b ^ 2 = 369 := by\n  replace h\u2082 : a + b = 27\n  linarith\n  have h\u2083 : a ^ 2 + b ^ 2 = (a + b) ^ 2 - 2 * (a * b) := by ring\n  rw [h\u2083, h\u2082, h\u2081]", "response": "/-\n  a b : \u211d\n  h\u2081 : a * b = 180\n  h\u2082 : a + b = 27\n  h\u2083 : a ^ 2 + b ^ 2 = (a + b) ^ 2 - 2 * (a * b)\n  \u22a2 27 ^ 2 - 2 * 180 = 369\n-/", "name": "mathd_algebra_141", "step_count": 4}
{"query": "mathd_algebra_141 (a b : \u211d) (h\u2081 : a * b = 180) (h\u2082 : 2 * (a + b) = 54) :\n    a ^ 2 + b ^ 2 = 369 := by\n  replace h\u2082 : a + b = 27\n  linarith\n  have h\u2083 : a ^ 2 + b ^ 2 = (a + b) ^ 2 - 2 * (a * b) := by ring\n  rw [h\u2083, h\u2082, h\u2081]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_141", "step_count": -1}
{"query": "mathd_algebra_209 (\u03c3 : Equiv \u211d \u211d) (h\u2080 : \u03c3.2 2 = 10) (h\u2081 : \u03c3.2 10 = 1) (h\u2082 : \u03c3.2 1 = 2) :\n    \u03c3.1 (\u03c3.1 10) = 1 := by", "response": "/-\n  \u03c3 : \u211d \u2243 \u211d\n  h\u2080 : Equiv.invFun \u03c3 2 = 10\n  h\u2081 : Equiv.invFun \u03c3 10 = 1\n  h\u2082 : Equiv.invFun \u03c3 1 = 2\n  \u22a2 Equiv.toFun \u03c3 (Equiv.toFun \u03c3 10) = 1\n-/", "name": "mathd_algebra_209", "step_count": 0}
{"query": "mathd_algebra_209 (\u03c3 : Equiv \u211d \u211d) (h\u2080 : \u03c3.2 2 = 10) (h\u2081 : \u03c3.2 10 = 1) (h\u2082 : \u03c3.2 1 = 2) :\n    \u03c3.1 (\u03c3.1 10) = 1 := by\n  rw [\u2190 h\u2080, \u2190 h\u2082]", "response": "/-\n  \u03c3 : \u211d \u2243 \u211d\n  h\u2080 : Equiv.invFun \u03c3 2 = 10\n  h\u2081 : Equiv.invFun \u03c3 10 = 1\n  h\u2082 : Equiv.invFun \u03c3 1 = 2\n  \u22a2 Equiv.toFun \u03c3 (Equiv.toFun \u03c3 (Equiv.invFun \u03c3 (Equiv.invFun \u03c3 1))) = 1\n-/", "name": "mathd_algebra_209", "step_count": 1}
{"query": "mathd_algebra_209 (\u03c3 : Equiv \u211d \u211d) (h\u2080 : \u03c3.2 2 = 10) (h\u2081 : \u03c3.2 10 = 1) (h\u2082 : \u03c3.2 1 = 2) :\n    \u03c3.1 (\u03c3.1 10) = 1 := by\n  rw [\u2190 h\u2080, \u2190 h\u2082]\n  simp", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_209", "step_count": -1}
{"query": "mathd_algebra_33 (x y z : \u211d) (h\u2080 : x \u2260 0) (h\u2081 : 2 * x = 5 * y) (h\u2082 : 7 * y = 10 * z) :\n    z / x = 7 / 25 := by", "response": "/-\n  x y z : \u211d\n  h\u2080 : x \u2260 0\n  h\u2081 : 2 * x = 5 * y\n  h\u2082 : 7 * y = 10 * z\n  \u22a2 z / x = 7 / 25\n-/", "name": "mathd_algebra_33", "step_count": 0}
{"query": "mathd_algebra_33 (x y z : \u211d) (h\u2080 : x \u2260 0) (h\u2081 : 2 * x = 5 * y) (h\u2082 : 7 * y = 10 * z) :\n    z / x = 7 / 25 := by\n  field_simp", "response": "/-\n  x y z : \u211d\n  h\u2080 : x \u2260 0\n  h\u2081 : 2 * x = 5 * y\n  h\u2082 : 7 * y = 10 * z\n  \u22a2 z * 25 = 7 * x\n-/", "name": "mathd_algebra_33", "step_count": 1}
{"query": "mathd_algebra_33 (x y z : \u211d) (h\u2080 : x \u2260 0) (h\u2081 : 2 * x = 5 * y) (h\u2082 : 7 * y = 10 * z) :\n    z / x = 7 / 25 := by\n  field_simp\n  nlinarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_33", "step_count": -1}
{"query": "mathd_numbertheory_299 : 1 * 3 * 5 * 7 * 9 * 11 * 13 % 10 = 5 := by", "response": "/-\n  \u22a2 1 * 3 * 5 * 7 * 9 * 11 * 13 % 10 = 5\n-/", "name": "mathd_numbertheory_299", "step_count": 0}
{"query": "mathd_numbertheory_299 : 1 * 3 * 5 * 7 * 9 * 11 * 13 % 10 = 5 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_299", "step_count": -1}
{"query": "amc12b_2020_p2 :\n    (100 ^ 2 - 7 ^ 2 : \u211d) / (70 ^ 2 - 11 ^ 2) * ((70 - 11) * (70 + 11) / ((100 - 7) * (100 + 7))) =\n      1 := by", "response": "/-\n  \u22a2 (100 ^ 2 - 7 ^ 2) / (70 ^ 2 - 11 ^ 2) * ((70 - 11) * (70 + 11) / ((100 - 7)  \u2026\n-/", "name": "amc12b_2020_p2", "step_count": 0}
{"query": "amc12b_2020_p2 :\n    (100 ^ 2 - 7 ^ 2 : \u211d) / (70 ^ 2 - 11 ^ 2) * ((70 - 11) * (70 + 11) / ((100 - 7) * (100 + 7))) =\n      1 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "amc12b_2020_p2", "step_count": -1}
{"query": "mathd_algebra_419 (a b : \u211d) (h\u2080 : a = -1) (h\u2081 : b = 5) : -a - b ^ 2 + 3 * (a * b) = -39 := by", "response": "/-\n  a b : \u211d\n  h\u2080 : a = -1\n  h\u2081 : b = 5\n  \u22a2 -a - b ^ 2 + 3 * (a * b) = -39\n-/", "name": "mathd_algebra_419", "step_count": 0}
{"query": "mathd_algebra_419 (a b : \u211d) (h\u2080 : a = -1) (h\u2081 : b = 5) : -a - b ^ 2 + 3 * (a * b) = -39 := by\n  rw [h\u2080, h\u2081]", "response": "/-\n  a b : \u211d\n  h\u2080 : a = -1\n  h\u2081 : b = 5\n  \u22a2 - -1 - 5 ^ 2 + 3 * (-1 * 5) = -39\n-/", "name": "mathd_algebra_419", "step_count": 1}
{"query": "mathd_algebra_419 (a b : \u211d) (h\u2080 : a = -1) (h\u2081 : b = 5) : -a - b ^ 2 + 3 * (a * b) = -39 := by\n  rw [h\u2080, h\u2081]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_419", "step_count": -1}
{"query": "mathd_algebra_398 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : 9 * b = 20 * c)\n    (h\u2082 : 7 * a = 4 * b) : 63 * a = 80 * c := by", "response": "/-\n  a b c : \u211d\n  h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\n  h\u2081 : 9 * b = 20 * c\n  h\u2082 : 7 * a = 4 * b\n  \u22a2 63 * a = 80 * c\n-/", "name": "mathd_algebra_398", "step_count": 0}
{"query": "mathd_algebra_398 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : 9 * b = 20 * c)\n    (h\u2082 : 7 * a = 4 * b) : 63 * a = 80 * c := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_398", "step_count": -1}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by", "response": "", "name": "induction_12dvd4expnp1p20", "step_count": 0}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=", "response": "", "name": "induction_12dvd4expnp1p20", "step_count": 1}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by", "response": "", "name": "induction_12dvd4expnp1p20", "step_count": 2}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n", "response": "", "name": "induction_12dvd4expnp1p20", "step_count": 3}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp", "response": "", "name": "induction_12dvd4expnp1p20", "step_count": 4}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp\n    exact dvd_mul_right a n", "response": "/-\n  n : \u2115\n  dvd_of_dvd_add_mul_left : \u2200 (a b n : \u2115), a \u2223 b + a * n \u2192 a \u2223 b\n  \u22a2 12 \u2223 4 ^ (n + 1) + 20\n-/", "name": "induction_12dvd4expnp1p20", "step_count": 5}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp\n    exact dvd_mul_right a n\n  induction' n with k IH", "response": "/-\n  case zero\n  dvd_of_dvd_add_mul_left : \u2200 (a b n : \u2115), a \u2223 b + a * n \u2192 a \u2223 b\n  \u22a2 12 \u2223 4 ^ (zero + 1) + 20\n-/", "name": "induction_12dvd4expnp1p20", "step_count": 6}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp\n    exact dvd_mul_right a n\n  induction' n with k IH\n  \u00b7 decide", "response": "/-\n  \ud83c\udf89 no goals\n-/\n/-\n  case succ\n  dvd_of_dvd_add_mul_left : \u2200 (a b n : \u2115), a \u2223 b + a * n \u2192 a \u2223 b\n  k : \u2115\n  IH : 12 \u2223 4 ^ (k + 1) + 20\n  \u22a2 12 \u2223 4 ^ (succ k + 1) + 20\n-/", "name": "induction_12dvd4expnp1p20", "step_count": 7}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp\n    exact dvd_mul_right a n\n  induction' n with k IH\n  \u00b7 decide\n  \u00b7 rw [_root_.pow_succ]", "response": "/-\n  case succ\n  dvd_of_dvd_add_mul_left : \u2200 (a b n : \u2115), a \u2223 b + a * n \u2192 a \u2223 b\n  k : \u2115\n  IH : 12 \u2223 4 ^ (k + 1) + 20\n  \u22a2 12 \u2223 4 * 4 ^ (k + 1) + 20\n-/", "name": "induction_12dvd4expnp1p20", "step_count": 8}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp\n    exact dvd_mul_right a n\n  induction' n with k IH\n  \u00b7 decide\n  \u00b7 rw [_root_.pow_succ]\n    apply dvd_of_dvd_add_mul_left 12 (4 * 4 ^ k.succ + 20) 5", "response": "/-\n  case succ\n  dvd_of_dvd_add_mul_left : \u2200 (a b n : \u2115), a \u2223 b + a * n \u2192 a \u2223 b\n  k : \u2115\n  IH : 12 \u2223 4 ^ (k + 1) + 20\n  \u22a2 12 \u2223 4 * 4 ^ succ k + 20 + 12 * 5\n-/", "name": "induction_12dvd4expnp1p20", "step_count": 9}
{"query": "induction_12dvd4expnp1p20 (n : \u2115) : 12 \u2223 4 ^ (n + 1) + 20 := by\n  have dvd_of_dvd_add_mul_left : \u2200 a b n : \u2115, a \u2223 b + a * n \u2192 a \u2223 b :=\n    by\n    intro a b n\n    refine' (Nat.dvd_add_left _).mp\n    exact dvd_mul_right a n\n  induction' n with k IH\n  \u00b7 decide\n  \u00b7 rw [_root_.pow_succ]\n    apply dvd_of_dvd_add_mul_left 12 (4 * 4 ^ k.succ + 20) 5\n    exact dvd_mul_of_dvd_right IH 4", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "induction_12dvd4expnp1p20", "step_count": -1}
{"query": "mathd_algebra_137 (x : \u2115) (h\u2080 : \u2191x + (4 : \u211d) / (100 : \u211d) * \u2191x = 598) : x = 575 := by", "response": "/-\n  x : \u2115\n  h\u2080 : \u2191x + 4 / 100 * \u2191x = 598\n  \u22a2 x = 575\n-/", "name": "mathd_algebra_137", "step_count": 0}
{"query": "mathd_algebra_137 (x : \u2115) (h\u2080 : \u2191x + (4 : \u211d) / (100 : \u211d) * \u2191x = 598) : x = 575 := by\n  have h\u2081 : \u2191x = (575 : \u211d); linarith", "response": "/-\n  x : \u2115\n  h\u2080 : \u2191x + 4 / 100 * \u2191x = 598\n  h\u2081 : \u2191x = 575\n  \u22a2 x = 575\n-/", "name": "mathd_algebra_137", "step_count": 1}
{"query": "mathd_algebra_137 (x : \u2115) (h\u2080 : \u2191x + (4 : \u211d) / (100 : \u211d) * \u2191x = 598) : x = 575 := by\n  have h\u2081 : \u2191x = (575 : \u211d); linarith\n  assumption_mod_cast", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_137", "step_count": -1}
{"query": "mathd_algebra_160 (n x : \u211d) (h\u2080 : n + x = 97) (h\u2081 : n + 5 * x = 265) : n + 2 * x = 139 := by", "response": "/-\n  n x : \u211d\n  h\u2080 : n + x = 97\n  h\u2081 : n + 5 * x = 265\n  \u22a2 n + 2 * x = 139\n-/", "name": "mathd_algebra_160", "step_count": 0}
{"query": "mathd_algebra_160 (n x : \u211d) (h\u2080 : n + x = 97) (h\u2081 : n + 5 * x = 265) : n + 2 * x = 139 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_160", "step_count": -1}
{"query": "mathd_algebra_24 (x : \u211d) (h\u2080 : x / 50 = 40) : x = 2000 := by", "response": "/-\n  x : \u211d\n  h\u2080 : x / 50 = 40\n  \u22a2 x = 2000\n-/", "name": "mathd_algebra_24", "step_count": 0}
{"query": "mathd_algebra_24 (x : \u211d) (h\u2080 : x / 50 = 40) : x = 2000 := by\n  nlinarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_24", "step_count": -1}
{"query": "mathd_algebra_176 (x : \u211d) : (x + 1) ^ 2 * x = x ^ 3 + 2 * x ^ 2 + x := by", "response": "/-\n  x : \u211d\n  \u22a2 (x + 1) ^ 2 * x = x ^ 3 + 2 * x ^ 2 + x\n-/", "name": "mathd_algebra_176", "step_count": 0}
{"query": "mathd_algebra_176 (x : \u211d) : (x + 1) ^ 2 * x = x ^ 3 + 2 * x ^ 2 + x := by\n  ring_nf", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_176", "step_count": -1}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by", "response": "/-\n  n : \u2115\n  h\u2080 : 3 \u2264 n\n  \u22a2 n ! < n ^ (n - 1)\n-/", "name": "induction_nfactltnexpnm1ngt3", "step_count": 0}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH", "response": "/-\n  case refl\n  n : \u2115\n  \u22a2 3! < 3 ^ (3 - 1)\n-/", "name": "induction_nfactltnexpnm1ngt3", "step_count": 1}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]", "response": "/-\n  case refl\n  n : \u2115\n  \u22a2 succ 2 * succ 1 < 3 ^ 2\n-/", "name": "induction_nfactltnexpnm1ngt3", "step_count": 2}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]", "response": "/-\n  \ud83c\udf89 no goals\n-/\n/-\n  case step\n  n k : \u2115\n  h\u2080 : Nat.le 3 k\n  IH : k ! < k ^ (k - 1)\n  \u22a2 (succ k)! < succ k ^ (succ k - 1)\n-/", "name": "induction_nfactltnexpnm1ngt3", "step_count": 3}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 4}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 5}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc\n      k.succ.factorial = k.succ * k.factorial := rfl", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 6}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc\n      k.succ.factorial = k.succ * k.factorial := rfl\n      _ < k.succ * k ^ (k - 1) := ((mul_lt_mul_left (Nat.succ_pos k)).mpr IH)", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 7}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc\n      k.succ.factorial = k.succ * k.factorial := rfl\n      _ < k.succ * k ^ (k - 1) := ((mul_lt_mul_left (Nat.succ_pos k)).mpr IH)\n      _ \u2264 k.succ * k.succ ^ (k - 1) :=", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 8}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc\n      k.succ.factorial = k.succ * k.factorial := rfl\n      _ < k.succ * k ^ (k - 1) := ((mul_lt_mul_left (Nat.succ_pos k)).mpr IH)\n      _ \u2264 k.succ * k.succ ^ (k - 1) :=\n        (Nat.mul_le_mul_left _ <| Nat.pow_le_pow_of_le_left (Nat.le_succ k) (k - 1))", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 9}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc\n      k.succ.factorial = k.succ * k.factorial := rfl\n      _ < k.succ * k ^ (k - 1) := ((mul_lt_mul_left (Nat.succ_pos k)).mpr IH)\n      _ \u2264 k.succ * k.succ ^ (k - 1) :=\n        (Nat.mul_le_mul_left _ <| Nat.pow_le_pow_of_le_left (Nat.le_succ k) (k - 1))\n      _ = k.succ ^ (k - 1 + 1) := by rw [\u2190 _root_.pow_succ k.succ (k - 1)]", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": 10}
{"query": "induction_nfactltnexpnm1ngt3 (n : \u2115) (h\u2080 : 3 \u2264 n) : n ! < n ^ (n - 1) := by\n  induction' h\u2080 with k h\u2080 IH\n  \u00b7 simp [factorial]\n    simp [Nat.pow_succ]\n  \u00b7 have k_ge_one : 1 \u2264 k := le_trans (by decide) h\u2080\n    calc\n      k.succ.factorial = k.succ * k.factorial := rfl\n      _ < k.succ * k ^ (k - 1) := ((mul_lt_mul_left (Nat.succ_pos k)).mpr IH)\n      _ \u2264 k.succ * k.succ ^ (k - 1) :=\n        (Nat.mul_le_mul_left _ <| Nat.pow_le_pow_of_le_left (Nat.le_succ k) (k - 1))\n      _ = k.succ ^ (k - 1 + 1) := by rw [\u2190 _root_.pow_succ k.succ (k - 1)]\n      _ = k.succ ^ k := by rw [Nat.sub_add_cancel k_ge_one]", "response": "", "name": "induction_nfactltnexpnm1ngt3", "step_count": -1}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by", "response": "/-\n  \u22a2 \u00ac\u2200 (a b : \u2124), (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 0}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _", "response": "/-\n  \u22a2 \u2203 x, \u00ac\u2200 (b : \u2124), (\u2203 i j, x = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, x ^ 2 + b ^ 2 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 1}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2", "response": "/-\n  case h\n  \u22a2 \u00ac\u2200 (b : \u2124), (\u2203 i j, 2 = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, 2 ^ 2 + b ^ 2 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 2}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _", "response": "/-\n  case h\n  \u22a2 \u2203 x, \u00ac((\u2203 i j, 2 = 2 * i \u2227 x = 2 * j) \u2194 \u2203 k, 2 ^ 2 + x ^ 2 = 8 * k)\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 3}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4", "response": "/-\n  case h\n  \u22a2 \u00ac((\u2203 i j, 2 = 2 * i \u2227 4 = 2 * j) \u2194 \u2203 k, 2 ^ 2 + 4 ^ 2 = 8 * k)\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 4}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _", "response": "/-\n  case h\n  \u22a2 (\u00ac\u2203 i j, 2 = 2 * i \u2227 4 = 2 * j) \u2194 \u2203 k, 2 ^ 2 + 4 ^ 2 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 5}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _", "response": "/-\n  case h\n  \u22a2 (\u2203 k, 2 ^ 2 + 4 ^ 2 = 8 * k) \u2194 \u00ac\u2203 i j, 2 = 2 * i \u2227 4 = 2 * j\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 6}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr", "response": "/-\n  case h\n  \u22a2 (\u2203 i j, 2 = 2 * i \u2227 4 = 2 * j) \u2194 \u00ac\u2203 k, 2 ^ 2 + 4 ^ 2 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 7}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _", "response": "/-\n  case h.refine'_1\n  \u22a2 \u2203 i j, 2 = 2 * i \u2227 4 = 2 * j\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 8}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1", "response": "/-\n  case h\n  \u22a2 \u2203 j, 2 = 2 * 1 \u2227 4 = 2 * j\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 9}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2", "response": "/-\n  case h\n  \u22a2 2 = 2 * 1 \u2227 4 = 2 * 2\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 10}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/\n/-\n  case h.refine'_2\n  \u22a2 \u00ac\u2203 k, 2 ^ 2 + 4 ^ 2 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 11}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num", "response": "/-\n  case h.refine'_2\n  \u22a2 \u2200 (x : \u2124), \u00ac20 = 8 * x\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 12}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k", "response": "/-\n  case h.refine'_2\n  k : \u2124\n  \u22a2 \u00ac20 = 8 * k\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 13}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _", "response": "/-\n  case h.refine'_2\n  k : \u2124\n  \u22a2 8 * k \u2260 20\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 14}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _\n    apply ne_iff_lt_or_gt.mpr", "response": "/-\n  case h.refine'_2\n  k : \u2124\n  \u22a2 8 * k < 20 \u2228 8 * k > 20\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 15}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _\n    apply ne_iff_lt_or_gt.mpr\n    by_cases k \u2264 2", "response": "/-\n  case pos\n  k : \u2124\n  h\u271d : k \u2264 2\n  \u22a2 8 * k < 20 \u2228 8 * k > 20\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 16}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _\n    apply ne_iff_lt_or_gt.mpr\n    by_cases k \u2264 2\n    \u00b7 left", "response": "/-\n  case pos.h\n  k : \u2124\n  h\u271d : k \u2264 2\n  \u22a2 8 * k < 20\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 17}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _\n    apply ne_iff_lt_or_gt.mpr\n    by_cases k \u2264 2\n    \u00b7 left\n      linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/\n/-\n  case neg\n  k : \u2124\n  h\u271d : \u00ack \u2264 2\n  \u22a2 8 * k < 20 \u2228 8 * k > 20\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 18}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _\n    apply ne_iff_lt_or_gt.mpr\n    by_cases k \u2264 2\n    \u00b7 left\n      linarith\n    \u00b7 right", "response": "/-\n  case neg.h\n  k : \u2124\n  h\u271d : \u00ack \u2264 2\n  \u22a2 8 * k > 20\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": 19}
{"query": "numbertheory_notequiv2i2jasqbsqdiv8 :\n    \u00ac\u2200 a b : \u2124, (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k := by\n  refine' not_forall_of_exists_not _\n  use 2\n  refine' not_forall_of_exists_not _\n  use 4\n  refine' not_iff.mpr _\n  refine' Iff.symm _\n  apply iff_not_comm.mpr\n  refine' iff_of_true _ _\n  \u00b7 use 1\n    use 2\n    norm_num\n  \u00b7 norm_num\n    intro k\n    refine' ne_comm.mp _\n    apply ne_iff_lt_or_gt.mpr\n    by_cases k \u2264 2\n    \u00b7 left\n      linarith\n    \u00b7 right\n      linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "numbertheory_notequiv2i2jasqbsqdiv8", "step_count": -1}
{"query": "mathd_numbertheory_345 : (2000 + 2001 + 2002 + 2003 + 2004 + 2005 + 2006) % 7 = 0 := by", "response": "/-\n  \u22a2 (2000 + 2001 + 2002 + 2003 + 2004 + 2005 + 2006) % 7 = 0\n-/", "name": "mathd_numbertheory_345", "step_count": 0}
{"query": "mathd_numbertheory_345 : (2000 + 2001 + 2002 + 2003 + 2004 + 2005 + 2006) % 7 = 0 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_345", "step_count": -1}
{"query": "algebra_sqineq_at2malt1 (a : \u211d) : a * (2 - a) \u2264 1 := by", "response": "/-\n  a : \u211d\n  \u22a2 a * (2 - a) \u2264 1\n-/", "name": "algebra_sqineq_at2malt1", "step_count": 0}
{"query": "algebra_sqineq_at2malt1 (a : \u211d) : a * (2 - a) \u2264 1 := by\n  suffices : 0 \u2264 a ^ 2 - 2 * a + 1; nlinarith", "response": "/-\n  case this\n  a : \u211d\n  \u22a2 0 \u2264 a ^ 2 - 2 * a + 1\n-/", "name": "algebra_sqineq_at2malt1", "step_count": 1}
{"query": "algebra_sqineq_at2malt1 (a : \u211d) : a * (2 - a) \u2264 1 := by\n  suffices : 0 \u2264 a ^ 2 - 2 * a + 1; nlinarith\n  suffices : 0 \u2264 (a - 1) ^ 2; nlinarith", "response": "/-\n  case this\n  a : \u211d\n  \u22a2 0 \u2264 (a - 1) ^ 2\n-/", "name": "algebra_sqineq_at2malt1", "step_count": 2}
{"query": "algebra_sqineq_at2malt1 (a : \u211d) : a * (2 - a) \u2264 1 := by\n  suffices : 0 \u2264 a ^ 2 - 2 * a + 1; nlinarith\n  suffices : 0 \u2264 (a - 1) ^ 2; nlinarith\n  nlinarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "algebra_sqineq_at2malt1", "step_count": -1}
{"query": "mathd_algebra_171 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = 5 * x + 4) : f 1 = 9 := by", "response": "/-\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = 5 * x + 4\n  \u22a2 f 1 = 9\n-/", "name": "mathd_algebra_171", "step_count": 0}
{"query": "mathd_algebra_171 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = 5 * x + 4) : f 1 = 9 := by\n  rw [h\u2080]", "response": "/-\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = 5 * x + 4\n  \u22a2 5 * 1 + 4 = 9\n-/", "name": "mathd_algebra_171", "step_count": 1}
{"query": "mathd_algebra_171 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = 5 * x + 4) : f 1 = 9 := by\n  rw [h\u2080]\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_171", "step_count": -1}
{"query": "mathd_algebra_188 (\u03c3 : Equiv \u211d \u211d) (h : \u03c3.1 2 = \u03c3.2 2) : \u03c3.1 (\u03c3.1 2) = 2 := by", "response": "/-\n  \u03c3 : \u211d \u2243 \u211d\n  h : Equiv.toFun \u03c3 2 = Equiv.invFun \u03c3 2\n  \u22a2 Equiv.toFun \u03c3 (Equiv.toFun \u03c3 2) = 2\n-/", "name": "mathd_algebra_188", "step_count": 0}
{"query": "mathd_algebra_188 (\u03c3 : Equiv \u211d \u211d) (h : \u03c3.1 2 = \u03c3.2 2) : \u03c3.1 (\u03c3.1 2) = 2 := by\n  simp [h]", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_188", "step_count": -1}
{"query": "mathd_algebra_346 (f g : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = 2 * x - 3) (h\u2081 : \u2200 x, g x = x + 1) :\n    g (f 5 - 1) = 7 := by", "response": "/-\n  f g : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = 2 * x - 3\n  h\u2081 : \u2200 (x : \u211d), g x = x + 1\n  \u22a2 g (f 5 - 1) = 7\n-/", "name": "mathd_algebra_346", "step_count": 0}
{"query": "mathd_algebra_346 (f g : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = 2 * x - 3) (h\u2081 : \u2200 x, g x = x + 1) :\n    g (f 5 - 1) = 7 := by\n  rw [h\u2080, h\u2081]", "response": "/-\n  f g : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = 2 * x - 3\n  h\u2081 : \u2200 (x : \u211d), g x = x + 1\n  \u22a2 2 * 5 - 3 - 1 + 1 = 7\n-/", "name": "mathd_algebra_346", "step_count": 1}
{"query": "mathd_algebra_346 (f g : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = 2 * x - 3) (h\u2081 : \u2200 x, g x = x + 1) :\n    g (f 5 - 1) = 7 := by\n  rw [h\u2080, h\u2081]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_346", "step_count": -1}
{"query": "mathd_numbertheory_728 : (29 ^ 13 - 5 ^ 13) % 7 = 3 := by", "response": "/-\n  \u22a2 (29 ^ 13 - 5 ^ 13) % 7 = 3\n-/", "name": "mathd_numbertheory_728", "step_count": 0}
{"query": "mathd_numbertheory_728 : (29 ^ 13 - 5 ^ 13) % 7 = 3 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_728", "step_count": -1}
{"query": "mathd_algebra_44 (s t : \u211d) (h\u2080 : s = 9 - 2 * t) (h\u2081 : t = 3 * s + 1) : s = 1 \u2227 t = 4 := by", "response": "/-\n  s t : \u211d\n  h\u2080 : s = 9 - 2 * t\n  h\u2081 : t = 3 * s + 1\n  \u22a2 s = 1 \u2227 t = 4\n-/\n/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_44", "step_count": 0}
{"query": "mathd_algebra_44 (s t : \u211d) (h\u2080 : s = 9 - 2 * t) (h\u2081 : t = 3 * s + 1) : s = 1 \u2227 t = 4 := by\n  constructor <;> linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_44", "step_count": -1}
{"query": "mathd_algebra_452 (a : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, a (n + 2) - a (n + 1) = a (n + 1) - a n)\n    (h\u2081 : a 1 = 2 / 3) (h\u2082 : a 9 = 4 / 5) : a 5 = 11 / 15 := by", "response": "/-\n  a : \u2115 \u2192 \u211d\n  h\u2080 : \u2200 (n : \u2115), a (n + 2) - a (n + 1) = a (n + 1) - a n\n  h\u2081 : a 1 = 2 / 3\n  h\u2082 : a 9 = 4 / 5\n  \u22a2 a 5 = 11 / 15\n-/", "name": "mathd_algebra_452", "step_count": 0}
{"query": "mathd_algebra_452 (a : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, a (n + 2) - a (n + 1) = a (n + 1) - a n)\n    (h\u2081 : a 1 = 2 / 3) (h\u2082 : a 9 = 4 / 5) : a 5 = 11 / 15 := by\n  linarith [h\u2080 1, h\u2080 2, h\u2080 3, h\u2080 4, h\u2080 5, h\u2080 6, h\u2080 7]", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_452", "step_count": -1}
{"query": "mathd_numbertheory_207 : 8 * 9 ^ 2 + 5 * 9 + 2 = 695 := by", "response": "/-\n  \u22a2 8 * 9 ^ 2 + 5 * 9 + 2 = 695\n-/", "name": "mathd_numbertheory_207", "step_count": 0}
{"query": "mathd_numbertheory_207 : 8 * 9 ^ 2 + 5 * 9 + 2 = 695 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_207", "step_count": -1}
{"query": "mathd_numbertheory_342 : 54 % 6 = 0 := by", "response": "/-\n  \u22a2 54 % 6 = 0\n-/", "name": "mathd_numbertheory_342", "step_count": 0}
{"query": "mathd_numbertheory_342 : 54 % 6 = 0 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_342", "step_count": -1}
{"query": "mathd_algebra_296 : abs ((3491 - 60) * (3491 + 60) - 3491 ^ 2 : \u2124) = 3600 := by", "response": "/-\n  \u22a2 |(3491 - 60) * (3491 + 60) - 3491 ^ 2| = 3600\n-/", "name": "mathd_algebra_296", "step_count": 0}
{"query": "mathd_algebra_296 : abs ((3491 - 60) * (3491 + 60) - 3491 ^ 2 : \u2124) = 3600 := by\n  rw [abs_of_nonpos]", "response": "/-\n  \u22a2 -((3491 - 60) * (3491 + 60) - 3491 ^ 2) = 3600\n-/", "name": "mathd_algebra_296", "step_count": 1}
{"query": "mathd_algebra_296 : abs ((3491 - 60) * (3491 + 60) - 3491 ^ 2 : \u2124) = 3600 := by\n  rw [abs_of_nonpos]\n  norm_num", "response": "Keywords not found or in incorrect order", "name": "mathd_algebra_296", "step_count": 2}
{"query": "mathd_algebra_296 : abs ((3491 - 60) * (3491 + 60) - 3491 ^ 2 : \u2124) = 3600 := by\n  rw [abs_of_nonpos]\n  norm_num\n  norm_num", "response": "/-\n  \u22a2 (3491 - 60) * (3491 + 60) - 3491 ^ 2 \u2264 0\n-/\n  norm_num\n/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_296", "step_count": -1}
{"query": "mathd_algebra_107 (x y : \u211d) (h\u2080 : x ^ 2 + 8 * x + y ^ 2 - 6 * y = 0) :\n    (x + 4) ^ 2 + (y - 3) ^ 2 = 5 ^ 2 := by", "response": "/-\n  x y : \u211d\n  h\u2080 : x ^ 2 + 8 * x + y ^ 2 - 6 * y = 0\n  \u22a2 (x + 4) ^ 2 + (y - 3) ^ 2 = 5 ^ 2\n-/", "name": "mathd_algebra_107", "step_count": 0}
{"query": "mathd_algebra_107 (x y : \u211d) (h\u2080 : x ^ 2 + 8 * x + y ^ 2 - 6 * y = 0) :\n    (x + 4) ^ 2 + (y - 3) ^ 2 = 5 ^ 2 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_107", "step_count": -1}
{"query": "mathd_algebra_412 (x y : \u211d) (h\u2080 : x + y = 25) (h\u2081 : x - y = 11) : x = 18 := by", "response": "/-\n  x y : \u211d\n  h\u2080 : x + y = 25\n  h\u2081 : x - y = 11\n  \u22a2 x = 18\n-/", "name": "mathd_algebra_412", "step_count": 0}
{"query": "mathd_algebra_412 (x y : \u211d) (h\u2080 : x + y = 25) (h\u2081 : x - y = 11) : x = 18 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_412", "step_count": -1}
{"query": "mathd_algebra_275 (x : \u211d) (h : ((11 : \u211d) ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5) :\n    ((11 : \u211d) ^ (1 / 4)) ^ (6 * x + 2) = 121 / 25 := by", "response": "/-\n  x : \u211d\n  h : (11 ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5\n  \u22a2 (11 ^ (1 / 4)) ^ (6 * x + 2) = 121 / 25\n-/", "name": "mathd_algebra_275", "step_count": 0}
{"query": "mathd_algebra_275 (x : \u211d) (h : ((11 : \u211d) ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5) :\n    ((11 : \u211d) ^ (1 / 4)) ^ (6 * x + 2) = 121 / 25 := by\n  revert x h", "response": "/-\n  \u22a2 \u2200 (x : \u211d), (11 ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5 \u2192 (11 ^ (1 / 4)) ^ (6 * x +  \u2026\n-/", "name": "mathd_algebra_275", "step_count": 1}
{"query": "mathd_algebra_275 (x : \u211d) (h : ((11 : \u211d) ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5) :\n    ((11 : \u211d) ^ (1 / 4)) ^ (6 * x + 2) = 121 / 25 := by\n  revert x h\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_275", "step_count": -1}
{"query": "mathd_algebra_388 (x y z : \u211d) (h\u2080 : 3 * x + 4 * y - 12 * z = 10)\n    (h\u2081 : -2 * x - 3 * y + 9 * z = -4) : x = 14 := by", "response": "/-\n  x y z : \u211d\n  h\u2080 : 3 * x + 4 * y - 12 * z = 10\n  h\u2081 : -2 * x - 3 * y + 9 * z = -4\n  \u22a2 x = 14\n-/", "name": "mathd_algebra_388", "step_count": 0}
{"query": "mathd_algebra_388 (x y z : \u211d) (h\u2080 : 3 * x + 4 * y - 12 * z = 10)\n    (h\u2081 : -2 * x - 3 * y + 9 * z = -4) : x = 14 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_388", "step_count": -1}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by", "response": "/-\n  y : \u211d\n  h\u2080 : 0 \u2264 19 + 3 * y\n  h\u2081 : Real.sqrt (19 + 3 * y) = 7\n  \u22a2 y = 10\n-/", "name": "mathd_algebra_263", "step_count": 0}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081", "response": "/-\n  \u22a2 \u2200 (y : \u211d), 0 \u2264 19 + 3 * y \u2192 Real.sqrt (19 + 3 * y) = 7 \u2192 y = 10\n-/", "name": "mathd_algebra_263", "step_count": 1}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081\n  intro x hx", "response": "/-\n  x : \u211d\n  hx : 0 \u2264 19 + 3 * x\n  \u22a2 Real.sqrt (19 + 3 * x) = 7 \u2192 x = 10\n-/", "name": "mathd_algebra_263", "step_count": 2}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081\n  intro x hx\n  rw [Real.sqrt_eq_iff_sq_eq hx]", "response": "/-\n  x : \u211d\n  hx : 0 \u2264 19 + 3 * x\n  \u22a2 7 ^ 2 = 19 + 3 * x \u2192 x = 10\n-/", "name": "mathd_algebra_263", "step_count": 3}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081\n  intro x hx\n  rw [Real.sqrt_eq_iff_sq_eq hx]\n  swap", "response": "/-\n  x : \u211d\n  hx : 0 \u2264 19 + 3 * x\n  \u22a2 0 \u2264 7\n-/", "name": "mathd_algebra_263", "step_count": 4}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081\n  intro x hx\n  rw [Real.sqrt_eq_iff_sq_eq hx]\n  swap\n  norm_num", "response": "/-\n  x : \u211d\n  hx : 0 \u2264 19 + 3 * x\n  \u22a2 7 ^ 2 = 19 + 3 * x \u2192 x = 10\n-/", "name": "mathd_algebra_263", "step_count": 5}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081\n  intro x hx\n  rw [Real.sqrt_eq_iff_sq_eq hx]\n  swap\n  norm_num\n  intro h", "response": "/-\n  x : \u211d\n  hx : 0 \u2264 19 + 3 * x\n  h : 7 ^ 2 = 19 + 3 * x\n  \u22a2 x = 10\n-/", "name": "mathd_algebra_263", "step_count": 6}
{"query": "mathd_algebra_263 (y : \u211d) (h\u2080 : 0 \u2264 19 + 3 * y) (h\u2081 : Real.sqrt (19 + 3 * y) = 7) :\n    y = 10 := by\n  revert y h\u2080 h\u2081\n  intro x hx\n  rw [Real.sqrt_eq_iff_sq_eq hx]\n  swap\n  norm_num\n  intro h\n  nlinarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_263", "step_count": -1}
{"query": "mathd_algebra_432 (x : \u211d) : (x + 3) * (2 * x - 6) = 2 * x ^ 2 - 18 := by", "response": "/-\n  x : \u211d\n  \u22a2 (x + 3) * (2 * x - 6) = 2 * x ^ 2 - 18\n-/", "name": "mathd_algebra_432", "step_count": 0}
{"query": "mathd_algebra_432 (x : \u211d) : (x + 3) * (2 * x - 6) = 2 * x ^ 2 - 18 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_432", "step_count": -1}
{"query": "mathd_algebra_427 (x y z : \u211d) (h\u2080 : 3 * x + y = 17) (h\u2081 : 5 * y + z = 14)\n    (h\u2082 : 3 * x + 5 * z = 41) : x + y + z = 12 := by", "response": "/-\n  x y z : \u211d\n  h\u2080 : 3 * x + y = 17\n  h\u2081 : 5 * y + z = 14\n  h\u2082 : 3 * x + 5 * z = 41\n  \u22a2 x + y + z = 12\n-/", "name": "mathd_algebra_427", "step_count": 0}
{"query": "mathd_algebra_427 (x y z : \u211d) (h\u2080 : 3 * x + y = 17) (h\u2081 : 5 * y + z = 14)\n    (h\u2082 : 3 * x + 5 * z = 41) : x + y + z = 12 := by\n  have h\u2083 := congr (congr_arg Add.add h\u2080) h\u2081", "response": "/-\n  x y z : \u211d\n  h\u2080 : 3 * x + y = 17\n  h\u2081 : 5 * y + z = 14\n  h\u2082 : 3 * x + 5 * z = 41\n  h\u2083 : Add.add (3 * x + y) (5 * y + z) = Add.add 17 14\n  \u22a2 x + y + z = 12\n-/", "name": "mathd_algebra_427", "step_count": 1}
{"query": "mathd_algebra_427 (x y z : \u211d) (h\u2080 : 3 * x + y = 17) (h\u2081 : 5 * y + z = 14)\n    (h\u2082 : 3 * x + 5 * z = 41) : x + y + z = 12 := by\n  have h\u2083 := congr (congr_arg Add.add h\u2080) h\u2081\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_427", "step_count": -1}
{"query": "algebra_sqineq_unitcircatbpamblt1 (a b : \u211d) (h\u2080 : a ^ 2 + b ^ 2 = 1) :\n    a * b + (a - b) \u2264 1 := by", "response": "/-\n  a b : \u211d\n  h\u2080 : a ^ 2 + b ^ 2 = 1\n  \u22a2 a * b + (a - b) \u2264 1\n-/", "name": "algebra_sqineq_unitcircatbpamblt1", "step_count": 0}
{"query": "algebra_sqineq_unitcircatbpamblt1 (a b : \u211d) (h\u2080 : a ^ 2 + b ^ 2 = 1) :\n    a * b + (a - b) \u2264 1 := by\n  nlinarith [sq_nonneg (a - b)]", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "algebra_sqineq_unitcircatbpamblt1", "step_count": -1}
{"query": "mathd_algebra_329 (x y : \u211d) (h\u2080 : 3 * y = x) (h\u2081 : 2 * x + 5 * y = 11) : x + y = 4 := by", "response": "/-\n  x y : \u211d\n  h\u2080 : 3 * y = x\n  h\u2081 : 2 * x + 5 * y = 11\n  \u22a2 x + y = 4\n-/", "name": "mathd_algebra_329", "step_count": 0}
{"query": "mathd_algebra_329 (x y : \u211d) (h\u2080 : 3 * y = x) (h\u2081 : 2 * x + 5 * y = 11) : x + y = 4 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_329", "step_count": -1}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by", "response": "", "name": "mathd_numbertheory_229", "step_count": 0}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=", "response": "", "name": "mathd_numbertheory_229", "step_count": 1}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by", "response": "", "name": "mathd_numbertheory_229", "step_count": 2}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide", "response": "", "name": "mathd_numbertheory_229", "step_count": 3}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num", "response": "", "name": "mathd_numbertheory_229", "step_count": 4}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num\n    rw [break_power]", "response": "", "name": "mathd_numbertheory_229", "step_count": 5}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num\n    rw [break_power]\n    rw [five_to_the_six_is_one]", "response": "", "name": "mathd_numbertheory_229", "step_count": 6}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num\n    rw [break_power]\n    rw [five_to_the_six_is_one]\n    norm_num", "response": "/-\n  five_to_thirty_is_one : 5 ^ 30 = 1\n  \u22a2 5 ^ 30 % 7 = 1\n-/", "name": "mathd_numbertheory_229", "step_count": 7}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num\n    rw [break_power]\n    rw [five_to_the_six_is_one]\n    norm_num\n  change 5 ^ 30 \u2261 1 [MOD 7]", "response": "/-\n  five_to_thirty_is_one : 5 ^ 30 = 1\n  \u22a2 5 ^ 30 \u2261 1 [MOD 7]\n-/", "name": "mathd_numbertheory_229", "step_count": 8}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num\n    rw [break_power]\n    rw [five_to_the_six_is_one]\n    norm_num\n  change 5 ^ 30 \u2261 1 [MOD 7]\n  rw [\u2190 ZMod.eq_iff_modEq_nat]", "response": "/-\n  five_to_thirty_is_one : 5 ^ 30 = 1\n  \u22a2 \u2191(5 ^ 30) = \u21911\n-/", "name": "mathd_numbertheory_229", "step_count": 9}
{"query": "mathd_numbertheory_229 : 5 ^ 30 % 7 = 1 := by\n  have five_to_thirty_is_one : (5 ^ 30 : ZMod 7) = 1 :=\n    by\n    have five_to_the_six_is_one : (5 ^ 6 : ZMod 7) = 1 := by decide\n    have break_power : (5 ^ 30 : ZMod 7) = (5 ^ 6) ^ 5 := by norm_num\n    rw [break_power]\n    rw [five_to_the_six_is_one]\n    norm_num\n  change 5 ^ 30 \u2261 1 [MOD 7]\n  rw [\u2190 ZMod.eq_iff_modEq_nat]\n  exact_mod_cast five_to_thirty_is_one", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_229", "step_count": -1}
{"query": "mathd_algebra_129 (a : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : 8\u207b\u00b9 / 4\u207b\u00b9 - a\u207b\u00b9 = 1) : a = -2 := by", "response": "/-\n  a : \u211d\n  h\u2080 : a \u2260 0\n  h\u2081 : 8\u207b\u00b9 / 4\u207b\u00b9 - a\u207b\u00b9 = 1\n  \u22a2 a = -2\n-/", "name": "mathd_algebra_129", "step_count": 0}
{"query": "mathd_algebra_129 (a : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : 8\u207b\u00b9 / 4\u207b\u00b9 - a\u207b\u00b9 = 1) : a = -2 := by\n  field_simp  at h\u2081", "response": "/-\n  a : \u211d\n  h\u2080 : a \u2260 0\n  h\u2081 : 4 * a - 8 = 8 * a\n  \u22a2 a = -2\n-/", "name": "mathd_algebra_129", "step_count": 1}
{"query": "mathd_algebra_129 (a : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : 8\u207b\u00b9 / 4\u207b\u00b9 - a\u207b\u00b9 = 1) : a = -2 := by\n  field_simp  at h\u2081\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_129", "step_count": -1}
{"query": "mathd_numbertheory_551 : 1529 % 6 = 5 := by", "response": "/-\n  \u22a2 1529 % 6 = 5\n-/", "name": "mathd_numbertheory_551", "step_count": 0}
{"query": "mathd_numbertheory_551 : 1529 % 6 = 5 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_551", "step_count": -1}
{"query": "mathd_algebra_304 : 91 ^ 2 = 8281 := by", "response": "/-\n  \u22a2 91 ^ 2 = 8281\n-/", "name": "mathd_algebra_304", "step_count": 0}
{"query": "mathd_algebra_304 : 91 ^ 2 = 8281 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_304", "step_count": -1}
{"query": "amc12b_2002_p19 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * (b + c) = 152)\n    (h\u2082 : b * (c + a) = 162) (h\u2083 : c * (a + b) = 170) : a * b * c = 720 := by", "response": "/-\n  a b c : \u211d\n  h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\n  h\u2081 : a * (b + c) = 152\n  h\u2082 : b * (c + a) = 162\n  h\u2083 : c * (a + b) = 170\n  \u22a2 a * b * c = 720\n-/", "name": "amc12b_2002_p19", "step_count": 0}
{"query": "amc12b_2002_p19 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * (b + c) = 152)\n    (h\u2082 : b * (c + a) = 162) (h\u2083 : c * (a + b) = 170) : a * b * c = 720 := by\n  nlinarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "amc12b_2002_p19", "step_count": -1}
{"query": "mathd_algebra_148 (c : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = c * x ^ 3 - 9 * x + 3)\n    (h\u2081 : f 2 = 9) : c = 3 := by", "response": "/-\n  c : \u211d\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = c * x ^ 3 - 9 * x + 3\n  h\u2081 : f 2 = 9\n  \u22a2 c = 3\n-/", "name": "mathd_algebra_148", "step_count": 0}
{"query": "mathd_algebra_148 (c : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = c * x ^ 3 - 9 * x + 3)\n    (h\u2081 : f 2 = 9) : c = 3 := by\n  rw [h\u2080] at h\u2081", "response": "/-\n  c : \u211d\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = c * x ^ 3 - 9 * x + 3\n  h\u2081 : c * 2 ^ 3 - 9 * 2 + 3 = 9\n  \u22a2 c = 3\n-/", "name": "mathd_algebra_148", "step_count": 1}
{"query": "mathd_algebra_148 (c : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = c * x ^ 3 - 9 * x + 3)\n    (h\u2081 : f 2 = 9) : c = 3 := by\n  rw [h\u2080] at h\u2081\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_148", "step_count": -1}
{"query": "mathd_algebra_440 (x : \u211d) (h\u2080 : 3 / 2 / 3 = x / 10) : x = 5 := by", "response": "/-\n  x : \u211d\n  h\u2080 : 3 / 2 / 3 = x / 10\n  \u22a2 x = 5\n-/", "name": "mathd_algebra_440", "step_count": 0}
{"query": "mathd_algebra_440 (x : \u211d) (h\u2080 : 3 / 2 / 3 = x / 10) : x = 5 := by\n  field_simp  at h\u2080", "response": "/-\n  x : \u211d\n  h\u2080 : 3 * 10 = x * (2 * 3)\n  \u22a2 x = 5\n-/", "name": "mathd_algebra_440", "step_count": 1}
{"query": "mathd_algebra_440 (x : \u211d) (h\u2080 : 3 / 2 / 3 = x / 10) : x = 5 := by\n  field_simp  at h\u2080\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_440", "step_count": -1}
{"query": "mathd_numbertheory_254 : (239 + 174 + 83) % 10 = 6 := by", "response": "/-\n  \u22a2 (239 + 174 + 83) % 10 = 6\n-/", "name": "mathd_numbertheory_254", "step_count": 0}
{"query": "mathd_numbertheory_254 : (239 + 174 + 83) % 10 = 6 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_254", "step_count": -1}
{"query": "mathd_algebra_513 (a b : \u211d) (h\u2080 : 3 * a + 2 * b = 5) (h\u2081 : a + b = 2) : a = 1 \u2227 b = 1 := by", "response": "/-\n  a b : \u211d\n  h\u2080 : 3 * a + 2 * b = 5\n  h\u2081 : a + b = 2\n  \u22a2 a = 1 \u2227 b = 1\n-/\n/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_513", "step_count": 0}
{"query": "mathd_algebra_513 (a b : \u211d) (h\u2080 : 3 * a + 2 * b = 5) (h\u2081 : a + b = 2) : a = 1 \u2227 b = 1 := by\n  constructor <;> linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_513", "step_count": -1}
{"query": "mathd_algebra_143 (f g : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x + 1) (h\u2081 : \u2200 x, g x = x ^ 2 + 3) :\n    f (g 2) = 8 := by", "response": "/-\n  f g : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = x + 1\n  h\u2081 : \u2200 (x : \u211d), g x = x ^ 2 + 3\n  \u22a2 f (g 2) = 8\n-/", "name": "mathd_algebra_143", "step_count": 0}
{"query": "mathd_algebra_143 (f g : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x + 1) (h\u2081 : \u2200 x, g x = x ^ 2 + 3) :\n    f (g 2) = 8 := by\n  rw [h\u2080, h\u2081]", "response": "/-\n  f g : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = x + 1\n  h\u2081 : \u2200 (x : \u211d), g x = x ^ 2 + 3\n  \u22a2 2 ^ 2 + 3 + 1 = 8\n-/", "name": "mathd_algebra_143", "step_count": 1}
{"query": "mathd_algebra_143 (f g : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x + 1) (h\u2081 : \u2200 x, g x = x ^ 2 + 3) :\n    f (g 2) = 8 := by\n  rw [h\u2080, h\u2081]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_143", "step_count": -1}
{"query": "mathd_algebra_354 (a d : \u211d) (h\u2080 : a + 6 * d = 30) (h\u2081 : a + 10 * d = 60) :\n    a + 20 * d = 135 := by", "response": "/-\n  a d : \u211d\n  h\u2080 : a + 6 * d = 30\n  h\u2081 : a + 10 * d = 60\n  \u22a2 a + 20 * d = 135\n-/", "name": "mathd_algebra_354", "step_count": 0}
{"query": "mathd_algebra_354 (a d : \u211d) (h\u2080 : a + 6 * d = 30) (h\u2081 : a + 10 * d = 60) :\n    a + 20 * d = 135 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_354", "step_count": -1}
{"query": "mathd_algebra_246 (a b : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = a * x ^ 4 - b * x ^ 2 + x + 5)\n    (h\u2082 : f (-3) = 2) : f 3 = 8 := by", "response": "/-\n  a b : \u211d\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = a * x ^ 4 - b * x ^ 2 + x + 5\n  h\u2082 : f (-3) = 2\n  \u22a2 f 3 = 8\n-/", "name": "mathd_algebra_246", "step_count": 0}
{"query": "mathd_algebra_246 (a b : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = a * x ^ 4 - b * x ^ 2 + x + 5)\n    (h\u2082 : f (-3) = 2) : f 3 = 8 := by\n  rw [h\u2080] at h\u2082", "response": "/-\n  a b : \u211d\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = a * x ^ 4 - b * x ^ 2 + x + 5\n  h\u2082 : a * (-3) ^ 4 - b * (-3) ^ 2 + -3 + 5 = 2\n  \u22a2 f 3 = 8\n-/", "name": "mathd_algebra_246", "step_count": 1}
{"query": "mathd_algebra_246 (a b : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = a * x ^ 4 - b * x ^ 2 + x + 5)\n    (h\u2082 : f (-3) = 2) : f 3 = 8 := by\n  rw [h\u2080] at h\u2082\n  simp at h\u2082", "response": "/-\n  a b : \u211d\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = a * x ^ 4 - b * x ^ 2 + x + 5\n  h\u2082 : a * (-3) ^ 4 - b * 3 ^ 2 + -3 + 5 = 2\n  \u22a2 f 3 = 8\n-/", "name": "mathd_algebra_246", "step_count": 2}
{"query": "mathd_algebra_246 (a b : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = a * x ^ 4 - b * x ^ 2 + x + 5)\n    (h\u2082 : f (-3) = 2) : f 3 = 8 := by\n  rw [h\u2080] at h\u2082\n  simp at h\u2082\n  rw [h\u2080]", "response": "/-\n  a b : \u211d\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), f x = a * x ^ 4 - b * x ^ 2 + x + 5\n  h\u2082 : a * (-3) ^ 4 - b * 3 ^ 2 + -3 + 5 = 2\n  \u22a2 a * 3 ^ 4 - b * 3 ^ 2 + 3 + 5 = 8\n-/", "name": "mathd_algebra_246", "step_count": 3}
{"query": "mathd_algebra_246 (a b : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = a * x ^ 4 - b * x ^ 2 + x + 5)\n    (h\u2082 : f (-3) = 2) : f 3 = 8 := by\n  rw [h\u2080] at h\u2082\n  simp at h\u2082\n  rw [h\u2080]\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_246", "step_count": -1}
{"query": "mathd_numbertheory_85 : 1 * 3 ^ 3 + 2 * 3 ^ 2 + 2 * 3 + 2 = 53 := by", "response": "/-\n  \u22a2 1 * 3 ^ 3 + 2 * 3 ^ 2 + 2 * 3 + 2 = 53\n-/", "name": "mathd_numbertheory_85", "step_count": 0}
{"query": "mathd_numbertheory_85 : 1 * 3 ^ 3 + 2 * 3 ^ 2 + 2 * 3 + 2 = 53 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_85", "step_count": -1}
{"query": "amc12b_2002_p2 (x : \u2124) (h\u2080 : x = 4) :\n    (3 * x - 2) * (4 * x + 1) - (3 * x - 2) * (4 * x) + 1 = 11 := by", "response": "/-\n  x : \u2124\n  h\u2080 : x = 4\n  \u22a2 (3 * x - 2) * (4 * x + 1) - (3 * x - 2) * (4 * x) + 1 = 11\n-/", "name": "amc12b_2002_p2", "step_count": 0}
{"query": "amc12b_2002_p2 (x : \u2124) (h\u2080 : x = 4) :\n    (3 * x - 2) * (4 * x + 1) - (3 * x - 2) * (4 * x) + 1 = 11 := by\n  rw [h\u2080]", "response": "/-\n  x : \u2124\n  h\u2080 : x = 4\n  \u22a2 (3 * 4 - 2) * (4 * 4 + 1) - (3 * 4 - 2) * (4 * 4) + 1 = 11\n-/", "name": "amc12b_2002_p2", "step_count": 1}
{"query": "amc12b_2002_p2 (x : \u2124) (h\u2080 : x = 4) :\n    (3 * x - 2) * (4 * x + 1) - (3 * x - 2) * (4 * x) + 1 = 11 := by\n  rw [h\u2080]\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "amc12b_2002_p2", "step_count": -1}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by", "response": "/-\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n  \u22a2 f (f 1) = 3 / 7\n-/", "name": "mathd_algebra_270", "step_count": 0}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by\n  rw [h\u2080, h\u2080]", "response": "/-\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n  \u22a2 1 / (1 / (1 + 2) + 2) = 3 / 7\n-/", "name": "mathd_algebra_270", "step_count": 1}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by\n  rw [h\u2080, h\u2080]\n  norm_num", "response": "/-\n  case x\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n  \u22a2 1 \u2260 -2\n-/", "name": "mathd_algebra_270", "step_count": 2}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by\n  rw [h\u2080, h\u2080]\n  norm_num\n  linarith", "response": "/-\n  case x\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n  \u22a2 f 1 \u2260 -2\n-/", "name": "mathd_algebra_270", "step_count": 3}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by\n  rw [h\u2080, h\u2080]\n  norm_num\n  linarith\n  rw [h\u2080]", "response": "/-\n  case x\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n  \u22a2 1 / (1 + 2) \u2260 -2\n-/", "name": "mathd_algebra_270", "step_count": 4}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by\n  rw [h\u2080, h\u2080]\n  norm_num\n  linarith\n  rw [h\u2080]\n  norm_num", "response": "/-\n  case x.x\n  f : \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n  \u22a2 1 \u2260 -2\n-/", "name": "mathd_algebra_270", "step_count": 5}
{"query": "mathd_algebra_270 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 (x) (_ : x \u2260 -2), f x = 1 / (x + 2)) :\n    f (f 1) = 3 / 7 := by\n  rw [h\u2080, h\u2080]\n  norm_num\n  linarith\n  rw [h\u2080]\n  norm_num\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_270", "step_count": -1}
{"query": "mathd_numbertheory_66 : 194 % 11 = 7 := by", "response": "/-\n  \u22a2 194 % 11 = 7\n-/", "name": "mathd_numbertheory_66", "step_count": 0}
{"query": "mathd_numbertheory_66 : 194 % 11 = 7 := by\n  rfl", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_66", "step_count": -1}
{"query": "mathd_numbertheory_235 : (29 * 79 + 31 * 81) % 10 = 2 := by", "response": "/-\n  \u22a2 (29 * 79 + 31 * 81) % 10 = 2\n-/", "name": "mathd_numbertheory_235", "step_count": 0}
{"query": "mathd_numbertheory_235 : (29 * 79 + 31 * 81) % 10 = 2 := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_numbertheory_235", "step_count": -1}
{"query": "mathd_algebra_359 (y : \u211d) (h\u2080 : y + 6 + y = 2 * 12) : y = 9 := by", "response": "/-\n  y : \u211d\n  h\u2080 : y + 6 + y = 2 * 12\n  \u22a2 y = 9\n-/", "name": "mathd_algebra_359", "step_count": 0}
{"query": "mathd_algebra_359 (y : \u211d) (h\u2080 : y + 6 + y = 2 * 12) : y = 9 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_359", "step_count": -1}
{"query": "mathd_algebra_314 (n : \u2115) (h\u2080 : n = 11) : (1 / 4) ^ (n + 1) * 2 ^ (2 * n) = 1 / 4 := by", "response": "/-\n  n : \u2115\n  h\u2080 : n = 11\n  \u22a2 (1 / 4) ^ (n + 1) * 2 ^ (2 * n) = 1 / 4\n-/", "name": "mathd_algebra_314", "step_count": 0}
{"query": "mathd_algebra_314 (n : \u2115) (h\u2080 : n = 11) : (1 / 4) ^ (n + 1) * 2 ^ (2 * n) = 1 / 4 := by\n  rw [h\u2080]", "response": "/-\n  n : \u2115\n  h\u2080 : n = 11\n  \u22a2 (1 / 4) ^ (11 + 1) * 2 ^ (2 * 11) = 1 / 4\n-/", "name": "mathd_algebra_314", "step_count": 1}
{"query": "mathd_algebra_314 (n : \u2115) (h\u2080 : n = 11) : (1 / 4) ^ (n + 1) * 2 ^ (2 * n) = 1 / 4 := by\n  rw [h\u2080]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_314", "step_count": -1}
{"query": "mathd_algebra_302 : (Complex.I / 2) ^ 2 = -(1 / 4) := by", "response": "/-\n  \u22a2 (Complex.I / 2) ^ 2 = -(1 / 4)\n-/", "name": "mathd_algebra_302", "step_count": 0}
{"query": "mathd_algebra_302 : (Complex.I / 2) ^ 2 = -(1 / 4) := by\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_302", "step_count": -1}
{"query": "mathd_algebra_139 (s : \u211d \u2192 \u211d \u2192 \u211d)\n    (h\u2080 : \u2200 (x) (_ : x \u2260 0), \u2200 (y) (_ : y \u2260 0), s x y = (1 / y - 1 / x) / (x - y)) :\n    s 3 11 = 1 / 33 := by", "response": "/-\n  s : \u211d \u2192 \u211d \u2192 \u211d\n  h\u2080 : \u2200 (x : \u211d), x \u2260 0 \u2192 \u2200 (y : \u211d), y \u2260 0 \u2192 s x y = (1 / y - 1 / x) / (x - y)\n  \u22a2 s 3 11 = 1 / 33\n-/", "name": "mathd_algebra_139", "step_count": 0}
{"query": "mathd_algebra_139 (s : \u211d \u2192 \u211d \u2192 \u211d)\n    (h\u2080 : \u2200 (x) (_ : x \u2260 0), \u2200 (y) (_ : y \u2260 0), s x y = (1 / y - 1 / x) / (x - y)) :\n    s 3 11 = 1 / 33 := by\n  norm_num [h\u2080]", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_139", "step_count": -1}
{"query": "mathd_algebra_142 (m b : \u211d) (h\u2080 : m * 7 + b = -1) (h\u2081 : m * -1 + b = 7) : m + b = 5 := by", "response": "/-\n  m b : \u211d\n  h\u2080 : m * 7 + b = -1\n  h\u2081 : m * -1 + b = 7\n  \u22a2 m + b = 5\n-/", "name": "mathd_algebra_142", "step_count": 0}
{"query": "mathd_algebra_142 (m b : \u211d) (h\u2080 : m * 7 + b = -1) (h\u2081 : m * -1 + b = 7) : m + b = 5 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_142", "step_count": -1}
{"query": "mathd_algebra_400 (x : \u211d) (h\u2080 : 5 + 500 / 100 * 10 = 110 / 100 * x) : x = 50 := by", "response": "/-\n  x : \u211d\n  h\u2080 : 5 + 500 / 100 * 10 = 110 / 100 * x\n  \u22a2 x = 50\n-/", "name": "mathd_algebra_400", "step_count": 0}
{"query": "mathd_algebra_400 (x : \u211d) (h\u2080 : 5 + 500 / 100 * 10 = 110 / 100 * x) : x = 50 := by\n  linarith", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_400", "step_count": -1}
{"query": "mathd_algebra_441 (x : \u211d) (h\u2080 : x \u2260 0) :\n    12 / (x * x) * (x ^ 4 / (14 * x)) * (35 / (3 * x)) = 10 := by", "response": "/-\n  x : \u211d\n  h\u2080 : x \u2260 0\n  \u22a2 12 / (x * x) * (x ^ 4 / (14 * x)) * (35 / (3 * x)) = 10\n-/", "name": "mathd_algebra_441", "step_count": 0}
{"query": "mathd_algebra_441 (x : \u211d) (h\u2080 : x \u2260 0) :\n    12 / (x * x) * (x ^ 4 / (14 * x)) * (35 / (3 * x)) = 10 := by\n  field_simp", "response": "/-\n  x : \u211d\n  h\u2080 : x \u2260 0\n  \u22a2 12 * x ^ 4 * 35 = 10 * (x * x * (14 * x) * (3 * x))\n-/", "name": "mathd_algebra_441", "step_count": 1}
{"query": "mathd_algebra_441 (x : \u211d) (h\u2080 : x \u2260 0) :\n    12 / (x * x) * (x ^ 4 / (14 * x)) * (35 / (3 * x)) = 10 := by\n  field_simp\n  ring_nf", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_441", "step_count": -1}
{"query": "mathd_algebra_338 (a b c : \u211d) (h\u2080 : 3 * a + b + c = -3) (h\u2081 : a + 3 * b + c = 9)\n    (h\u2082 : a + b + 3 * c = 19) : a * b * c = -56 := by", "response": "/-\n  a b c : \u211d\n  h\u2080 : 3 * a + b + c = -3\n  h\u2081 : a + 3 * b + c = 9\n  h\u2082 : a + b + 3 * c = 19\n  \u22a2 a * b * c = -56\n-/", "name": "mathd_algebra_338", "step_count": 0}
{"query": "mathd_algebra_338 (a b c : \u211d) (h\u2080 : 3 * a + b + c = -3) (h\u2081 : a + 3 * b + c = 9)\n    (h\u2082 : a + b + 3 * c = 19) : a * b * c = -56 := by\n  have ha : a = -4; linarith", "response": "/-\n  a b c : \u211d\n  h\u2080 : 3 * a + b + c = -3\n  h\u2081 : a + 3 * b + c = 9\n  h\u2082 : a + b + 3 * c = 19\n  ha : a = -4\n  \u22a2 a * b * c = -56\n-/", "name": "mathd_algebra_338", "step_count": 1}
{"query": "mathd_algebra_338 (a b c : \u211d) (h\u2080 : 3 * a + b + c = -3) (h\u2081 : a + 3 * b + c = 9)\n    (h\u2082 : a + b + 3 * c = 19) : a * b * c = -56 := by\n  have ha : a = -4; linarith\n  have hb : b = 2; linarith", "response": "/-\n  a b c : \u211d\n  h\u2080 : 3 * a + b + c = -3\n  h\u2081 : a + 3 * b + c = 9\n  h\u2082 : a + b + 3 * c = 19\n  ha : a = -4\n  hb : b = 2\n  \u22a2 a * b * c = -56\n-/", "name": "mathd_algebra_338", "step_count": 2}
{"query": "mathd_algebra_338 (a b c : \u211d) (h\u2080 : 3 * a + b + c = -3) (h\u2081 : a + 3 * b + c = 9)\n    (h\u2082 : a + b + 3 * c = 19) : a * b * c = -56 := by\n  have ha : a = -4; linarith\n  have hb : b = 2; linarith\n  have hc : c = 7; linarith", "response": "/-\n  a b c : \u211d\n  h\u2080 : 3 * a + b + c = -3\n  h\u2081 : a + 3 * b + c = 9\n  h\u2082 : a + b + 3 * c = 19\n  ha : a = -4\n  hb : b = 2\n  hc : c = 7\n  \u22a2 a * b * c = -56\n-/", "name": "mathd_algebra_338", "step_count": 3}
{"query": "mathd_algebra_338 (a b c : \u211d) (h\u2080 : 3 * a + b + c = -3) (h\u2081 : a + 3 * b + c = 9)\n    (h\u2082 : a + b + 3 * c = 19) : a * b * c = -56 := by\n  have ha : a = -4; linarith\n  have hb : b = 2; linarith\n  have hc : c = 7; linarith\n  rw [ha, hb, hc]", "response": "/-\n  a b c : \u211d\n  h\u2080 : 3 * a + b + c = -3\n  h\u2081 : a + 3 * b + c = 9\n  h\u2082 : a + b + 3 * c = 19\n  ha : a = -4\n  hb : b = 2\n  hc : c = 7\n  \u22a2 -4 * 2 * 7 = -56\n-/", "name": "mathd_algebra_338", "step_count": 4}
{"query": "mathd_algebra_338 (a b c : \u211d) (h\u2080 : 3 * a + b + c = -3) (h\u2081 : a + 3 * b + c = 9)\n    (h\u2082 : a + b + 3 * c = 19) : a * b * c = -56 := by\n  have ha : a = -4; linarith\n  have hb : b = 2; linarith\n  have hc : c = 7; linarith\n  rw [ha, hb, hc]\n  norm_num", "response": "/-\n  \ud83c\udf89 no goals\n-/", "name": "mathd_algebra_338", "step_count": -1}
